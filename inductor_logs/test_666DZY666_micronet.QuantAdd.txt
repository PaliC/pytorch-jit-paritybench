V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['7_inference']
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/m4/cm4ktl5z67o7gi7rtkvnqlemtqtk4pb3pgn4ytqia7725dthzkt6.py
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, min_val, mul_1, min_val_1, mul_4, min_val_2, mul_5, min_val_3, observer_min_val, mul_2, max_val, mul_3, max_val_1, mul_6, max_val_2, mul_7, max_val_3, observer_max_val, truediv, sub, sign, abs_3, add_4, floor, output, clamp, add_5, output_1, truediv_3, sub_3, sign_2, abs_6, add_6, floor_1, output_2, clamp_1, add_7, output_3, output_4], Original ATen: [aten.mul, aten.min, aten.add, aten.minimum, aten.max, aten.maximum, aten.div, aten.sub, aten.sign, aten.abs, aten.floor, aten.clamp]
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   abs_3 => abs_3
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   abs_6 => abs_6
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_5 => add_5
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_6 => add_6
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_7 => add_7
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clamp => clamp_max, clamp_min
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clamp_1 => clamp_max_1, clamp_min_1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   floor => floor
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   floor_1 => floor_1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_val => max_1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_val_1 => add_1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_val_2 => max_2
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_val_3 => add_3
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   min_val => min_1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   min_val_1 => add
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   min_val_2 => min_2
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   min_val_3 => add_2
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_4
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_5 => mul_5
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_6 => mul_6
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_7 => mul_7
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   observer_max_val => maximum
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   observer_min_val => minimum
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output => mul_8
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_1 => mul_9
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_2 => mul_10
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_3 => mul_11
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_4 => add_8
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sign => sign
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sign_2 => sign_1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_3 => div_3
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg1_1, 0.9), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %min_1 : [num_users=1] = call_function[target=torch.ops.aten.min.default](args = (%arg0_1,), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%min_1, 0.1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg4_1, 0.9), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %min_2 : [num_users=1] = call_function[target=torch.ops.aten.min.default](args = (%arg3_1,), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%min_2, 0.1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, %mul_5), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %minimum : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%add, %add_2), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg2_1, 0.9), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.default](args = (%arg0_1,), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%max_1, 0.1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %mul_3), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg5_1, 0.9), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_2 : [num_users=1] = call_function[target=torch.ops.aten.max.default](args = (%arg3_1,), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%max_2, 0.1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_6, %mul_7), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %maximum : [num_users=1] = call_function[target=torch.ops.aten.maximum.default](args = (%add_1, %add_3), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%arg0_1, %arg6_1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div, %arg7_1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sign : [num_users=1] = call_function[target=torch.ops.aten.sign.default](args = (%sub,), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_3 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%sub,), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_3, 0.5), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor : [num_users=1] = call_function[target=torch.ops.aten.floor.default](args = (%add_4,), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sign, %floor), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.Tensor](args = (%mul_8, %arg8_1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.Tensor](args = (%clamp_min, %arg9_1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%clamp_max, %arg7_1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_5, %arg6_1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%arg3_1, %arg6_1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_3, %arg7_1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sign_1 : [num_users=1] = call_function[target=torch.ops.aten.sign.default](args = (%sub_3,), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_6 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%sub_3,), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_6, 0.5), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor_1 : [num_users=1] = call_function[target=torch.ops.aten.floor.default](args = (%add_6,), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sign_1, %floor_1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.Tensor](args = (%mul_10, %arg8_1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.Tensor](args = (%clamp_min_1, %arg9_1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%clamp_max_1, %arg7_1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_7, %arg6_1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_9, %mul_11), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy__2 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%arg4_1, %add_2), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy__3 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%arg5_1, %add_3), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_abs_add_clamp_div_floor_max_maximum_min_minimum_mul_sign_sub_0 = async_compile.triton('triton_per_fused_abs_add_clamp_div_floor_max_maximum_min_minimum_mul_sign_sub_0', '''
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr4': '*fp32', 'out_ptr5': '*fp32', 'out_ptr6': '*fp32', 'out_ptr8': '*fp32', 'out_ptr10': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18), 'tt.equal_to': (17,)}, 'cls': 'AttrsDescriptor'})]},
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_abs_add_clamp_div_floor_max_maximum_min_minimum_mul_sign_sub_0', 'mutated_arg_names': ['in_ptr7', 'in_ptr9', 'out_ptr10', 'out_ptr8'], 'optimize_mem': True, 'no_x_dim': True, 'num_load': 10, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_abs_add_clamp_div_floor_max_maximum_min_minimum_mul_sign_sub_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, out_ptr0, out_ptr1, out_ptr4, out_ptr5, out_ptr6, out_ptr8, out_ptr10, xnumel, rnumel):
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (r0), None)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr2 + (0))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [RBLOCK])
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr3 + (0))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [RBLOCK])
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr4 + (0))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.broadcast_to(tmp30, [RBLOCK])
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr5 + (0))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.broadcast_to(tmp33, [RBLOCK])
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.load(in_ptr6 + (0))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.broadcast_to(tmp55, [1])
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tl.load(in_ptr7 + (0))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.broadcast_to(tmp62, [1])
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tl.load(in_ptr8 + (0))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.broadcast_to(tmp68, [1])
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.load(in_ptr9 + (0))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.broadcast_to(tmp73, [1])
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [RBLOCK])
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.promote_to_tensor(triton_helpers.min2(tmp1, 0))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.promote_to_tensor(triton_helpers.max2(tmp1, 0))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [RBLOCK])
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.promote_to_tensor(triton_helpers.min2(tmp7, 0))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.promote_to_tensor(triton_helpers.max2(tmp7, 0))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp0 / tmp13
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 - tmp16
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 < tmp17
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19.to(tl.int8)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 < tmp18
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21.to(tl.int8)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 - tmp22
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23.to(tmp17.dtype)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl_math.abs(tmp17)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = 0.5
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 + tmp26
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = libdevice.floor(tmp27)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp24 * tmp28
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = triton_helpers.maximum(tmp29, tmp31)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = triton_helpers.minimum(tmp32, tmp34)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 + tmp16
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 * tmp13
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp6 / tmp13
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp38 - tmp16
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp18 < tmp39
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40.to(tl.int8)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp39 < tmp18
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42.to(tl.int8)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp41 - tmp43
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp44.to(tmp39.dtype)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl_math.abs(tmp39)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 + tmp26
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = libdevice.floor(tmp47)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp45 * tmp48
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = triton_helpers.maximum(tmp49, tmp31)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = triton_helpers.minimum(tmp50, tmp34)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 + tmp16
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52 * tmp13
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp37 + tmp53
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = 0.9
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp56 * tmp57
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = 0.1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp3 * tmp59
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp58 + tmp60
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp63 * tmp57
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp9 * tmp59
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp64 + tmp65
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = triton_helpers.minimum(tmp61, tmp66)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp69 * tmp57
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp5 * tmp59
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp70 + tmp71
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp74 * tmp57
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp11 * tmp59
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp75 + tmp76
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = triton_helpers.maximum(tmp72, tmp77)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr4 + (tl.broadcast_to(r0, [RBLOCK])), tmp54, None)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr5 + (tl.full([1], 0, tl.int32)), tmp67, None)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr6 + (tl.full([1], 0, tl.int32)), tmp78, None)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr8 + (tl.full([1], 0, tl.int32)), tmp66, None)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr10 + (tl.full([1], 0, tl.int32)), tmp77, None)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([1], 0, tl.int32)), tmp3, None)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.full([1], 0, tl.int32)), tmp5, None)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/f7/cf74kcy2dsdlho3ka72ulfasqo6uesrygcslqwyv2myupgd5xfos.py
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, mul_1, min_val_1], Original ATen: [aten.mul, aten.add]
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   min_val_1 => add
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg1_1, 0.9), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%min_1, 0.1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_1), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%arg1_1, %add), kwargs = {})
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_1 = async_compile.triton('triton_poi_fused_add_mul_1', '''
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_1', 'mutated_arg_names': ['in_out_ptr0', 'in_ptr0', 'out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_1(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_out_ptr0 + (0))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [XBLOCK])
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.9
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 * tmp6
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp3 + tmp7
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp8, None)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1, arg4_1, arg5_1, arg6_1, arg7_1, arg8_1, arg9_1 = args
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (1, ), (1, ))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (1, ), (1, ))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg3_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg4_1, (1, ), (1, ))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg5_1, (1, ), (1, ))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg6_1, (1, ), (1, ))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg7_1, (1, ), (1, ))
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg8_1, (), ())
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg9_1, (), ())
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((), (), torch.float32)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((), (), torch.float32)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((1, ), (1, ), torch.float32)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((1, ), (1, ), torch.float32)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, min_val, mul_1, min_val_1, mul_4, min_val_2, mul_5, min_val_3, observer_min_val, mul_2, max_val, mul_3, max_val_1, mul_6, max_val_2, mul_7, max_val_3, observer_max_val, truediv, sub, sign, abs_3, add_4, floor, output, clamp, add_5, output_1, truediv_3, sub_3, sign_2, abs_6, add_6, floor_1, output_2, clamp_1, add_7, output_3, output_4], Original ATen: [aten.mul, aten.min, aten.add, aten.minimum, aten.max, aten.maximum, aten.div, aten.sub, aten.sign, aten.abs, aten.floor, aten.clamp]
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_abs_add_clamp_div_floor_max_maximum_min_minimum_mul_sign_sub_0.run(arg0_1, arg3_1, arg6_1, arg7_1, arg8_1, arg9_1, arg1_1, arg4_1, arg2_1, arg5_1, buf0, buf2, buf4, buf7, buf11, arg4_1, arg5_1, 1, 256, grid=grid(1), stream=stream0)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg3_1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg4_1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg5_1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg6_1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg7_1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg8_1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg9_1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf0, (1, ), (1, ), 0); del buf0  # reuse
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, mul_1, min_val_1], Original ATen: [aten.mul, aten.add]
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_1.run(buf6, arg1_1, arg1_1, 1, grid=grid(1), stream=stream0)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf2, (1, ), (1, ), 0); del buf2  # reuse
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_2, mul_3, max_val_1], Original ATen: [aten.mul, aten.add]
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_1.run(buf10, arg2_1, arg2_1, 1, grid=grid(1), stream=stream0)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf4, buf7, buf11, )
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg3_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg4_1 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg5_1 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg6_1 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg7_1 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg8_1 = rand_strided((), (), device='cuda:0', dtype=torch.float32)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg9_1 = rand_strided((), (), device='cuda:0', dtype=torch.float32)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1, arg4_1, arg5_1, arg6_1, arg7_1, arg8_1, arg9_1])
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:23:21.932000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:21.936000 3371744 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/bc/cbco5cxd6bumh6ckiaesfmru7jlvftfdcinrxee3tfk7ohhhabzp.py
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['7_inference']
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/m4/cm4ktl5z67o7gi7rtkvnqlemtqtk4pb3pgn4ytqia7725dthzkt6.py
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, min_val, mul_1, min_val_1, mul_4, min_val_2, mul_5, min_val_3, observer_min_val, mul_2, max_val, mul_3, max_val_1, mul_6, max_val_2, mul_7, max_val_3, observer_max_val, truediv, sub, sign, abs_3, add_4, floor, output, clamp, add_5, output_1, truediv_3, sub_3, sign_2, abs_6, add_6, floor_1, output_2, clamp_1, add_7, output_3, output_4], Original ATen: [aten.mul, aten.min, aten.add, aten.minimum, aten.max, aten.maximum, aten.div, aten.sub, aten.sign, aten.abs, aten.floor, aten.clamp]
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   abs_3 => abs_3
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   abs_6 => abs_6
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_5 => add_5
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_6 => add_6
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_7 => add_7
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clamp => clamp_max, clamp_min
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clamp_1 => clamp_max_1, clamp_min_1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   floor => floor
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   floor_1 => floor_1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_val => max_1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_val_1 => add_1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_val_2 => max_2
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_val_3 => add_3
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   min_val => min_1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   min_val_1 => add
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   min_val_2 => min_2
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   min_val_3 => add_2
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_4
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_5 => mul_5
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_6 => mul_6
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_7 => mul_7
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   observer_max_val => maximum
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   observer_min_val => minimum
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output => mul_8
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_1 => mul_9
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_2 => mul_10
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_3 => mul_11
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_4 => add_8
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sign => sign
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sign_2 => sign_1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_3 => div_3
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg1_1, 0.9), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %min_1 : [num_users=1] = call_function[target=torch.ops.aten.min.default](args = (%arg0_1,), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%min_1, 0.1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg4_1, 0.9), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %min_2 : [num_users=1] = call_function[target=torch.ops.aten.min.default](args = (%arg3_1,), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%min_2, 0.1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, %mul_5), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %minimum : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%add, %add_2), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg2_1, 0.9), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.default](args = (%arg0_1,), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%max_1, 0.1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %mul_3), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg5_1, 0.9), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_2 : [num_users=1] = call_function[target=torch.ops.aten.max.default](args = (%arg3_1,), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%max_2, 0.1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_6, %mul_7), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %maximum : [num_users=1] = call_function[target=torch.ops.aten.maximum.default](args = (%add_1, %add_3), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%arg0_1, %arg6_1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div, %arg7_1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sign : [num_users=1] = call_function[target=torch.ops.aten.sign.default](args = (%sub,), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_3 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%sub,), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_3, 0.5), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor : [num_users=1] = call_function[target=torch.ops.aten.floor.default](args = (%add_4,), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sign, %floor), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.Tensor](args = (%mul_8, %arg8_1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.Tensor](args = (%clamp_min, %arg9_1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%clamp_max, %arg7_1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_5, %arg6_1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%arg3_1, %arg6_1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_3, %arg7_1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sign_1 : [num_users=1] = call_function[target=torch.ops.aten.sign.default](args = (%sub_3,), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_6 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%sub_3,), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_6, 0.5), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor_1 : [num_users=1] = call_function[target=torch.ops.aten.floor.default](args = (%add_6,), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sign_1, %floor_1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.Tensor](args = (%mul_10, %arg8_1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.Tensor](args = (%clamp_min_1, %arg9_1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%clamp_max_1, %arg7_1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_7, %arg6_1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_9, %mul_11), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy__2 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%arg4_1, %add_2), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy__3 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%arg5_1, %add_3), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_abs_add_clamp_div_floor_max_maximum_min_minimum_mul_sign_sub_0 = async_compile.triton('triton_per_fused_abs_add_clamp_div_floor_max_maximum_min_minimum_mul_sign_sub_0', '''
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr4': '*fp32', 'out_ptr5': '*fp32', 'out_ptr6': '*fp32', 'out_ptr8': '*fp32', 'out_ptr10': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18), 'tt.equal_to': (17,)}, 'cls': 'AttrsDescriptor'})]},
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_abs_add_clamp_div_floor_max_maximum_min_minimum_mul_sign_sub_0', 'mutated_arg_names': ['in_ptr7', 'in_ptr9', 'out_ptr10', 'out_ptr8'], 'optimize_mem': True, 'no_x_dim': True, 'num_load': 10, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_abs_add_clamp_div_floor_max_maximum_min_minimum_mul_sign_sub_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, out_ptr0, out_ptr1, out_ptr4, out_ptr5, out_ptr6, out_ptr8, out_ptr10, xnumel, rnumel):
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (r0), None)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr2 + (0))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [RBLOCK])
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr3 + (0))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [RBLOCK])
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr4 + (0))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.broadcast_to(tmp30, [RBLOCK])
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr5 + (0))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.broadcast_to(tmp33, [RBLOCK])
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.load(in_ptr6 + (0))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.broadcast_to(tmp55, [1])
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tl.load(in_ptr7 + (0))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.broadcast_to(tmp62, [1])
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tl.load(in_ptr8 + (0))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.broadcast_to(tmp68, [1])
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.load(in_ptr9 + (0))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.broadcast_to(tmp73, [1])
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [RBLOCK])
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.promote_to_tensor(triton_helpers.min2(tmp1, 0))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.promote_to_tensor(triton_helpers.max2(tmp1, 0))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [RBLOCK])
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.promote_to_tensor(triton_helpers.min2(tmp7, 0))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.promote_to_tensor(triton_helpers.max2(tmp7, 0))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp0 / tmp13
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 - tmp16
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 < tmp17
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19.to(tl.int8)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 < tmp18
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21.to(tl.int8)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 - tmp22
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23.to(tmp17.dtype)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl_math.abs(tmp17)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = 0.5
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 + tmp26
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = libdevice.floor(tmp27)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp24 * tmp28
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = triton_helpers.maximum(tmp29, tmp31)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = triton_helpers.minimum(tmp32, tmp34)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 + tmp16
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 * tmp13
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp6 / tmp13
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp38 - tmp16
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp18 < tmp39
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40.to(tl.int8)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp39 < tmp18
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42.to(tl.int8)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp41 - tmp43
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp44.to(tmp39.dtype)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl_math.abs(tmp39)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 + tmp26
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = libdevice.floor(tmp47)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp45 * tmp48
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = triton_helpers.maximum(tmp49, tmp31)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = triton_helpers.minimum(tmp50, tmp34)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 + tmp16
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52 * tmp13
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp37 + tmp53
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = 0.9
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp56 * tmp57
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = 0.1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp3 * tmp59
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp58 + tmp60
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp63 * tmp57
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp9 * tmp59
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp64 + tmp65
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = triton_helpers.minimum(tmp61, tmp66)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp69 * tmp57
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp5 * tmp59
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp70 + tmp71
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp74 * tmp57
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp11 * tmp59
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp75 + tmp76
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = triton_helpers.maximum(tmp72, tmp77)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr4 + (tl.broadcast_to(r0, [RBLOCK])), tmp54, None)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr5 + (tl.full([1], 0, tl.int32)), tmp67, None)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr6 + (tl.full([1], 0, tl.int32)), tmp78, None)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr8 + (tl.full([1], 0, tl.int32)), tmp66, None)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr10 + (tl.full([1], 0, tl.int32)), tmp77, None)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([1], 0, tl.int32)), tmp3, None)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.full([1], 0, tl.int32)), tmp5, None)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/f7/cf74kcy2dsdlho3ka72ulfasqo6uesrygcslqwyv2myupgd5xfos.py
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, mul_1, min_val_1], Original ATen: [aten.mul, aten.add]
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   min_val_1 => add
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg1_1, 0.9), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%min_1, 0.1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_1), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%arg1_1, %add), kwargs = {})
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_1 = async_compile.triton('triton_poi_fused_add_mul_1', '''
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_1', 'mutated_arg_names': ['in_out_ptr0', 'in_ptr0', 'out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_1(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_out_ptr0 + (0))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [XBLOCK])
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.9
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 * tmp6
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp3 + tmp7
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp8, None)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1, arg4_1, arg5_1, arg6_1, arg7_1, arg8_1, arg9_1 = args
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (1, ), (1, ))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (1, ), (1, ))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg3_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg4_1, (1, ), (1, ))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg5_1, (1, ), (1, ))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg6_1, (1, ), (1, ))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg7_1, (1, ), (1, ))
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg8_1, (), ())
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg9_1, (), ())
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((), (), torch.float32)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((), (), torch.float32)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((1, ), (1, ), torch.float32)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((1, ), (1, ), torch.float32)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, min_val, mul_1, min_val_1, mul_4, min_val_2, mul_5, min_val_3, observer_min_val, mul_2, max_val, mul_3, max_val_1, mul_6, max_val_2, mul_7, max_val_3, observer_max_val, truediv, sub, sign, abs_3, add_4, floor, output, clamp, add_5, output_1, truediv_3, sub_3, sign_2, abs_6, add_6, floor_1, output_2, clamp_1, add_7, output_3, output_4], Original ATen: [aten.mul, aten.min, aten.add, aten.minimum, aten.max, aten.maximum, aten.div, aten.sub, aten.sign, aten.abs, aten.floor, aten.clamp]
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_abs_add_clamp_div_floor_max_maximum_min_minimum_mul_sign_sub_0.run(arg0_1, arg3_1, arg6_1, arg7_1, arg8_1, arg9_1, arg1_1, arg4_1, arg2_1, arg5_1, buf0, buf2, buf4, buf7, buf11, arg4_1, arg5_1, 1, 256, grid=grid(1), stream=stream0)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg3_1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg4_1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg5_1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg6_1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg7_1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg8_1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg9_1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf0, (1, ), (1, ), 0); del buf0  # reuse
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, mul_1, min_val_1], Original ATen: [aten.mul, aten.add]
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_1.run(buf6, arg1_1, arg1_1, 1, grid=grid(1), stream=stream0)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf2, (1, ), (1, ), 0); del buf2  # reuse
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_2, mul_3, max_val_1], Original ATen: [aten.mul, aten.add]
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_1.run(buf10, arg2_1, arg2_1, 1, grid=grid(1), stream=stream0)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf4, buf7, buf11, )
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg3_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg4_1 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg5_1 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg6_1 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg7_1 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg8_1 = rand_strided((), (), device='cuda:0', dtype=torch.float32)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg9_1 = rand_strided((), (), device='cuda:0', dtype=torch.float32)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1, arg4_1, arg5_1, arg6_1, arg7_1, arg8_1, arg9_1])
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:13:19.429000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:19.436000 2034518 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/sa/csasljkio46k7dqvq3unljtqrvjcfbluqhua3wywmr33bkdcmmkg.py
