V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/k4/ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mean, mean_2, pow_1, mean_3, mean_sq], Original ATen: [aten.mean, aten.pow]
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_2 => mean_1
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_3 => mean_2
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_sq => mean_3
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_1, [2], True), kwargs = {})
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mean, [0], True), kwargs = {})
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_1, 2), kwargs = {})
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_2 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%pow_1, [2], True), kwargs = {})
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_3 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mean_2, [0], True), kwargs = {})
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_pow_0 = async_compile.triton('triton_poi_fused_mean_pow_0', '''
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_pow_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_pow_0(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (16 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (17 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (18 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (19 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (32 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (33 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (34 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (35 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (48 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (49 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr0 + (50 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (51 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 / tmp7
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 + tmp16
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 + tmp23
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 / tmp7
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp17 + tmp25
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 + tmp28
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 + tmp30
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 / tmp7
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp26 + tmp34
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 / tmp7
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp0 * tmp0
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp1 * tmp1
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 + tmp38
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp3 * tmp3
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 + tmp40
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp5 * tmp5
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp41 + tmp42
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 / tmp7
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp9 * tmp9
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp10 * tmp10
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp45 + tmp46
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp12 * tmp12
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp47 + tmp48
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp14 * tmp14
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp49 + tmp50
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 / tmp7
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp44 + tmp52
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp18 * tmp18
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp19 * tmp19
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp54 + tmp55
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp21 * tmp21
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp56 + tmp57
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp23 * tmp23
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp58 + tmp59
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp60 / tmp7
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp53 + tmp61
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp27 * tmp27
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp28 * tmp28
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp63 + tmp64
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp30 * tmp30
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp65 + tmp66
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp32 * tmp32
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp67 + tmp68
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp69 / tmp7
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp62 + tmp70
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp71 / tmp7
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp36, xmask)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp72, xmask)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/iw/ciwhhw3ogkbp5t4apfiaunyizksp53jsgkywfqsupbg2oym2ov75.py
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, mul_1, mean_5], Original ATen: [aten.mul, aten.add]
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_5 => add
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean_1, 0.2), kwargs = {})
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_2, 0.8), kwargs = {})
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_1), kwargs = {})
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_1 = async_compile.triton('triton_poi_fused_add_mul_1', '''
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_1(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x2), xmask)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.2
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.8
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 + tmp5
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ej/cej3fsjptqst7yo3u337lr2a6rlfprvdd2ojpighrl3t756qigjp.py
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add_2, pow_2, sub, std, x, x_1, x_2, x_3], Original ATen: [aten.add, aten.pow, aten.sub, aten.sqrt, aten.div, aten.mul]
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std => sqrt
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => sub_1
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => div
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => mul_4
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => add_3
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_1, 1e-05), kwargs = {})
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add, 2), kwargs = {})
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_2, %pow_2), kwargs = {})
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%sub,), kwargs = {})
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_1, %add), kwargs = {})
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_1, %sqrt), kwargs = {})
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, %primals_4), kwargs = {})
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, %primals_5), kwargs = {})
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_mul_pow_sqrt_sub_2 = async_compile.triton('triton_poi_fused_add_div_mul_pow_sqrt_sub_2', '''
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_mul_pow_sqrt_sub_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_mul_pow_sqrt_sub_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 16)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x4), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x4), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp1 * tmp1
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 - tmp6
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp2 / tmp8
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 * tmp10
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp13, xmask)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4), (4, 1))
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, 4, 1), (4, 1, 1))
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (1, 4, 1), (4, 1, 1))
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((1, 4, 1), (4, 1, 4), torch.float32)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((1, 4, 1), (4, 1, 4), torch.float32)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mean, mean_2, pow_1, mean_3, mean_sq], Original ATen: [aten.mean, aten.pow]
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_pow_0.run(primals_1, buf0, buf1, 4, grid=grid(4), stream=stream0)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((1, 4, 4), (16, 4, 1), torch.float32)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, mul_1, mean_5], Original ATen: [aten.mul, aten.add]
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_1.run(buf0, primals_2, buf2, 16, grid=grid(16), stream=stream0)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((1, 4, 4), (16, 4, 1), torch.float32)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_2, mul_3, mean_sq_1], Original ATen: [aten.mul, aten.add]
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_1.run(buf1, primals_3, buf3, 16, grid=grid(16), stream=stream0)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add_2, pow_2, sub, std, x, x_1, x_2, x_3], Original ATen: [aten.add, aten.pow, aten.sub, aten.sqrt, aten.div, aten.mul]
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_mul_pow_sqrt_sub_2.run(primals_1, buf2, buf3, primals_4, primals_5, buf4, 64, grid=grid(64), stream=stream0)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf4, buf2, buf3, primals_1, buf2, buf3, )
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((1, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:52:39.700000 2172152 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:52:39.706000 2172152 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/2u/c2ugxehawk7d7cxdm3jg62iqoepwusdaogvact72af3ltm4yne7b.py
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/k4/ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mean, mean_2, pow_1, mean_3, mean_sq], Original ATen: [aten.mean, aten.pow]
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_2 => mean_1
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_3 => mean_2
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_sq => mean_3
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_1, [2], True), kwargs = {})
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mean, [0], True), kwargs = {})
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_1, 2), kwargs = {})
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_2 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%pow_1, [2], True), kwargs = {})
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_3 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mean_2, [0], True), kwargs = {})
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_pow_0 = async_compile.triton('triton_poi_fused_mean_pow_0', '''
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_pow_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_pow_0(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (16 + 4*x0), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (17 + 4*x0), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (18 + 4*x0), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (19 + 4*x0), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (32 + 4*x0), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (33 + 4*x0), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (34 + 4*x0), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (35 + 4*x0), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (48 + 4*x0), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (49 + 4*x0), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr0 + (50 + 4*x0), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (51 + 4*x0), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 / tmp7
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 + tmp16
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 + tmp23
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 / tmp7
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp17 + tmp25
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 + tmp28
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 + tmp30
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 / tmp7
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp26 + tmp34
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 / tmp7
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp0 * tmp0
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp1 * tmp1
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 + tmp38
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp3 * tmp3
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 + tmp40
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp5 * tmp5
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp41 + tmp42
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 / tmp7
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp9 * tmp9
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp10 * tmp10
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp45 + tmp46
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp12 * tmp12
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp47 + tmp48
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp14 * tmp14
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp49 + tmp50
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 / tmp7
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp44 + tmp52
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp18 * tmp18
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp19 * tmp19
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp54 + tmp55
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp21 * tmp21
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp56 + tmp57
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp23 * tmp23
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp58 + tmp59
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp60 / tmp7
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp53 + tmp61
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp27 * tmp27
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp28 * tmp28
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp63 + tmp64
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp30 * tmp30
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp65 + tmp66
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp32 * tmp32
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp67 + tmp68
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp69 / tmp7
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp62 + tmp70
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp71 / tmp7
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp36, xmask)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp72, xmask)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/iw/ciwhhw3ogkbp5t4apfiaunyizksp53jsgkywfqsupbg2oym2ov75.py
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, mul_1, mean_5], Original ATen: [aten.mul, aten.add]
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_5 => add
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean_1, 0.2), kwargs = {})
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_2, 0.8), kwargs = {})
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_1), kwargs = {})
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_1 = async_compile.triton('triton_poi_fused_add_mul_1', '''
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_1(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x2), xmask)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.2
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.8
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 + tmp5
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ej/cej3fsjptqst7yo3u337lr2a6rlfprvdd2ojpighrl3t756qigjp.py
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add_2, pow_2, sub, std, x, x_1, x_2, x_3], Original ATen: [aten.add, aten.pow, aten.sub, aten.sqrt, aten.div, aten.mul]
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std => sqrt
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => sub_1
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => div
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => mul_4
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => add_3
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_1, 1e-05), kwargs = {})
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add, 2), kwargs = {})
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_2, %pow_2), kwargs = {})
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%sub,), kwargs = {})
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_1, %add), kwargs = {})
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_1, %sqrt), kwargs = {})
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, %primals_4), kwargs = {})
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, %primals_5), kwargs = {})
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_mul_pow_sqrt_sub_2 = async_compile.triton('triton_poi_fused_add_div_mul_pow_sqrt_sub_2', '''
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_mul_pow_sqrt_sub_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_mul_pow_sqrt_sub_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 16)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x4), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x4), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp1 * tmp1
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 - tmp6
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp2 / tmp8
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 * tmp10
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp13, xmask)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4), (4, 1))
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, 4, 1), (4, 1, 1))
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (1, 4, 1), (4, 1, 1))
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((1, 4, 1), (4, 1, 4), torch.float32)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((1, 4, 1), (4, 1, 4), torch.float32)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mean, mean_2, pow_1, mean_3, mean_sq], Original ATen: [aten.mean, aten.pow]
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_pow_0.run(primals_1, buf0, buf1, 4, grid=grid(4), stream=stream0)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((1, 4, 4), (16, 4, 1), torch.float32)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, mul_1, mean_5], Original ATen: [aten.mul, aten.add]
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_1.run(buf0, primals_2, buf2, 16, grid=grid(16), stream=stream0)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((1, 4, 4), (16, 4, 1), torch.float32)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_2, mul_3, mean_sq_1], Original ATen: [aten.mul, aten.add]
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_1.run(buf1, primals_3, buf3, 16, grid=grid(16), stream=stream0)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add_2, pow_2, sub, std, x, x_1, x_2, x_3], Original ATen: [aten.add, aten.pow, aten.sub, aten.sqrt, aten.div, aten.mul]
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_mul_pow_sqrt_sub_2.run(primals_1, buf2, buf3, primals_4, primals_5, buf4, 64, grid=grid(64), stream=stream0)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf4, buf2, buf3, primals_1, buf2, buf3, )
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((1, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:41:59.141000 3704751 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:41:59.147000 3704751 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/ai/cai5evlibnjctufsmlddeb5osn76ddaeajsfkdetxbseolmqtohy.py
