V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['14_forward']
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/eo/ceooj63m3y4hnbfyx42f4l3thz2ttsxlenhkvswg24pluxmifycp.py
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4096, 'x': 64}, tile_hint=TileHint.SQUARE,
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 2304
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 49
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 49*y3), xmask & ymask, eviction_policy='evict_last')
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 147*y1), tmp0, xmask & ymask)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/f3/cf3yvvrx2dp4pn5dwcyzm6qhg7y76yekqxcww4ry23bgzk3jew7k.py
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4096}, tile_hint=TileHint.SQUARE,
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 12
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 4096*y3), ymask, eviction_policy='evict_last')
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 12288*y1), tmp0, ymask)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ay/caytypv7v6ws5tkd322gzyvtsgwb6652af47u74qezccdygoxrl6.py
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_2], Original ATen: [aten.convolution, aten.native_layer_norm]
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => convolution
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => add, add_1, clone, mul, mul_1, rsqrt, sub, var_mean
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [4, 4], [3, 3], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=2] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%clone, [2]), kwargs = {correction: 0, keepdim: True})
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clone, %getitem_1), kwargs = {})
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %primals_4), kwargs = {})
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %primals_5), kwargs = {})
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_convolution_native_layer_norm_2 = async_compile.triton('triton_per_fused_convolution_native_layer_norm_2', '''
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024, 'r': 1024},
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_convolution_native_layer_norm_2', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1'], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 4, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_convolution_native_layer_norm_2(in_out_ptr0, in_out_ptr1, in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, xnumel, rnumel):
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 768
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 1024
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r1 + 768*x0), rmask, other=0.0)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (r1), rmask, eviction_policy='evict_last', other=0.0)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr1 + (r1), rmask, eviction_policy='evict_last', other=0.0)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr2 + (r1), rmask, eviction_policy='evict_last', other=0.0)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [RBLOCK])
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(rmask, tmp3, 0)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp3, [RBLOCK])
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(rmask, tmp6, 0)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.promote_to_tensor(tl.sum(tmp8, 0))
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 768, tl.int32)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10.to(tl.float32)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 / tmp11
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp3 - tmp12
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp13
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [RBLOCK])
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.where(rmask, tmp15, 0)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = triton_helpers.promote_to_tensor(tl.sum(tmp17, 0))
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 768.0
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 / tmp19
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1e-05
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.rsqrt(tmp22)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp2 - tmp12
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 * tmp23
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 * tmp26
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 + tmp28
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r1 + 768*x0), tmp2, rmask)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr1 + (x0), tmp23, None)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (r1 + 768*x0), tmp29, rmask)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp12, None)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (768, 3, 7, 7), (147, 49, 7, 1))
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (768, ), (1, ))
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 3, 64, 64), (12288, 4096, 64, 1))
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (768, ), (1, ))
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (768, ), (1, ))
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((768, 3, 7, 7), (147, 1, 21, 3), torch.float32)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_1, buf0, 2304, 49, grid=grid(2304, 49), stream=stream0)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 3, 64, 64), (12288, 1, 192, 3), torch.float32)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_3, buf1, 12, 4096, grid=grid(12, 4096), stream=stream0)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, buf0, stride=(4, 4), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 768, 16, 16), (196608, 1, 12288, 768))
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 256, 1), (256, 1, 1), torch.float32)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 256, 1), (256, 1, 1024), torch.float32)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf5, (4, 256, 1), (256, 1, 1), 0); del buf5  # reuse
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 256, 768), (196608, 768, 1), torch.float32)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_2], Original ATen: [aten.convolution, aten.native_layer_norm]
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_convolution_native_layer_norm_2.run(buf3, buf7, primals_2, primals_4, primals_5, buf4, buf8, 1024, 768, grid=grid(1024), stream=stream0)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf8, buf0, buf1, primals_4, buf3, buf4, buf7, )
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((768, 3, 7, 7), (147, 49, 7, 1), device='cuda:0', dtype=torch.float32)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:27:56.863000 3002285 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:27:56.869000 3002285 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/7c/c7cwevqjacah5oncttns6s2zdnpabtfgxfasfazrde4bizkzkafd.py
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['14_forward']
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/eo/ceooj63m3y4hnbfyx42f4l3thz2ttsxlenhkvswg24pluxmifycp.py
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4096, 'x': 64}, tile_hint=TileHint.SQUARE,
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 2304
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 49
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 49*y3), xmask & ymask, eviction_policy='evict_last')
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 147*y1), tmp0, xmask & ymask)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/f3/cf3yvvrx2dp4pn5dwcyzm6qhg7y76yekqxcww4ry23bgzk3jew7k.py
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4096}, tile_hint=TileHint.SQUARE,
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 12
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 4096*y3), ymask, eviction_policy='evict_last')
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 12288*y1), tmp0, ymask)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ay/caytypv7v6ws5tkd322gzyvtsgwb6652af47u74qezccdygoxrl6.py
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_2], Original ATen: [aten.convolution, aten.native_layer_norm]
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => convolution
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => add, add_1, clone, mul, mul_1, rsqrt, sub, var_mean
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [4, 4], [3, 3], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=2] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%clone, [2]), kwargs = {correction: 0, keepdim: True})
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clone, %getitem_1), kwargs = {})
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %primals_4), kwargs = {})
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %primals_5), kwargs = {})
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_convolution_native_layer_norm_2 = async_compile.triton('triton_per_fused_convolution_native_layer_norm_2', '''
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024, 'r': 1024},
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_convolution_native_layer_norm_2', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1'], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 4, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_convolution_native_layer_norm_2(in_out_ptr0, in_out_ptr1, in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, xnumel, rnumel):
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 768
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 1024
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r1 + 768*x0), rmask, other=0.0)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (r1), rmask, eviction_policy='evict_last', other=0.0)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr1 + (r1), rmask, eviction_policy='evict_last', other=0.0)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr2 + (r1), rmask, eviction_policy='evict_last', other=0.0)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [RBLOCK])
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(rmask, tmp3, 0)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp3, [RBLOCK])
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(rmask, tmp6, 0)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.promote_to_tensor(tl.sum(tmp8, 0))
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 768, tl.int32)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10.to(tl.float32)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 / tmp11
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp3 - tmp12
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp13
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [RBLOCK])
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.where(rmask, tmp15, 0)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = triton_helpers.promote_to_tensor(tl.sum(tmp17, 0))
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 768.0
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 / tmp19
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1e-05
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.rsqrt(tmp22)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp2 - tmp12
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 * tmp23
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 * tmp26
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 + tmp28
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r1 + 768*x0), tmp2, rmask)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr1 + (x0), tmp23, None)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (r1 + 768*x0), tmp29, rmask)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp12, None)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (768, 3, 7, 7), (147, 49, 7, 1))
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (768, ), (1, ))
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 3, 64, 64), (12288, 4096, 64, 1))
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (768, ), (1, ))
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (768, ), (1, ))
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((768, 3, 7, 7), (147, 1, 21, 3), torch.float32)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_1, buf0, 2304, 49, grid=grid(2304, 49), stream=stream0)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 3, 64, 64), (12288, 1, 192, 3), torch.float32)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_3, buf1, 12, 4096, grid=grid(12, 4096), stream=stream0)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, buf0, stride=(4, 4), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 768, 16, 16), (196608, 1, 12288, 768))
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 256, 1), (256, 1, 1), torch.float32)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 256, 1), (256, 1, 1024), torch.float32)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf5, (4, 256, 1), (256, 1, 1), 0); del buf5  # reuse
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 256, 768), (196608, 768, 1), torch.float32)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_2], Original ATen: [aten.convolution, aten.native_layer_norm]
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_convolution_native_layer_norm_2.run(buf3, buf7, primals_2, primals_4, primals_5, buf4, buf8, 1024, 768, grid=grid(1024), stream=stream0)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf8, buf0, buf1, primals_4, buf3, buf4, buf7, )
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((768, 3, 7, 7), (147, 49, 7, 1), device='cuda:0', dtype=torch.float32)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 21:16:45.556000 439832 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:16:45.563000 439832 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/c5/cc5wmmf3ujv3l3bl4qees32p7v6bpt65pxksjlkb4apweh6vd7yh.py
