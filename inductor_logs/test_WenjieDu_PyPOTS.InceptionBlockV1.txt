V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['29_forward']
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/so/csorrlpxiuk4v36p4amj7g7t7kxfnerqyhl7u5q7jxzqf2jvc7mm.py
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [stack], Original ATen: [aten.stack]
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   stack => cat
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5], -1), kwargs = {})
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_stack_0 = async_compile.triton('triton_poi_fused_stack_0', '''
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_stack_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_stack_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1536
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 6
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 96) % 4)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x4), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full(tmp7.shape, 0.0, tmp7.dtype)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(tmp4, tmp7, tmp8)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp0 >= tmp3
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 2, tl.int64)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp0 < tmp11
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10 & tmp12
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr2 + (x4), tmp13 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr3 + (x2), tmp13 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full(tmp16.shape, 0.0, tmp16.dtype)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp13, tmp16, tmp17)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp0 >= tmp11
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.full([1], 3, tl.int64)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp0 < tmp20
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp19 & tmp21
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr4 + (x4), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full(tmp25.shape, 0.0, tmp25.dtype)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.where(tmp22, tmp25, tmp26)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp0 >= tmp20
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.full([1], 4, tl.int64)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp0 < tmp29
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp28 & tmp30
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr6 + (x4), tmp31 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr7 + (x2), tmp31 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 + tmp33
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.full(tmp34.shape, 0.0, tmp34.dtype)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.where(tmp31, tmp34, tmp35)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp0 >= tmp29
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.full([1], 5, tl.int64)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp0 < tmp38
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp37 & tmp39
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr8 + (x4), tmp40 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.load(in_ptr9 + (x2), tmp40 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp41 + tmp42
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.full(tmp43.shape, 0.0, tmp43.dtype)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp40, tmp43, tmp44)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp0 >= tmp38
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.full([1], 6, tl.int64)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp0 < tmp47
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr10 + (x4), tmp46 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr11 + (x2), tmp46 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp49 + tmp50
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.full(tmp51.shape, 0.0, tmp51.dtype)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.where(tmp46, tmp51, tmp52)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.where(tmp40, tmp45, tmp53)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.where(tmp31, tmp36, tmp54)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.where(tmp22, tmp27, tmp55)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.where(tmp13, tmp18, tmp56)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.where(tmp4, tmp9, tmp57)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp58, xmask)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/da/cdaxnjhhelwwmyb32d7nrrcllfe7ktpjz25pb3svbs3irhztur5r.py
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [res], Original ATen: [aten.mean]
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   res => mean
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%cat, [-1]), kwargs = {})
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_1 = async_compile.triton('triton_poi_fused_mean_1', '''
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (6*x0), xmask, eviction_policy='evict_last')
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 6*x0), xmask, eviction_policy='evict_last')
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 6*x0), xmask, eviction_policy='evict_last')
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 6*x0), xmask, eviction_policy='evict_last')
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4 + 6*x0), xmask, eviction_policy='evict_last')
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (5 + 6*x0), xmask, eviction_policy='evict_last')
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 6.0
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 / tmp11
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp12, xmask)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13 = args
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4, 3, 3), (36, 9, 3, 1))
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4, 5, 5), (100, 25, 5, 1))
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4, 7, 7), (196, 49, 7, 1))
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, 4, 9, 9), (324, 81, 9, 1))
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, 4, 11, 11), (484, 121, 11, 1))
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_3, primals_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(primals_3, primals_4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_2], Original ATen: [aten.convolution]
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(primals_3, primals_6, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3], Original ATen: [aten.convolution]
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(primals_3, primals_8, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_4], Original ATen: [aten.convolution]
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(primals_3, primals_10, stride=(1, 1), padding=(4, 4), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_5], Original ATen: [aten.convolution]
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(primals_3, primals_12, stride=(1, 1), padding=(5, 5), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 4, 4, 6), (384, 96, 24, 6, 1), torch.float32)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [stack], Original ATen: [aten.stack]
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_stack_0.run(buf0, primals_2, buf1, primals_5, buf2, primals_7, buf3, primals_9, buf4, primals_11, buf5, primals_13, buf6, 1536, grid=grid(1536), stream=stream0)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf5; del buf5  # reuse
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [res], Original ATen: [aten.mean]
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_1.run(buf6, buf7, 256, grid=grid(256), stream=stream0)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, primals_1, primals_3, primals_4, primals_6, primals_8, primals_10, primals_12, )
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4, 5, 5), (100, 25, 5, 1), device='cuda:0', dtype=torch.float32)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4, 7, 7), (196, 49, 7, 1), device='cuda:0', dtype=torch.float32)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, 4, 9, 9), (324, 81, 9, 1), device='cuda:0', dtype=torch.float32)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, 4, 11, 11), (484, 121, 11, 1), device='cuda:0', dtype=torch.float32)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13])
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:28:01.466000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:28:01.470000 4039611 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/td/ctd35ounu3dangzj2ai4ogkbh2kmqci7zciwcsrgskz3ehjd6ca5.py
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['29_forward']
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/so/csorrlpxiuk4v36p4amj7g7t7kxfnerqyhl7u5q7jxzqf2jvc7mm.py
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [stack], Original ATen: [aten.stack]
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   stack => cat
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3, %unsqueeze_4, %unsqueeze_5], -1), kwargs = {})
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_stack_0 = async_compile.triton('triton_poi_fused_stack_0', '''
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_stack_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_stack_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1536
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 6
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 96) % 4)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x4), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full(tmp7.shape, 0.0, tmp7.dtype)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(tmp4, tmp7, tmp8)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp0 >= tmp3
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 2, tl.int64)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp0 < tmp11
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10 & tmp12
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr2 + (x4), tmp13 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr3 + (x2), tmp13 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full(tmp16.shape, 0.0, tmp16.dtype)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp13, tmp16, tmp17)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp0 >= tmp11
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.full([1], 3, tl.int64)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp0 < tmp20
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp19 & tmp21
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr4 + (x4), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full(tmp25.shape, 0.0, tmp25.dtype)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.where(tmp22, tmp25, tmp26)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp0 >= tmp20
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.full([1], 4, tl.int64)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp0 < tmp29
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp28 & tmp30
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr6 + (x4), tmp31 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr7 + (x2), tmp31 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 + tmp33
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.full(tmp34.shape, 0.0, tmp34.dtype)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.where(tmp31, tmp34, tmp35)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp0 >= tmp29
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.full([1], 5, tl.int64)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp0 < tmp38
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp37 & tmp39
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr8 + (x4), tmp40 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.load(in_ptr9 + (x2), tmp40 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp41 + tmp42
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.full(tmp43.shape, 0.0, tmp43.dtype)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp40, tmp43, tmp44)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp0 >= tmp38
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.full([1], 6, tl.int64)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp0 < tmp47
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr10 + (x4), tmp46 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr11 + (x2), tmp46 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp49 + tmp50
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.full(tmp51.shape, 0.0, tmp51.dtype)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.where(tmp46, tmp51, tmp52)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.where(tmp40, tmp45, tmp53)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.where(tmp31, tmp36, tmp54)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.where(tmp22, tmp27, tmp55)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.where(tmp13, tmp18, tmp56)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.where(tmp4, tmp9, tmp57)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp58, xmask)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/da/cdaxnjhhelwwmyb32d7nrrcllfe7ktpjz25pb3svbs3irhztur5r.py
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [res], Original ATen: [aten.mean]
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   res => mean
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%cat, [-1]), kwargs = {})
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_1 = async_compile.triton('triton_poi_fused_mean_1', '''
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (6*x0), xmask, eviction_policy='evict_last')
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 6*x0), xmask, eviction_policy='evict_last')
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 6*x0), xmask, eviction_policy='evict_last')
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 6*x0), xmask, eviction_policy='evict_last')
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4 + 6*x0), xmask, eviction_policy='evict_last')
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (5 + 6*x0), xmask, eviction_policy='evict_last')
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 6.0
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 / tmp11
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp12, xmask)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13 = args
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4, 3, 3), (36, 9, 3, 1))
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4, 5, 5), (100, 25, 5, 1))
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4, 7, 7), (196, 49, 7, 1))
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, 4, 9, 9), (324, 81, 9, 1))
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, 4, 11, 11), (484, 121, 11, 1))
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_3, primals_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(primals_3, primals_4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_2], Original ATen: [aten.convolution]
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(primals_3, primals_6, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3], Original ATen: [aten.convolution]
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(primals_3, primals_8, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_4], Original ATen: [aten.convolution]
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(primals_3, primals_10, stride=(1, 1), padding=(4, 4), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_5], Original ATen: [aten.convolution]
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(primals_3, primals_12, stride=(1, 1), padding=(5, 5), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 4, 4, 6), (384, 96, 24, 6, 1), torch.float32)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [stack], Original ATen: [aten.stack]
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_stack_0.run(buf0, primals_2, buf1, primals_5, buf2, primals_7, buf3, primals_9, buf4, primals_11, buf5, primals_13, buf6, 1536, grid=grid(1536), stream=stream0)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf5; del buf5  # reuse
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [res], Original ATen: [aten.mean]
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_1.run(buf6, buf7, 256, grid=grid(256), stream=stream0)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, primals_1, primals_3, primals_4, primals_6, primals_8, primals_10, primals_12, )
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4, 5, 5), (100, 25, 5, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4, 7, 7), (196, 49, 7, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, 4, 9, 9), (324, 81, 9, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, 4, 11, 11), (484, 121, 11, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13])
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:16:54.746000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:54.753000 1295092 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/5o/c5onvf7oq4nub5rxfx2tolcoww3g4xxoemeb5h7bjcgjxxvj7q2n.py
