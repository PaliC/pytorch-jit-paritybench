W0204 16:02:11.935000 2368707 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] Graph break from `Tensor.item()`, consider setting:
W0204 16:02:11.935000 2368707 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     torch._dynamo.config.capture_scalar_outputs = True
W0204 16:02:11.935000 2368707 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] or:
W0204 16:02:11.935000 2368707 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     env TORCHDYNAMO_CAPTURE_SCALAR_OUTPUTS=1
W0204 16:02:11.935000 2368707 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] to include these operations in the captured graph.
W0204 16:02:11.935000 2368707 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
W0204 16:02:11.935000 2368707 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] Graph break: from user code at:
W0204 16:02:11.935000 2368707 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]   File "./generated/test_dreamgonfly_transformer_pytorch.py", line 174, in forward
W0204 16:02:11.935000 2368707 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     correct_count = corrects.sum().item()
W0204 16:02:11.935000 2368707 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
W0204 16:02:11.935000 2368707 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] Output code: 
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # AOT ID: ['0_inference']
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import torch
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import math
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import random
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import os
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import tempfile
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from math import inf, nan
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch import device, empty_strided
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid,
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     split_scan_grid,
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid_combo_kernels,
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     start_graph,
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     end_graph,
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     cooperative_reduction_grid,
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] aten = torch.ops.aten
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile = AsyncCompile()
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [eq_1, masked_fill_, predicts, corrects, sum_1], Original ATen: [aten.eq, aten.masked_fill, aten.argmax, aten.sum]
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   corrects => eq
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   eq_1 => eq_1
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   masked_fill_ => full_default, where
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   predicts => argmax
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sum_1 => sum_1
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %eq_1 : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%arg1_1, 0), kwargs = {})
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], False), kwargs = {dtype: torch.bool, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %argmax : [num_users=1] = call_function[target=torch.ops.aten.argmax.default](args = (%view, 1), kwargs = {})
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Tensor](args = (%argmax, %arg1_1), kwargs = {})
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%eq_1, %full_default, %eq), kwargs = {})
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%where,), kwargs = {})
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_per_fused_argmax_eq_masked_fill_sum_0 = async_compile.triton('triton_per_fused_argmax_eq_masked_fill_sum_0', '''
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 1, 'r': 16},
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr1': '*i64', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_argmax_eq_masked_fill_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_per_fused_argmax_eq_masked_fill_sum_0(in_ptr0, in_ptr1, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 1
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rnumel = 16
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     roffset = 0
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     r0 = rindex
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*r0), None, eviction_policy='evict_last')
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*r0), None, eviction_policy='evict_last')
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tl.load(in_ptr0 + (2 + 4*r0), None, eviction_policy='evict_last')
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp32 = tl.load(in_ptr0 + (3 + 4*r0), None, eviction_policy='evict_last')
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp47 = tl.load(in_ptr1 + (r0), None)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 > tmp1
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tmp0 == tmp1
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tmp0 != tmp0
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp1 != tmp1
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tmp4 > tmp5
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tmp2 | tmp6
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp4 & tmp5
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tmp3 | tmp8
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tl.full([1, 1], 0, tl.int64)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tl.full([1, 1], 1, tl.int64)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = tmp10 < tmp11
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tmp9 & tmp12
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = tmp7 | tmp13
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = tl.where(tmp14, tmp0, tmp1)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = tl.where(tmp14, tmp10, tmp11)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp18 = tmp15 > tmp17
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp19 = tmp15 == tmp17
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp20 = tmp15 != tmp15
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp21 = tmp17 != tmp17
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp22 = tmp20 > tmp21
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp23 = tmp18 | tmp22
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp24 = tmp20 & tmp21
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp25 = tmp19 | tmp24
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp26 = tl.full([1, 1], 2, tl.int64)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp27 = tmp16 < tmp26
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp28 = tmp25 & tmp27
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp29 = tmp23 | tmp28
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp30 = tl.where(tmp29, tmp15, tmp17)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp31 = tl.where(tmp29, tmp16, tmp26)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp33 = tmp30 > tmp32
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp34 = tmp30 == tmp32
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp35 = tmp30 != tmp30
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp36 = tmp32 != tmp32
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp37 = tmp35 > tmp36
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp38 = tmp33 | tmp37
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp39 = tmp35 & tmp36
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp40 = tmp34 | tmp39
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp41 = tl.full([1, 1], 3, tl.int64)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp42 = tmp31 < tmp41
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp43 = tmp40 & tmp42
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp44 = tmp38 | tmp43
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp45 = tl.where(tmp44, tmp30, tmp32)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp46 = tl.where(tmp44, tmp31, tmp41)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp48 = 0.0
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp49 = tmp47 == tmp48
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp50 = tmp46.to(tl.float32)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp51 = tmp50 == tmp47
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp52 = tl.full([1, 1], False, tl.int1)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp53 = tl.where(tmp49, tmp52, tmp51)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp54 = tmp53.to(tl.int64)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp55 = tl.broadcast_to(tmp54, [XBLOCK, RBLOCK])
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp57 = tl.sum(tmp55, 1)[:, None]
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp57, None)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile.wait(globals())
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] del async_compile
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def call(args):
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1, arg1_1 = args
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     args.clear()
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4), (16, 4, 1))
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg1_1, (16, ), (1, ))
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         torch.cuda.set_device(0)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf1 = empty_strided_cuda((), (), torch.int64)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [eq_1, masked_fill_, predicts, corrects, sum_1], Original ATen: [aten.eq, aten.masked_fill, aten.argmax, aten.sum]
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_per_fused_argmax_eq_masked_fill_sum_0.run(arg0_1, arg1_1, buf1, 1, 16, grid=grid(1), stream=stream0)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del arg0_1
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return (buf1, arg1_1, )
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg1_1 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] if __name__ == "__main__":
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:02:12.856000 2368707 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 16:02:12.859000 2368707 site-packages/torch/_inductor/graph.py:2053] [0/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/al/calkt746jqsgahkwg3pdbvxptxixq43s2cedkw4ujbmjrhtccgu2.py
W0205 20:51:20.560000 3926882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] Graph break from `Tensor.item()`, consider setting:
W0205 20:51:20.560000 3926882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     torch._dynamo.config.capture_scalar_outputs = True
W0205 20:51:20.560000 3926882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] or:
W0205 20:51:20.560000 3926882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     env TORCHDYNAMO_CAPTURE_SCALAR_OUTPUTS=1
W0205 20:51:20.560000 3926882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] to include these operations in the captured graph.
W0205 20:51:20.560000 3926882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
W0205 20:51:20.560000 3926882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] Graph break: from user code at:
W0205 20:51:20.560000 3926882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]   File "./generated/test_dreamgonfly_transformer_pytorch.py", line 174, in forward
W0205 20:51:20.560000 3926882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     correct_count = corrects.sum().item()
W0205 20:51:20.560000 3926882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
W0205 20:51:20.560000 3926882 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] Output code: 
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # AOT ID: ['0_inference']
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import torch
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import math
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import random
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import os
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import tempfile
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from math import inf, nan
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch import device, empty_strided
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid,
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     split_scan_grid,
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid_combo_kernels,
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     start_graph,
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     end_graph,
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     cooperative_reduction_grid,
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] aten = torch.ops.aten
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile = AsyncCompile()
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [eq_1, masked_fill_, predicts, corrects, sum_1], Original ATen: [aten.eq, aten.masked_fill, aten.argmax, aten.sum]
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   corrects => eq
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   eq_1 => eq_1
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   masked_fill_ => full_default, where
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   predicts => argmax
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sum_1 => sum_1
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %eq_1 : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%arg1_1, 0), kwargs = {})
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], False), kwargs = {dtype: torch.bool, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %argmax : [num_users=1] = call_function[target=torch.ops.aten.argmax.default](args = (%view, 1), kwargs = {})
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Tensor](args = (%argmax, %arg1_1), kwargs = {})
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%eq_1, %full_default, %eq), kwargs = {})
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%where,), kwargs = {})
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_per_fused_argmax_eq_masked_fill_sum_0 = async_compile.triton('triton_per_fused_argmax_eq_masked_fill_sum_0', '''
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 1, 'r': 16},
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr1': '*i64', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_argmax_eq_masked_fill_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_per_fused_argmax_eq_masked_fill_sum_0(in_ptr0, in_ptr1, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 1
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rnumel = 16
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     roffset = 0
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     r0 = rindex
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*r0), None, eviction_policy='evict_last')
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*r0), None, eviction_policy='evict_last')
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tl.load(in_ptr0 + (2 + 4*r0), None, eviction_policy='evict_last')
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp32 = tl.load(in_ptr0 + (3 + 4*r0), None, eviction_policy='evict_last')
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp47 = tl.load(in_ptr1 + (r0), None)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 > tmp1
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tmp0 == tmp1
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tmp0 != tmp0
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp1 != tmp1
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tmp4 > tmp5
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tmp2 | tmp6
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp4 & tmp5
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tmp3 | tmp8
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tl.full([1, 1], 0, tl.int64)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tl.full([1, 1], 1, tl.int64)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = tmp10 < tmp11
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tmp9 & tmp12
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = tmp7 | tmp13
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = tl.where(tmp14, tmp0, tmp1)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = tl.where(tmp14, tmp10, tmp11)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp18 = tmp15 > tmp17
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp19 = tmp15 == tmp17
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp20 = tmp15 != tmp15
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp21 = tmp17 != tmp17
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp22 = tmp20 > tmp21
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp23 = tmp18 | tmp22
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp24 = tmp20 & tmp21
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp25 = tmp19 | tmp24
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp26 = tl.full([1, 1], 2, tl.int64)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp27 = tmp16 < tmp26
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp28 = tmp25 & tmp27
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp29 = tmp23 | tmp28
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp30 = tl.where(tmp29, tmp15, tmp17)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp31 = tl.where(tmp29, tmp16, tmp26)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp33 = tmp30 > tmp32
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp34 = tmp30 == tmp32
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp35 = tmp30 != tmp30
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp36 = tmp32 != tmp32
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp37 = tmp35 > tmp36
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp38 = tmp33 | tmp37
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp39 = tmp35 & tmp36
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp40 = tmp34 | tmp39
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp41 = tl.full([1, 1], 3, tl.int64)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp42 = tmp31 < tmp41
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp43 = tmp40 & tmp42
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp44 = tmp38 | tmp43
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp45 = tl.where(tmp44, tmp30, tmp32)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp46 = tl.where(tmp44, tmp31, tmp41)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp48 = 0.0
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp49 = tmp47 == tmp48
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp50 = tmp46.to(tl.float32)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp51 = tmp50 == tmp47
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp52 = tl.full([1, 1], False, tl.int1)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp53 = tl.where(tmp49, tmp52, tmp51)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp54 = tmp53.to(tl.int64)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp55 = tl.broadcast_to(tmp54, [XBLOCK, RBLOCK])
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp57 = tl.sum(tmp55, 1)[:, None]
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp57, None)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile.wait(globals())
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] del async_compile
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def call(args):
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1, arg1_1 = args
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     args.clear()
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4), (16, 4, 1))
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg1_1, (16, ), (1, ))
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf1 = empty_strided_cuda((), (), torch.int64)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [eq_1, masked_fill_, predicts, corrects, sum_1], Original ATen: [aten.eq, aten.masked_fill, aten.argmax, aten.sum]
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_per_fused_argmax_eq_masked_fill_sum_0.run(arg0_1, arg1_1, buf1, 1, 16, grid=grid(1), stream=stream0)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del arg0_1
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return (buf1, arg1_1, )
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg1_1 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] if __name__ == "__main__":
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:51:21.537000 3926882 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:51:21.541000 3926882 site-packages/torch/_inductor/graph.py:2053] [0/0_1] [__output_code] Output code written to: inductor_cache/qp/cqptuob3uvo7zbjxf5f2r3otogmfigv4tgawzqltol7257kzxbpc.py
