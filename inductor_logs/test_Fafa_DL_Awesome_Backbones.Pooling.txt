V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['24_inference']
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/e2/ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [avg_pool2d, sub], Original ATen: [aten.avg_pool2d, aten.sub]
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   avg_pool2d => avg_pool2d
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d : [num_users=1] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%arg0_1, [3, 3], [1, 1], [1, 1], False, False), kwargs = {})
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%avg_pool2d, %arg0_1), kwargs = {})
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_sub_0 = async_compile.triton('triton_poi_fused_avg_pool2d_sub_0', '''
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_sub_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_sub_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_ptr0 + (x3), xmask)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + x1
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 & tmp4
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = (-1) + x0
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 >= tmp1
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 < tmp3
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 & tmp8
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp5 & tmp9
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-5) + x3), tmp10 & xmask, other=0.0)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = x0
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 >= tmp1
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 < tmp3
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 & tmp14
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp5 & tmp15
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + ((-4) + x3), tmp16 & xmask, other=0.0)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp11
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1 + x0
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 >= tmp1
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 < tmp3
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 & tmp21
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp5 & tmp22
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr0 + ((-3) + x3), tmp23 & xmask, other=0.0)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 + tmp18
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = x1
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 >= tmp1
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 < tmp3
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 & tmp28
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 & tmp9
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + ((-1) + x3), tmp30 & xmask, other=0.0)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 + tmp25
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 & tmp15
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (x3), tmp33 & xmask, other=0.0)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp32
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp29 & tmp22
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (1 + x3), tmp36 & xmask, other=0.0)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 + tmp35
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = 1 + x1
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 >= tmp1
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 < tmp3
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 & tmp41
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 & tmp9
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr0 + (3 + x3), tmp43 & xmask, other=0.0)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp44 + tmp38
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp42 & tmp15
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr0 + (4 + x3), tmp46 & xmask, other=0.0)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp47 + tmp45
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp42 & tmp22
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr0 + (5 + x3), tmp49 & xmask, other=0.0)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 + tmp48
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = ((0) * ((0) >= ((-1) + x0)) + ((-1) + x0) * (((-1) + x0) > (0)))*((0) * ((0) >= ((-1) + x1)) + ((-1) + x1) * (((-1) + x1) > (0))) + ((4) * ((4) <= (2 + x0)) + (2 + x0) * ((2 + x0) < (4)))*((4) * ((4) <= (2 + x1)) + (2 + x1) * ((2 + x1) < (4))) + ((-1)*((0) * ((0) >= ((-1) + x0)) + ((-1) + x0) * (((-1) + x0) > (0)))*((4) * ((4) <= (2 + x1)) + (2 + x1) * ((2 + x1) < (4)))) + ((-1)*((0) * ((0) >= ((-1) + x1)) + ((-1) + x1) * (((-1) + x1) > (0)))*((4) * ((4) <= (2 + x0)) + (2 + x0) * ((2 + x0) < (4))))
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 / tmp52
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp53 - tmp54
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp55, xmask)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [avg_pool2d, sub], Original ATen: [aten.avg_pool2d, aten.sub]
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_sub_0.run(buf1, arg0_1, 256, grid=grid(256), stream=stream0)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf1, )
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:56:13.061000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:13.064000 267263 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/a3/ca3ggpobumefoxnamqucsvlbwcb7rqe7vl446527ugfkwed67igt.py
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['24_inference']
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/e2/ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [avg_pool2d, sub], Original ATen: [aten.avg_pool2d, aten.sub]
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   avg_pool2d => avg_pool2d
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d : [num_users=1] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%arg0_1, [3, 3], [1, 1], [1, 1], False, False), kwargs = {})
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%avg_pool2d, %arg0_1), kwargs = {})
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_sub_0 = async_compile.triton('triton_poi_fused_avg_pool2d_sub_0', '''
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_sub_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_sub_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_ptr0 + (x3), xmask)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + x1
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 & tmp4
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = (-1) + x0
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 >= tmp1
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 < tmp3
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 & tmp8
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp5 & tmp9
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-5) + x3), tmp10 & xmask, other=0.0)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = x0
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 >= tmp1
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 < tmp3
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 & tmp14
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp5 & tmp15
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + ((-4) + x3), tmp16 & xmask, other=0.0)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp11
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1 + x0
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 >= tmp1
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 < tmp3
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 & tmp21
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp5 & tmp22
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr0 + ((-3) + x3), tmp23 & xmask, other=0.0)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 + tmp18
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = x1
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 >= tmp1
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 < tmp3
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 & tmp28
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 & tmp9
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + ((-1) + x3), tmp30 & xmask, other=0.0)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 + tmp25
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 & tmp15
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (x3), tmp33 & xmask, other=0.0)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp32
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp29 & tmp22
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (1 + x3), tmp36 & xmask, other=0.0)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 + tmp35
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = 1 + x1
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 >= tmp1
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 < tmp3
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 & tmp41
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 & tmp9
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr0 + (3 + x3), tmp43 & xmask, other=0.0)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp44 + tmp38
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp42 & tmp15
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr0 + (4 + x3), tmp46 & xmask, other=0.0)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp47 + tmp45
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp42 & tmp22
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr0 + (5 + x3), tmp49 & xmask, other=0.0)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 + tmp48
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = ((0) * ((0) >= ((-1) + x0)) + ((-1) + x0) * (((-1) + x0) > (0)))*((0) * ((0) >= ((-1) + x1)) + ((-1) + x1) * (((-1) + x1) > (0))) + ((4) * ((4) <= (2 + x0)) + (2 + x0) * ((2 + x0) < (4)))*((4) * ((4) <= (2 + x1)) + (2 + x1) * ((2 + x1) < (4))) + ((-1)*((0) * ((0) >= ((-1) + x0)) + ((-1) + x0) * (((-1) + x0) > (0)))*((4) * ((4) <= (2 + x1)) + (2 + x1) * ((2 + x1) < (4)))) + ((-1)*((0) * ((0) >= ((-1) + x1)) + ((-1) + x1) * (((-1) + x1) > (0)))*((4) * ((4) <= (2 + x0)) + (2 + x0) * ((2 + x0) < (4))))
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 / tmp52
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp53 - tmp54
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp55, xmask)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [avg_pool2d, sub], Original ATen: [aten.avg_pool2d, aten.sub]
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_sub_0.run(buf1, arg0_1, 256, grid=grid(256), stream=stream0)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf1, )
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:46:27.491000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:27.494000 2884344 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/6t/c6t3glzdpvlnwq3eh7nh62bpdagbqiuryweug5qlibw2l5exr5rx.py
