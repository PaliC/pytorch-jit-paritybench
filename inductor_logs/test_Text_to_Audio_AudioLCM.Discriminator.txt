V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] Output code: 
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # AOT ID: ['13_inference']
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import torch
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import math
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import random
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import os
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import tempfile
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from math import inf, nan
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch import device, empty_strided
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid,
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     split_scan_grid,
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid_combo_kernels,
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     start_graph,
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     end_graph,
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     cooperative_reduction_grid,
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] aten = torch.ops.aten
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile = AsyncCompile()
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lu/clud3kfed5qdppnarxhfxxwzoh3q2u4h64xszkncmkhwcnnfjwmd.py
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [sum_1], Original ATen: [aten.sum]
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sum_1 => sum_1
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%arg0_1, [1, -1]), kwargs = {})
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_per_fused_sum_0 = async_compile.triton('triton_per_fused_sum_0', '''
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16, 'r': 16},
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_per_fused_sum_0(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rnumel = 16
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     roffset = 0
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     r2 = (rindex % 4)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     r3 = rindex // 4
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = (xindex % 4)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x1 = xindex // 4
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x4 = xindex
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (r2 + 4*x0 + 16*r3 + 64*x1), xmask, other=0.0)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x4), tmp4, xmask)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/mh/cmh6opxeyr63z6g4poe2pqpbdgdizxpvvlzfpe5rbnol5ajuquvx.py
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [ne, int_1, x_len], Original ATen: [aten.ne, aten._to_copy, aten.sum]
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   int_1 => convert_element_type
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   ne => ne
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   x_len => sum_2
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %ne : [num_users=1] = call_function[target=torch.ops.aten.ne.Scalar](args = (%sum_1, 0), kwargs = {})
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%ne, torch.int32), kwargs = {})
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%convert_element_type, [-1]), kwargs = {})
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused__to_copy_ne_sum_1 = async_compile.triton('triton_poi_fused__to_copy_ne_sum_1', '''
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 4}, 
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_ne_sum_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused__to_copy_ne_sum_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 4
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = xindex
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = 0.0
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 != tmp1
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tmp2.to(tl.int32)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tmp3.to(tl.int64)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tmp5 != tmp1
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tmp6.to(tl.int32)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp7.to(tl.int64)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tmp4 + tmp8
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tmp10 != tmp1
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = tmp11.to(tl.int32)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tmp12.to(tl.int64)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = tmp9 + tmp13
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = tmp15 != tmp1
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tmp16.to(tl.int32)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp18 = tmp17.to(tl.int64)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp19 = tmp14 + tmp18
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp19, xmask)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile.wait(globals())
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] del async_compile
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def call(args):
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1, = args
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     args.clear()
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         torch.cuda.set_device(0)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [sum_1], Original ATen: [aten.sum]
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_per_fused_sum_0.run(arg0_1, buf0, 16, 16, grid=grid(16), stream=stream0)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del arg0_1
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf1 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [ne, int_1, x_len], Original ATen: [aten.ne, aten._to_copy, aten.sum]
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused__to_copy_ne_sum_1.run(buf0, buf1, 4, grid=grid(4), stream=stream0)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del buf0
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return (buf1, )
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     fn = lambda: call([arg0_1])
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] if __name__ == "__main__":
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:05:54.013000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:05:54.016000 3099651 site-packages/torch/_inductor/graph.py:2053] [0/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/pg/cpgdko4rkz2xjjfonzeqskq6zjqnjzuqks7zgtpjt7qriu3rwfmk.py
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] Output code: 
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # AOT ID: ['13_inference']
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import torch
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import math
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import random
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import os
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import tempfile
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from math import inf, nan
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch import device, empty_strided
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid,
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     split_scan_grid,
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid_combo_kernels,
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     start_graph,
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     end_graph,
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     cooperative_reduction_grid,
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] aten = torch.ops.aten
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile = AsyncCompile()
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/lu/clud3kfed5qdppnarxhfxxwzoh3q2u4h64xszkncmkhwcnnfjwmd.py
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [sum_1], Original ATen: [aten.sum]
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sum_1 => sum_1
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%arg0_1, [1, -1]), kwargs = {})
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_per_fused_sum_0 = async_compile.triton('triton_per_fused_sum_0', '''
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16, 'r': 16},
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_per_fused_sum_0(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rnumel = 16
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     roffset = 0
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     r2 = (rindex % 4)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     r3 = rindex // 4
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = (xindex % 4)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x1 = xindex // 4
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x4 = xindex
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (r2 + 4*x0 + 16*r3 + 64*x1), xmask, other=0.0)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x4), tmp4, xmask)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/mh/cmh6opxeyr63z6g4poe2pqpbdgdizxpvvlzfpe5rbnol5ajuquvx.py
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [ne, int_1, x_len], Original ATen: [aten.ne, aten._to_copy, aten.sum]
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   int_1 => convert_element_type
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   ne => ne
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   x_len => sum_2
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %ne : [num_users=1] = call_function[target=torch.ops.aten.ne.Scalar](args = (%sum_1, 0), kwargs = {})
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%ne, torch.int32), kwargs = {})
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%convert_element_type, [-1]), kwargs = {})
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused__to_copy_ne_sum_1 = async_compile.triton('triton_poi_fused__to_copy_ne_sum_1', '''
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 4}, 
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_ne_sum_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused__to_copy_ne_sum_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 4
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = xindex
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = 0.0
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 != tmp1
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tmp2.to(tl.int32)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tmp3.to(tl.int64)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tmp5 != tmp1
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tmp6.to(tl.int32)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp7.to(tl.int64)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tmp4 + tmp8
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tmp10 != tmp1
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = tmp11.to(tl.int32)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tmp12.to(tl.int64)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = tmp9 + tmp13
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = tmp15 != tmp1
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tmp16.to(tl.int32)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp18 = tmp17.to(tl.int64)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp19 = tmp14 + tmp18
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp19, xmask)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile.wait(globals())
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] del async_compile
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def call(args):
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1, = args
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     args.clear()
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [sum_1], Original ATen: [aten.sum]
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_per_fused_sum_0.run(arg0_1, buf0, 16, 16, grid=grid(16), stream=stream0)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del arg0_1
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf1 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [ne, int_1, x_len], Original ATen: [aten.ne, aten._to_copy, aten.sum]
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused__to_copy_ne_sum_1.run(buf0, buf1, 4, grid=grid(4), stream=stream0)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del buf0
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return (buf1, )
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     fn = lambda: call([arg0_1])
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] if __name__ == "__main__":
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:55:20.181000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:55:20.184000 761384 site-packages/torch/_inductor/graph.py:2053] [0/0_1] [__output_code] Output code written to: inductor_cache/ri/criljfp7s5z7evp72dl5va3hkzxite5r2iqad6hvesm54s4rfcx4.py
