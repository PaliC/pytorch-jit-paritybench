V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['20_inference']
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/i7/ci7vbgwqycerfwvegbqxudlcafl5a7r5aud4d752x4l6hap5v5ou.py
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, tp, sub, mul_1, fp, sub_1, mul_2, fn], Original ATen: [aten.mul, aten.sum, aten.rsub]
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fn => sum_5
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fp => sum_4
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub_1
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_2
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   tp => sum_1
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %arg1_1), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=3] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [0, 2, 3]), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %arg1_1), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %sub_1), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_1, [0, 2, 3]), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %arg0_1), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg1_1, %sub_2), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_2, [0, 2, 3]), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mul_rsub_sum_0 = async_compile.triton('triton_per_fused_mul_rsub_sum_0', '''
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 64},
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mul_rsub_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 3, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mul_rsub_sum_0(in_ptr0, in_ptr1, out_ptr0, out_ptr1, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = (rindex % 16)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex // 16
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*x0 + 64*r2), xmask, other=0.0)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r1 + 16*x0 + 64*r2), xmask, other=0.0)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(xmask, tmp3, 0)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.sum(tmp5, 1)[:, None]
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 1.0
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 - tmp1
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 * tmp8
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.broadcast_to(tmp9, [XBLOCK, RBLOCK])
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.where(xmask, tmp10, 0)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.sum(tmp12, 1)[:, None]
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 - tmp0
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp1 * tmp14
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [XBLOCK, RBLOCK])
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(xmask, tmp16, 0)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.sum(tmp18, 1)[:, None]
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp13, xmask)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp19, xmask)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hi/chiri6bq6n2nclomidzhgxhxkahwrarkqvydk6wmqefi74yxb4up.py
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_3, add_1, union, eq, float_1, mul_4, add_3, mul_5, add_4, add_5, add_6, score, metric, sub_2], Original ATen: [aten.mul, aten.add, aten.eq, aten._to_copy, aten.div, aten.mean, aten.rsub]
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_5 => add_5
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_6 => add_6
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   eq => eq
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   float_1 => convert_element_type
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   metric => mean
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_4
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_5 => mul_5
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   score => div
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_3
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   union => add_2
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_1, 2), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, %sum_4), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_1, %sum_5), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%add_2, 0), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%eq, torch.float32), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, 1e-07), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_3, %mul_4), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_1, 2), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %sum_4), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, %sum_5), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_5, 1e-07), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_3, %add_6), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%div,), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %mean), kwargs = {})
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_add_div_eq_mean_mul_rsub_1 = async_compile.triton('triton_poi_fused__to_copy_add_div_eq_mean_mul_rsub_1', '''
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_div_eq_mean_mul_rsub_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_add_div_eq_mean_mul_rsub_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (0))
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [XBLOCK])
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (0))
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.broadcast_to(tmp7, [XBLOCK])
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (1))
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.broadcast_to(tmp20, [XBLOCK])
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr1 + (1))
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.broadcast_to(tmp23, [XBLOCK])
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr2 + (1))
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.broadcast_to(tmp26, [XBLOCK])
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr0 + (2))
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.broadcast_to(tmp38, [XBLOCK])
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr1 + (2))
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.broadcast_to(tmp41, [XBLOCK])
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr2 + (2))
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.broadcast_to(tmp44, [XBLOCK])
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.load(in_ptr0 + (3))
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.broadcast_to(tmp56, [XBLOCK])
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tl.load(in_ptr1 + (3))
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.broadcast_to(tmp59, [XBLOCK])
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tl.load(in_ptr2 + (3))
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.broadcast_to(tmp62, [XBLOCK])
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 2.0
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp1 + tmp5
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 + tmp8
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 0.0
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 == tmp10
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-07
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp3 + tmp14
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp3 + tmp5
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp8
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp13
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 / tmp18
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 * tmp2
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp21 + tmp24
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 + tmp27
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 == tmp10
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29.to(tl.float32)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 * tmp13
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp22 + tmp31
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp22 + tmp24
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 + tmp27
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp13
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp32 / tmp35
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp19 + tmp36
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 * tmp2
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp39 + tmp42
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp43 + tmp45
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 == tmp10
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp47.to(tl.float32)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp48 * tmp13
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp40 + tmp49
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp40 + tmp42
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 + tmp45
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52 + tmp13
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp50 / tmp53
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp37 + tmp54
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp57 * tmp2
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp57 + tmp60
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp61 + tmp63
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp64 == tmp10
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp65.to(tl.float32)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp66 * tmp13
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp58 + tmp67
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp58 + tmp60
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp69 + tmp63
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp70 + tmp13
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp68 / tmp71
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp55 + tmp72
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = 4.0
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp73 / tmp74
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = 1.0
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp76 - tmp75
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp77, None)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, tp, sub, mul_1, fp, sub_1, mul_2, fn], Original ATen: [aten.mul, aten.sum, aten.rsub]
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mul_rsub_sum_0.run(arg0_1, arg1_1, buf0, buf1, buf2, 4, 64, grid=grid(4), stream=stream0)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((), (), torch.float32)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_3, add_1, union, eq, float_1, mul_4, add_3, mul_5, add_4, add_5, add_6, score, metric, sub_2], Original ATen: [aten.mul, aten.add, aten.eq, aten._to_copy, aten.div, aten.mean, aten.rsub]
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_div_eq_mean_mul_rsub_1.run(buf0, buf1, buf2, buf3, 1, grid=grid(1), stream=stream0)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf3, )
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:20:03.995000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:04.002000 1413504 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/tl/ctljxejl2nbopct56hby5boe4z4meonfreeepn3igetwqh5vdz46.py
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['20_inference']
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/i7/ci7vbgwqycerfwvegbqxudlcafl5a7r5aud4d752x4l6hap5v5ou.py
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, tp, sub, mul_1, fp, sub_1, mul_2, fn], Original ATen: [aten.mul, aten.sum, aten.rsub]
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fn => sum_5
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fp => sum_4
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub_1
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_2
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   tp => sum_1
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %arg1_1), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=3] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [0, 2, 3]), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %arg1_1), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %sub_1), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_1, [0, 2, 3]), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %arg0_1), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg1_1, %sub_2), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_2, [0, 2, 3]), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mul_rsub_sum_0 = async_compile.triton('triton_per_fused_mul_rsub_sum_0', '''
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 64},
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mul_rsub_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 3, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mul_rsub_sum_0(in_ptr0, in_ptr1, out_ptr0, out_ptr1, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = (rindex % 16)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex // 16
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*x0 + 64*r2), xmask, other=0.0)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r1 + 16*x0 + 64*r2), xmask, other=0.0)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(xmask, tmp3, 0)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.sum(tmp5, 1)[:, None]
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 1.0
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 - tmp1
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 * tmp8
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.broadcast_to(tmp9, [XBLOCK, RBLOCK])
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.where(xmask, tmp10, 0)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.sum(tmp12, 1)[:, None]
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 - tmp0
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp1 * tmp14
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [XBLOCK, RBLOCK])
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(xmask, tmp16, 0)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.sum(tmp18, 1)[:, None]
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp13, xmask)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp19, xmask)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/hi/chiri6bq6n2nclomidzhgxhxkahwrarkqvydk6wmqefi74yxb4up.py
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_3, add_1, union, eq, float_1, mul_4, add_3, mul_5, add_4, add_5, add_6, score, metric, sub_2], Original ATen: [aten.mul, aten.add, aten.eq, aten._to_copy, aten.div, aten.mean, aten.rsub]
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_5 => add_5
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_6 => add_6
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   eq => eq
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   float_1 => convert_element_type
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   metric => mean
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_4
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_5 => mul_5
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   score => div
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_3
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   union => add_2
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_1, 2), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, %sum_4), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_1, %sum_5), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%add_2, 0), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%eq, torch.float32), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, 1e-07), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_3, %mul_4), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_1, 2), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %sum_4), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, %sum_5), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_5, 1e-07), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_3, %add_6), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%div,), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %mean), kwargs = {})
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_add_div_eq_mean_mul_rsub_1 = async_compile.triton('triton_poi_fused__to_copy_add_div_eq_mean_mul_rsub_1', '''
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_div_eq_mean_mul_rsub_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_add_div_eq_mean_mul_rsub_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (0))
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [XBLOCK])
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (0))
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.broadcast_to(tmp7, [XBLOCK])
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (1))
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.broadcast_to(tmp20, [XBLOCK])
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr1 + (1))
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.broadcast_to(tmp23, [XBLOCK])
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr2 + (1))
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.broadcast_to(tmp26, [XBLOCK])
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr0 + (2))
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.broadcast_to(tmp38, [XBLOCK])
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr1 + (2))
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.broadcast_to(tmp41, [XBLOCK])
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr2 + (2))
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.broadcast_to(tmp44, [XBLOCK])
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.load(in_ptr0 + (3))
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.broadcast_to(tmp56, [XBLOCK])
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tl.load(in_ptr1 + (3))
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.broadcast_to(tmp59, [XBLOCK])
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tl.load(in_ptr2 + (3))
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.broadcast_to(tmp62, [XBLOCK])
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 2.0
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp1 + tmp5
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 + tmp8
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 0.0
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 == tmp10
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-07
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp3 + tmp14
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp3 + tmp5
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp8
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp13
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 / tmp18
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 * tmp2
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp21 + tmp24
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 + tmp27
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 == tmp10
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29.to(tl.float32)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 * tmp13
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp22 + tmp31
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp22 + tmp24
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 + tmp27
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp13
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp32 / tmp35
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp19 + tmp36
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 * tmp2
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp39 + tmp42
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp43 + tmp45
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 == tmp10
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp47.to(tl.float32)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp48 * tmp13
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp40 + tmp49
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp40 + tmp42
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 + tmp45
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52 + tmp13
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp50 / tmp53
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp37 + tmp54
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp57 * tmp2
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp57 + tmp60
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp61 + tmp63
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp64 == tmp10
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp65.to(tl.float32)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp66 * tmp13
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp58 + tmp67
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp58 + tmp60
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp69 + tmp63
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp70 + tmp13
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp68 / tmp71
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp55 + tmp72
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = 4.0
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp73 / tmp74
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = 1.0
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp76 - tmp75
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp77, None)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, tp, sub, mul_1, fp, sub_1, mul_2, fn], Original ATen: [aten.mul, aten.sum, aten.rsub]
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mul_rsub_sum_0.run(arg0_1, arg1_1, buf0, buf1, buf2, 4, 64, grid=grid(4), stream=stream0)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((), (), torch.float32)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_3, add_1, union, eq, float_1, mul_4, add_3, mul_5, add_4, add_5, add_6, score, metric, sub_2], Original ATen: [aten.mul, aten.add, aten.eq, aten._to_copy, aten.div, aten.mean, aten.rsub]
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_div_eq_mean_mul_rsub_1.run(buf0, buf1, buf2, buf3, 1, grid=grid(1), stream=stream0)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf3, )
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:09:49.358000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:49.363000 2785343 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/4q/c4qtiffhr76lvp5vk47fitufrgg3kaqjnpqmjltmepaa3ich2hrf.py
