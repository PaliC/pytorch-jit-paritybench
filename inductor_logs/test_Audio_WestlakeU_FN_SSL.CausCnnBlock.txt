V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ke/ckea3nbqcujyw5vcfbdo3usijcu5qbnkrwvmzjhszl6uwcinmjkb.py
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.relu, aten.threshold_backward]
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => relu
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution,), kwargs = {})
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_1 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu, 0), kwargs = {})
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_threshold_backward_0 = async_compile.triton('triton_poi_fused_relu_threshold_backward_0', '''
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4194304}, 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_threshold_backward_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_threshold_backward_0(in_out_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2162688
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), None)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int32)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 <= tmp3
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp2, None)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, None)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/kx/ckxxbqthmcsrgrsgktggzdpzpmvo5euwvjqun2jxhu5efjf2tb5h.py
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_3], Original ATen: [aten.avg_pool2d]
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_3 => avg_pool2d
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d : [num_users=2] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%slice_8, [1, 3], [1, 3]), kwargs = {})
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_1 = async_compile.triton('triton_poi_fused_avg_pool2d_1', '''
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 688128
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 21)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 21
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (3*x0 + 66*x1), None, eviction_policy='evict_last')
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 3*x0 + 66*x1), None, eviction_policy='evict_last')
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 3*x0 + 66*x1), None, eviction_policy='evict_last')
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 + tmp0
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp2
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.3333333333333333
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, None)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/co/ccocuatwhtnvg3flnkmufxz5odg5mlhate6qo6zgzb2ef6am2x47.py
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_5], Original ATen: [aten.relu, aten.threshold_backward]
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_5 => relu_1
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_1,), kwargs = {})
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_1, 0), kwargs = {})
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_threshold_backward_2 = async_compile.triton('triton_poi_fused_relu_threshold_backward_2', '''
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_threshold_backward_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_threshold_backward_2(in_out_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 753664
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = (xindex % 1472)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 1472
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), None)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int32)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 <= tmp3
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp2, None)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 1536*x2), tmp4, None)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gk/cgkew52wxguwygosjscajtq7my7od7wraz44yk56auzlswfargvf.py
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_7], Original ATen: [aten.avg_pool2d]
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_7 => avg_pool2d_1
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d_1 : [num_users=2] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%slice_16, [1, 4], [1, 4]), kwargs = {})
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_3 = async_compile.triton('triton_poi_fused_avg_pool2d_3', '''
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 163840
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 5)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 5
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0 + 23*x1), None, eviction_policy='evict_last')
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0 + 23*x1), None, eviction_policy='evict_last')
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 4*x0 + 23*x1), None, eviction_policy='evict_last')
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 4*x0 + 23*x1), None, eviction_policy='evict_last')
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 + tmp0
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp2
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp4
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.25
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp7
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, None)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rx/crxiso532mjnwuqk55v2ajveniyz2lm4762wtbdxa5iqxwcgz7sv.py
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_10], Original ATen: [aten.tanh]
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_10 => tanh
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%slice_20,), kwargs = {})
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_tanh_4 = async_compile.triton('triton_poi_fused_tanh_4', '''
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_tanh_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_tanh_4(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 5120
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 5)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 5
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 7*x1), xmask)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = libdevice.tanh(tmp0)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp1, xmask)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4 = args
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (128, 4, 3, 3), (36, 9, 3, 1))
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 64, 64), (16384, 4096, 64, 1))
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (128, 128, 3, 3), (1152, 9, 3, 1))
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 128, 3, 3), (1152, 9, 3, 1))
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.convolution]
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_2, primals_1, stride=(1, 1), padding=(1, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 128, 64, 66), (540672, 4224, 66, 1))
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 128, 64, 66), (540672, 4224, 66, 1), torch.bool)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.relu, aten.threshold_backward]
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_0.run(buf1, buf9, 2162688, grid=grid(2162688), stream=stream0)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 128, 64, 21), (172032, 1344, 21, 1), torch.float32)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_3], Original ATen: [aten.avg_pool2d]
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_1.run(buf1, buf2, 688128, grid=grid(688128), stream=stream0)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.convolution]
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(buf2, primals_3, stride=(1, 1), padding=(1, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 128, 64, 23), (188416, 1472, 23, 1))
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf3; del buf3  # reuse
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 128, 64, 23), (196608, 1536, 23, 1), torch.bool)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_5], Original ATen: [aten.relu, aten.threshold_backward]
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_2.run(buf4, buf8, 753664, grid=grid(753664), stream=stream0)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 128, 64, 5), (40960, 320, 5, 1), torch.float32)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_7], Original ATen: [aten.avg_pool2d]
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_3.run(buf4, buf5, 163840, grid=grid(163840), stream=stream0)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_8], Original ATen: [aten.convolution]
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf5, primals_4, stride=(1, 1), padding=(1, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 4, 64, 7), (1792, 448, 7, 1))
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 64, 5), (1280, 320, 5, 1), torch.float32)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_10], Original ATen: [aten.tanh]
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_tanh_4.run(buf6, buf7, 5120, grid=grid(5120), stream=stream0)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, primals_1, primals_2, primals_3, primals_4, reinterpret_tensor(buf1, (4, 128, 64, 64), (540672, 4224, 66, 1), 0), buf2, reinterpret_tensor(buf4, (4, 128, 64, 21), (188416, 1472, 23, 1), 0), buf5, buf7, buf8, buf9, )
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((128, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 64, 64), (16384, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4])
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:30:50.451000 3625091 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:30:50.457000 3625091 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ze/czez7wzmk4l74yvltoxlqkyx4jd2umvkqrka3u7yxc3fj5ru7pmn.py
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ke/ckea3nbqcujyw5vcfbdo3usijcu5qbnkrwvmzjhszl6uwcinmjkb.py
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.relu, aten.threshold_backward]
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => relu
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution,), kwargs = {})
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_1 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu, 0), kwargs = {})
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_threshold_backward_0 = async_compile.triton('triton_poi_fused_relu_threshold_backward_0', '''
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4194304}, 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_threshold_backward_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_threshold_backward_0(in_out_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2162688
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), None)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int32)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 <= tmp3
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp2, None)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, None)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/kx/ckxxbqthmcsrgrsgktggzdpzpmvo5euwvjqun2jxhu5efjf2tb5h.py
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_3], Original ATen: [aten.avg_pool2d]
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_3 => avg_pool2d
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d : [num_users=2] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%slice_8, [1, 3], [1, 3]), kwargs = {})
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_1 = async_compile.triton('triton_poi_fused_avg_pool2d_1', '''
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 688128
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 21)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 21
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (3*x0 + 66*x1), None, eviction_policy='evict_last')
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 3*x0 + 66*x1), None, eviction_policy='evict_last')
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 3*x0 + 66*x1), None, eviction_policy='evict_last')
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 + tmp0
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp2
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.3333333333333333
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, None)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/co/ccocuatwhtnvg3flnkmufxz5odg5mlhate6qo6zgzb2ef6am2x47.py
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_5], Original ATen: [aten.relu, aten.threshold_backward]
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_5 => relu_1
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_1,), kwargs = {})
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_1, 0), kwargs = {})
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_threshold_backward_2 = async_compile.triton('triton_poi_fused_relu_threshold_backward_2', '''
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_threshold_backward_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_threshold_backward_2(in_out_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 753664
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = (xindex % 1472)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 1472
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), None)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int32)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 <= tmp3
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp2, None)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 1536*x2), tmp4, None)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/gk/cgkew52wxguwygosjscajtq7my7od7wraz44yk56auzlswfargvf.py
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_7], Original ATen: [aten.avg_pool2d]
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_7 => avg_pool2d_1
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d_1 : [num_users=2] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%slice_16, [1, 4], [1, 4]), kwargs = {})
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_3 = async_compile.triton('triton_poi_fused_avg_pool2d_3', '''
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 163840
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 5)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 5
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0 + 23*x1), None, eviction_policy='evict_last')
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0 + 23*x1), None, eviction_policy='evict_last')
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 4*x0 + 23*x1), None, eviction_policy='evict_last')
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 4*x0 + 23*x1), None, eviction_policy='evict_last')
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 + tmp0
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp2
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp4
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.25
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp7
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, None)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/rx/crxiso532mjnwuqk55v2ajveniyz2lm4762wtbdxa5iqxwcgz7sv.py
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_10], Original ATen: [aten.tanh]
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_10 => tanh
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%slice_20,), kwargs = {})
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_tanh_4 = async_compile.triton('triton_poi_fused_tanh_4', '''
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_tanh_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_tanh_4(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 5120
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 5)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 5
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 7*x1), xmask)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = libdevice.tanh(tmp0)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp1, xmask)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4 = args
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (128, 4, 3, 3), (36, 9, 3, 1))
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 64, 64), (16384, 4096, 64, 1))
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (128, 128, 3, 3), (1152, 9, 3, 1))
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 128, 3, 3), (1152, 9, 3, 1))
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.convolution]
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_2, primals_1, stride=(1, 1), padding=(1, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 128, 64, 66), (540672, 4224, 66, 1))
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 128, 64, 66), (540672, 4224, 66, 1), torch.bool)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.relu, aten.threshold_backward]
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_0.run(buf1, buf9, 2162688, grid=grid(2162688), stream=stream0)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 128, 64, 21), (172032, 1344, 21, 1), torch.float32)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_3], Original ATen: [aten.avg_pool2d]
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_1.run(buf1, buf2, 688128, grid=grid(688128), stream=stream0)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.convolution]
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(buf2, primals_3, stride=(1, 1), padding=(1, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 128, 64, 23), (188416, 1472, 23, 1))
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf3; del buf3  # reuse
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 128, 64, 23), (196608, 1536, 23, 1), torch.bool)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_5], Original ATen: [aten.relu, aten.threshold_backward]
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_2.run(buf4, buf8, 753664, grid=grid(753664), stream=stream0)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 128, 64, 5), (40960, 320, 5, 1), torch.float32)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_7], Original ATen: [aten.avg_pool2d]
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_3.run(buf4, buf5, 163840, grid=grid(163840), stream=stream0)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_8], Original ATen: [aten.convolution]
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf5, primals_4, stride=(1, 1), padding=(1, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 4, 64, 7), (1792, 448, 7, 1))
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 64, 5), (1280, 320, 5, 1), torch.float32)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_10], Original ATen: [aten.tanh]
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_tanh_4.run(buf6, buf7, 5120, grid=grid(5120), stream=stream0)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, primals_1, primals_2, primals_3, primals_4, reinterpret_tensor(buf1, (4, 128, 64, 64), (540672, 4224, 66, 1), 0), buf2, reinterpret_tensor(buf4, (4, 128, 64, 21), (188416, 1472, 23, 1), 0), buf5, buf7, buf8, buf9, )
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((128, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 64, 64), (16384, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4])
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:21:05.548000 2237070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:05.553000 2237070 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/dj/cdj6cwvwte5gnqrbhgzvtyqdcnblm7uyzrtkyus7ylcnbx5o4h7m.py
