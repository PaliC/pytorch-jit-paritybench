V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_forward']
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/37/c37yslo6irp2kogg2sfjrhr5fa4arrpbfflfnpngxlrjoem7bojo.py
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [output], Original ATen: [aten.stack]
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output => cat
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%add_1, %add_3, %add_5, %add_7],), kwargs = {})
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_stack_0 = async_compile.triton('triton_poi_fused_stack_0', '''
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_stack_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 20, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_stack_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 16)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x2
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x3 + 16*(x2)), tmp4 & xmask, other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x1), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 - tmp6
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr2 + (x1), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1e-05
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.sqrt(tmp10)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 1, tl.int32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 / tmp11
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1.0
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp7 * tmp15
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr3 + (x1), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr4 + (x1), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full(tmp20.shape, 0.0, tmp20.dtype)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.where(tmp4, tmp20, tmp21)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp0 >= tmp3
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.full([1], 8, tl.int64)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp0 < tmp24
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp23 & tmp25
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (64 + x3 + 16*((-4) + x2)), tmp26 & xmask, other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr5 + (x1), tmp26 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 - tmp28
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr6 + (x1), tmp26 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = 1e-05
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 + tmp31
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = libdevice.sqrt(tmp32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.full([1], 1, tl.int32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 / tmp33
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = 1.0
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 * tmp36
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp29 * tmp37
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr3 + (x1), tmp26 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 * tmp39
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr4 + (x1), tmp26 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 + tmp41
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.full(tmp42.shape, 0.0, tmp42.dtype)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.where(tmp26, tmp42, tmp43)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp0 >= tmp24
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.full([1], 12, tl.int64)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp0 < tmp46
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp45 & tmp47
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr0 + (128 + x3 + 16*((-8) + x2)), tmp48 & xmask, other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr7 + (x1), tmp48 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp49 - tmp50
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.load(in_ptr8 + (x1), tmp48 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = 1e-05
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp52 + tmp53
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = libdevice.sqrt(tmp54)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.full([1], 1, tl.int32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp56 / tmp55
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = 1.0
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp57 * tmp58
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp51 * tmp59
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tl.load(in_ptr3 + (x1), tmp48 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp60 * tmp61
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.load(in_ptr4 + (x1), tmp48 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp62 + tmp63
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.full(tmp64.shape, 0.0, tmp64.dtype)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.where(tmp48, tmp64, tmp65)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp0 >= tmp46
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tl.full([1], 16, tl.int64)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp0 < tmp68
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tl.load(in_ptr0 + (192 + x3 + 16*((-12) + x2)), tmp67 & xmask, other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.load(in_ptr9 + (x1), tmp67 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp70 - tmp71
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.load(in_ptr10 + (x1), tmp67 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = 1e-05
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp73 + tmp74
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = libdevice.sqrt(tmp75)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.full([1], 1, tl.int32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp77 / tmp76
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = 1.0
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp78 * tmp79
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp72 * tmp80
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tl.load(in_ptr3 + (x1), tmp67 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp81 * tmp82
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tl.load(in_ptr4 + (x1), tmp67 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp83 + tmp84
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tl.full(tmp85.shape, 0.0, tmp85.dtype)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tl.where(tmp67, tmp85, tmp86)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tl.where(tmp48, tmp66, tmp87)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tl.where(tmp26, tmp44, tmp88)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tl.where(tmp4, tmp22, tmp89)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp90, xmask)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2o/c2ogncjdhblcoq4cwxx35ijxggpxlpoakdjwluge6lmgmhhkxarz.py
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%squeeze_3, %unsqueeze_17), kwargs = {})
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_batch_norm_backward_1 = async_compile.triton('triton_poi_fused_native_batch_norm_backward_1', '''
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_batch_norm_backward_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_batch_norm_backward_1(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (192 + x3), xmask)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp2, xmask)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7f/c7fzknpvuaohnlldsvqrqq2427rot6j5226ttgpuyn33psrgh4wt.py
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%squeeze_2, %unsqueeze_25), kwargs = {})
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_batch_norm_backward_2 = async_compile.triton('triton_poi_fused_native_batch_norm_backward_2', '''
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_batch_norm_backward_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_batch_norm_backward_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (128 + x3), xmask)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp2, xmask)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gb/cgbwcfkcoronaql7f3yhc2n3cftyp7h4nznunvx5fyh6x7d72df2.py
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%squeeze_1, %unsqueeze_33), kwargs = {})
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_batch_norm_backward_3 = async_compile.triton('triton_poi_fused_native_batch_norm_backward_3', '''
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_batch_norm_backward_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_batch_norm_backward_3(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (64 + x3), xmask)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp2, xmask)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ly/clypjckyuyz3d2irprj2k73eeplswfajslxxkzkuk5m3j4ra2lra.py
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%squeeze, %unsqueeze_41), kwargs = {})
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_batch_norm_backward_4 = async_compile.triton('triton_poi_fused_native_batch_norm_backward_4', '''
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_batch_norm_backward_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_batch_norm_backward_4(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp2, xmask)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11 = args
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, ), (1, ))
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, ), (1, ))
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, ), (1, ))
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 4, 4), (16, 4, 1), torch.float32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output], Original ATen: [aten.stack]
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_stack_0.run(primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, buf0, 256, grid=grid(256), stream=stream0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_batch_norm_backward_1.run(primals_1, primals_10, buf1, 64, grid=grid(64), stream=stream0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_batch_norm_backward_2.run(primals_1, primals_8, buf2, 64, grid=grid(64), stream=stream0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_batch_norm_backward_3.run(primals_1, primals_6, buf3, 64, grid=grid(64), stream=stream0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_batch_norm_backward_4.run(primals_1, primals_2, buf4, 64, grid=grid(64), stream=stream0)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf0, (4, 4, 4, 4), (64, 16, 4, 1), 0), primals_3, primals_7, primals_9, primals_11, buf1, buf2, buf3, buf4, )
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11])
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:02:42.378000 2962847 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:02:42.385000 2962847 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/w6/cw6phkv75ppvx6crbfqzozoejkgabyv3wjklbxnrs2mpz7kcrmy6.py
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_forward']
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/37/c37yslo6irp2kogg2sfjrhr5fa4arrpbfflfnpngxlrjoem7bojo.py
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [output], Original ATen: [aten.stack]
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output => cat
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%add_1, %add_3, %add_5, %add_7],), kwargs = {})
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_stack_0 = async_compile.triton('triton_poi_fused_stack_0', '''
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_stack_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 20, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_stack_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 16)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x2
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x3 + 16*(x2)), tmp4 & xmask, other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x1), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 - tmp6
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr2 + (x1), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1e-05
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.sqrt(tmp10)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 1, tl.int32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 / tmp11
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1.0
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp7 * tmp15
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr3 + (x1), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr4 + (x1), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full(tmp20.shape, 0.0, tmp20.dtype)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.where(tmp4, tmp20, tmp21)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp0 >= tmp3
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.full([1], 8, tl.int64)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp0 < tmp24
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp23 & tmp25
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (64 + x3 + 16*((-4) + x2)), tmp26 & xmask, other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr5 + (x1), tmp26 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 - tmp28
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr6 + (x1), tmp26 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = 1e-05
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 + tmp31
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = libdevice.sqrt(tmp32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.full([1], 1, tl.int32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 / tmp33
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = 1.0
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 * tmp36
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp29 * tmp37
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr3 + (x1), tmp26 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 * tmp39
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr4 + (x1), tmp26 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 + tmp41
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.full(tmp42.shape, 0.0, tmp42.dtype)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.where(tmp26, tmp42, tmp43)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp0 >= tmp24
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.full([1], 12, tl.int64)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp0 < tmp46
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp45 & tmp47
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr0 + (128 + x3 + 16*((-8) + x2)), tmp48 & xmask, other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr7 + (x1), tmp48 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp49 - tmp50
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.load(in_ptr8 + (x1), tmp48 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = 1e-05
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp52 + tmp53
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = libdevice.sqrt(tmp54)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.full([1], 1, tl.int32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp56 / tmp55
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = 1.0
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp57 * tmp58
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp51 * tmp59
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tl.load(in_ptr3 + (x1), tmp48 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp60 * tmp61
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.load(in_ptr4 + (x1), tmp48 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp62 + tmp63
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.full(tmp64.shape, 0.0, tmp64.dtype)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.where(tmp48, tmp64, tmp65)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp0 >= tmp46
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tl.full([1], 16, tl.int64)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp0 < tmp68
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tl.load(in_ptr0 + (192 + x3 + 16*((-12) + x2)), tmp67 & xmask, other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.load(in_ptr9 + (x1), tmp67 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp70 - tmp71
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.load(in_ptr10 + (x1), tmp67 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = 1e-05
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp73 + tmp74
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = libdevice.sqrt(tmp75)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.full([1], 1, tl.int32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp77 / tmp76
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = 1.0
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp78 * tmp79
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp72 * tmp80
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tl.load(in_ptr3 + (x1), tmp67 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp81 * tmp82
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tl.load(in_ptr4 + (x1), tmp67 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp83 + tmp84
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tl.full(tmp85.shape, 0.0, tmp85.dtype)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tl.where(tmp67, tmp85, tmp86)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tl.where(tmp48, tmp66, tmp87)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tl.where(tmp26, tmp44, tmp88)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tl.where(tmp4, tmp22, tmp89)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp90, xmask)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2o/c2ogncjdhblcoq4cwxx35ijxggpxlpoakdjwluge6lmgmhhkxarz.py
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%squeeze_3, %unsqueeze_17), kwargs = {})
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_batch_norm_backward_1 = async_compile.triton('triton_poi_fused_native_batch_norm_backward_1', '''
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_batch_norm_backward_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_batch_norm_backward_1(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (192 + x3), xmask)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp2, xmask)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7f/c7fzknpvuaohnlldsvqrqq2427rot6j5226ttgpuyn33psrgh4wt.py
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%squeeze_2, %unsqueeze_25), kwargs = {})
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_batch_norm_backward_2 = async_compile.triton('triton_poi_fused_native_batch_norm_backward_2', '''
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_batch_norm_backward_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_batch_norm_backward_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (128 + x3), xmask)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp2, xmask)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/gb/cgbwcfkcoronaql7f3yhc2n3cftyp7h4nznunvx5fyh6x7d72df2.py
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%squeeze_1, %unsqueeze_33), kwargs = {})
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_batch_norm_backward_3 = async_compile.triton('triton_poi_fused_native_batch_norm_backward_3', '''
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_batch_norm_backward_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_batch_norm_backward_3(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (64 + x3), xmask)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp2, xmask)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ly/clypjckyuyz3d2irprj2k73eeplswfajslxxkzkuk5m3j4ra2lra.py
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%squeeze, %unsqueeze_41), kwargs = {})
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_batch_norm_backward_4 = async_compile.triton('triton_poi_fused_native_batch_norm_backward_4', '''
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_batch_norm_backward_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_batch_norm_backward_4(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp2, xmask)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11 = args
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, ), (1, ))
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, ), (1, ))
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, ), (1, ))
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 4, 4), (16, 4, 1), torch.float32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output], Original ATen: [aten.stack]
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_stack_0.run(primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, buf0, 256, grid=grid(256), stream=stream0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_batch_norm_backward_1.run(primals_1, primals_10, buf1, 64, grid=grid(64), stream=stream0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_batch_norm_backward_2.run(primals_1, primals_8, buf2, 64, grid=grid(64), stream=stream0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_batch_norm_backward_3.run(primals_1, primals_6, buf3, 64, grid=grid(64), stream=stream0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_batch_norm_backward_4.run(primals_1, primals_2, buf4, 64, grid=grid(64), stream=stream0)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf0, (4, 4, 4, 4), (64, 16, 4, 1), 0), primals_3, primals_7, primals_9, primals_11, buf1, buf2, buf3, buf4, )
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11])
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:52:11.509000 692145 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:52:11.516000 692145 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/lo/clo5ltknfx5emplbzxiggeksuqhcxkxydsalzzfkdywqrjejyi5r.py
