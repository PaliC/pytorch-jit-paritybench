V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_forward']
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6y/c6ywv3t6izbkwvbzieno5snumiwptcdjeb72n6qjdkoop4wsluhb.py
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_pool_2], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_pool_2 => clamp_max_2, clamp_min, clamp_min_2, convert_element_type, iota, mul_5, sub
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, 0.0), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_5, 0.0), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_3), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_sub_0 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_sub_0', '''
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_sub_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_sub_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 0.0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/oc/cocxsbcyhcvbhy3igo63fl557qfqv7frz3sbqzv7kjeodpwur66x.py
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_pool_2], Original ATen: [aten._to_copy]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_pool_2 => convert_element_type_1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_1 = async_compile.triton('triton_poi_fused__to_copy_1', '''
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.full([1], 0, tl.int64)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/m5/cm5y4vvpvc62iamuqedbegqlgj72f247r3tsej6u7ptr7mos4rru.py
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_pool], Original ATen: [aten.mean]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_pool => mean
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_2, [-1, -2], True), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mean_2 = async_compile.triton('triton_per_fused_mean_2', '''
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 16},
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mean_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mean_2(in_out_ptr0, in_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 16.0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 / tmp5
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp6, xmask)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/mg/cmglaj5vpuxxaf3xfoaaej23zkcj2az4uimnucoflfz526jabmpg.py
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_pool_1], Original ATen: [aten.leaky_relu, aten.leaky_relu_backward]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_pool_1 => gt_4, mul_4, where_4
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_4 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_4, 0), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_4, 0.1), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_4 : [num_users=5] = call_function[target=torch.ops.aten.where.self](args = (%gt_4, %convolution_4, %mul_4), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_7 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%where_4, 0), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_leaky_relu_leaky_relu_backward_3 = async_compile.triton('triton_poi_fused_leaky_relu_leaky_relu_backward_3', '''
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_leaky_relu_leaky_relu_backward_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_leaky_relu_leaky_relu_backward_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp0, tmp4)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 > tmp1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7a/c7awawlaluuhowz3tnt2n455bxwbd4tmbv2shhoucolifwfzusnd.py
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [leaky_relu], Original ATen: [aten.leaky_relu, aten.leaky_relu_backward]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   leaky_relu => gt, mul, where
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution, 0), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 0.1), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt, %convolution, %mul), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_11 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%where, 0), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_leaky_relu_leaky_relu_backward_4 = async_compile.triton('triton_poi_fused_leaky_relu_leaky_relu_backward_4', '''
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_leaky_relu_leaky_relu_backward_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_leaky_relu_leaky_relu_backward_4(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp0, tmp4)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 > tmp1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/w7/cw7osxnzrpnikj37suableg4q7dlcdtf7ozfyzonydcv6ahj6j3p.py
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_pool_1, global_pool_2], Original ATen: [aten.leaky_relu, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_pool_1 => gt_4, mul_4, where_4
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_pool_2 => _unsafe_index, _unsafe_index_1, add_2, mul_7, sub_1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_4 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_4, 0), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_4, 0.1), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_4 : [num_users=5] = call_function[target=torch.ops.aten.where.self](args = (%gt_4, %convolution_4, %mul_4), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%where_4, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%where_4, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %clamp_max_2), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_7), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_5 = async_compile.triton('triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_5', '''
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_5(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 1, tl.int32)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 0.0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 > tmp10
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 0.1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 * tmp12
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp11, tmp9, tmp13)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 + tmp1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 < 0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp17, tmp16, tmp15)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp14 - tmp14
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp14 + tmp21
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp22, xmask)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gf/cgf4qqfxv7enrr3yya633q5oovvxvdq6rwtva4wpatfdjmdehbfn.py
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%where, %where_1, %where_2, %where_3, %add_4], 1), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_6 = async_compile.triton('triton_poi_fused_cat_6', '''
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*i64', 'in_ptr6': '*i64', 'in_ptr7': '*fp32', 'in_ptr8': '*i64', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 11, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_6(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 320
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 5)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 80
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 16)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x2
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x4 + 16*x3), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 > tmp6
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 0.1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 * tmp8
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp7, tmp5, tmp9)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full(tmp10.shape, 0.0, tmp10.dtype)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.where(tmp4, tmp10, tmp11)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp0 >= tmp3
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.full([1], 2, tl.int64)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 < tmp14
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 & tmp15
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr1 + (x4 + 16*x3), tmp16 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 > tmp18
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 0.1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 * tmp20
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.where(tmp19, tmp17, tmp21)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.full(tmp22.shape, 0.0, tmp22.dtype)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.where(tmp16, tmp22, tmp23)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp0 >= tmp14
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 3, tl.int64)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp0 < tmp26
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr2 + (x4 + 16*x3), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = 0.0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 > tmp30
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 0.1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 * tmp32
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.where(tmp31, tmp29, tmp33)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.full(tmp34.shape, 0.0, tmp34.dtype)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.where(tmp28, tmp34, tmp35)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp0 >= tmp26
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.full([1], 4, tl.int64)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp0 < tmp38
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp37 & tmp39
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr3 + (x4 + 16*x3), tmp40 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = 0.0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp41 > tmp42
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = 0.1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp41 * tmp44
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp43, tmp41, tmp45)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.full(tmp46.shape, 0.0, tmp46.dtype)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.where(tmp40, tmp46, tmp47)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp0 >= tmp38
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.full([1], 5, tl.int64)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp0 < tmp50
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.load(in_ptr4 + (x4 + 16*x3), tmp49 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.load(in_ptr5 + (x1), tmp49 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.full([XBLOCK], 1, tl.int32)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp53 + tmp54
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp53 < 0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.where(tmp56, tmp55, tmp53)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.load(in_ptr6 + (x0), tmp49 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp58 + tmp54
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp58 < 0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tl.where(tmp60, tmp59, tmp58)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tl.load(in_ptr7 + (x3), tmp49 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = 0.0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp62 > tmp63
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = 0.1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp62 * tmp65
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tl.where(tmp64, tmp62, tmp66)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tl.load(in_ptr8 + (x0), tmp49 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp68 + tmp54
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp68 < 0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.where(tmp70, tmp69, tmp68)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp67 - tmp67
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.load(in_ptr9 + (x0), tmp49 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp72 * tmp73
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp67 + tmp74
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp75 - tmp52
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.load(in_ptr10 + (x1), tmp49 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp76 * tmp77
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp52 + tmp78
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl.full(tmp79.shape, 0.0, tmp79.dtype)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tl.where(tmp49, tmp79, tmp80)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tl.where(tmp40, tmp48, tmp81)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tl.where(tmp28, tmp36, tmp82)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tl.where(tmp16, tmp24, tmp83)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tl.where(tmp4, tmp12, tmp84)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp85, xmask)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/r5/cr56qd43t2lrjnkwr3bp5vvnkq2yyvkewltbaprfnkxexgz3siqs.py
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [leaky_relu_5], Original ATen: [aten.leaky_relu, aten.leaky_relu_backward]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   leaky_relu_5 => gt_5, mul_10, where_5
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_5 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_5, 0), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_5, 0.1), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_5 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_5, %convolution_5, %mul_10), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_6 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%where_5, 0), kwargs = {})
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_leaky_relu_leaky_relu_backward_7 = async_compile.triton('triton_poi_fused_leaky_relu_leaky_relu_backward_7', '''
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_leaky_relu_leaky_relu_backward_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_leaky_relu_leaky_relu_backward_7(in_out_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp0, tmp4)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 > tmp1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp5, xmask)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7 = args
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (1, 4, 1, 1), (4, 1, 1, 1))
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (1, 4, 3, 3), (36, 9, 3, 1))
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, 4, 3, 3), (36, 9, 3, 1))
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (1, 4, 3, 3), (36, 9, 3, 1))
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (1, 4, 1, 1), (4, 1, 1, 1))
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, 5, 1, 1), (5, 1, 1, 1))
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_pool_2], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_0.run(buf11, 4, grid=grid(4), stream=stream0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 1), (1, 1), torch.float32)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_pool_2], Original ATen: [aten.sub, aten.clamp]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_0.run(buf13, 4, grid=grid(4), stream=stream0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_pool_2], Original ATen: [aten._to_copy]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf7, 4, grid=grid(4), stream=stream0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_pool_2], Original ATen: [aten.add, aten.clamp]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf8, 4, grid=grid(4), stream=stream0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_pool_2], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf9, 4, grid=grid(4), stream=stream0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_pool_2], Original ATen: [aten.add, aten.clamp]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf10, 4, grid=grid(4), stream=stream0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 16, 16), torch.float32)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = reinterpret_tensor(buf4, (4, 4, 1, 1), (4, 1, 1, 1), 0); del buf4  # reuse
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_pool], Original ATen: [aten.mean]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mean_2.run(buf5, primals_2, 16, 16, grid=grid(16), stream=stream0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv_4], Original ATen: [aten.convolution]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf5, primals_6, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 1, 1, 1), (1, 1, 1, 1))
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 1, 1, 1), (1, 1, 1, 1), torch.bool)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_pool_1], Original ATen: [aten.leaky_relu, aten.leaky_relu_backward]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_leaky_relu_backward_3.run(buf6, buf18, 4, grid=grid(4), stream=stream0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv], Original ATen: [aten.convolution]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_2, primals_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 1, 4, 4), (16, 16, 4, 1), torch.bool)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [leaky_relu], Original ATen: [aten.leaky_relu, aten.leaky_relu_backward]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_leaky_relu_backward_4.run(buf0, buf22, 64, grid=grid(64), stream=stream0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv_1], Original ATen: [aten.convolution]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(primals_2, primals_3, stride=(1, 1), padding=(6, 6), dilation=(6, 6), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 1, 4, 4), (16, 16, 4, 1), torch.bool)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [leaky_relu_1], Original ATen: [aten.leaky_relu, aten.leaky_relu_backward]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_leaky_relu_backward_4.run(buf1, buf21, 64, grid=grid(64), stream=stream0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv_2], Original ATen: [aten.convolution]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(primals_2, primals_4, stride=(1, 1), padding=(12, 12), dilation=(12, 12), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 1, 4, 4), (16, 16, 4, 1), torch.bool)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [leaky_relu_2], Original ATen: [aten.leaky_relu, aten.leaky_relu_backward]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_leaky_relu_backward_4.run(buf2, buf20, 64, grid=grid(64), stream=stream0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv_3], Original ATen: [aten.convolution]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(primals_2, primals_5, stride=(1, 1), padding=(18, 18), dilation=(18, 18), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 1, 4, 4), (16, 16, 4, 1), torch.bool)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [leaky_relu_3], Original ATen: [aten.leaky_relu, aten.leaky_relu_backward]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_leaky_relu_backward_4.run(buf3, buf19, 64, grid=grid(64), stream=stream0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_pool_1, global_pool_2], Original ATen: [aten.leaky_relu, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_5.run(buf7, buf9, buf6, buf10, buf11, buf12, 64, grid=grid(64), stream=stream0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 5, 4, 4), (80, 16, 4, 1), torch.float32)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_6.run(buf0, buf1, buf2, buf3, buf12, buf8, buf9, buf6, buf10, buf11, buf13, buf14, 320, grid=grid(320), stream=stream0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf12
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv_5], Original ATen: [aten.convolution]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = extern_kernels.convolution(buf14, primals_7, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf15, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf15; del buf15  # reuse
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [leaky_relu_5], Original ATen: [aten.leaky_relu, aten.leaky_relu_backward]
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_leaky_relu_backward_7.run(buf16, buf17, 256, grid=grid(256), stream=stream0)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf16, primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, buf5, buf7, buf8, buf9, buf10, buf11, buf13, buf14, buf17, buf18, buf19, buf20, buf21, buf22, )
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((1, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((1, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((1, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((1, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, 5, 1, 1), (5, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7])
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:50:45.709000 753056 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:50:45.721000 753056 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/j4/cj4sjigpmetaqjfifm7q2kmhrnyenz7kcncrtis32oqjnqw6u54m.py
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_forward']
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/6y/c6ywv3t6izbkwvbzieno5snumiwptcdjeb72n6qjdkoop4wsluhb.py
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_pool_2], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_pool_2 => clamp_max_2, clamp_min, clamp_min_2, convert_element_type, iota, mul_5, sub
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, 0.0), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_5, 0.0), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_3), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_sub_0 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_sub_0', '''
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_sub_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_sub_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 0.0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/oc/cocxsbcyhcvbhy3igo63fl557qfqv7frz3sbqzv7kjeodpwur66x.py
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_pool_2], Original ATen: [aten._to_copy]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_pool_2 => convert_element_type_1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_1 = async_compile.triton('triton_poi_fused__to_copy_1', '''
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.full([1], 0, tl.int64)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/m5/cm5y4vvpvc62iamuqedbegqlgj72f247r3tsej6u7ptr7mos4rru.py
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_pool], Original ATen: [aten.mean]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_pool => mean
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_2, [-1, -2], True), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mean_2 = async_compile.triton('triton_per_fused_mean_2', '''
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 16},
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mean_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mean_2(in_out_ptr0, in_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 16.0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 / tmp5
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp6, xmask)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/mg/cmglaj5vpuxxaf3xfoaaej23zkcj2az4uimnucoflfz526jabmpg.py
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_pool_1], Original ATen: [aten.leaky_relu, aten.leaky_relu_backward]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_pool_1 => gt_4, mul_4, where_4
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_4 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_4, 0), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_4, 0.1), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_4 : [num_users=5] = call_function[target=torch.ops.aten.where.self](args = (%gt_4, %convolution_4, %mul_4), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_7 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%where_4, 0), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_leaky_relu_leaky_relu_backward_3 = async_compile.triton('triton_poi_fused_leaky_relu_leaky_relu_backward_3', '''
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_leaky_relu_leaky_relu_backward_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_leaky_relu_leaky_relu_backward_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp0, tmp4)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 > tmp1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7a/c7awawlaluuhowz3tnt2n455bxwbd4tmbv2shhoucolifwfzusnd.py
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [leaky_relu], Original ATen: [aten.leaky_relu, aten.leaky_relu_backward]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   leaky_relu => gt, mul, where
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution, 0), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 0.1), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt, %convolution, %mul), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_11 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%where, 0), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_leaky_relu_leaky_relu_backward_4 = async_compile.triton('triton_poi_fused_leaky_relu_leaky_relu_backward_4', '''
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_leaky_relu_leaky_relu_backward_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_leaky_relu_leaky_relu_backward_4(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp0, tmp4)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 > tmp1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/w7/cw7osxnzrpnikj37suableg4q7dlcdtf7ozfyzonydcv6ahj6j3p.py
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [global_pool_1, global_pool_2], Original ATen: [aten.leaky_relu, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_pool_1 => gt_4, mul_4, where_4
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   global_pool_2 => _unsafe_index, _unsafe_index_1, add_2, mul_7, sub_1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_4 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_4, 0), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_4, 0.1), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_4 : [num_users=5] = call_function[target=torch.ops.aten.where.self](args = (%gt_4, %convolution_4, %mul_4), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%where_4, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%where_4, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %clamp_max_2), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_7), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_5 = async_compile.triton('triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_5', '''
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_5(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 1, tl.int32)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 0.0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 > tmp10
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 0.1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 * tmp12
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp11, tmp9, tmp13)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 + tmp1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 < 0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp17, tmp16, tmp15)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp14 - tmp14
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp14 + tmp21
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp22, xmask)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/gf/cgf4qqfxv7enrr3yya633q5oovvxvdq6rwtva4wpatfdjmdehbfn.py
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%where, %where_1, %where_2, %where_3, %add_4], 1), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_6 = async_compile.triton('triton_poi_fused_cat_6', '''
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*i64', 'in_ptr6': '*i64', 'in_ptr7': '*fp32', 'in_ptr8': '*i64', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 11, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_6(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 320
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 5)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 80
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 16)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x2
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x4 + 16*x3), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 > tmp6
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 0.1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 * tmp8
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp7, tmp5, tmp9)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full(tmp10.shape, 0.0, tmp10.dtype)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.where(tmp4, tmp10, tmp11)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp0 >= tmp3
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.full([1], 2, tl.int64)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 < tmp14
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 & tmp15
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr1 + (x4 + 16*x3), tmp16 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 > tmp18
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 0.1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 * tmp20
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.where(tmp19, tmp17, tmp21)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.full(tmp22.shape, 0.0, tmp22.dtype)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.where(tmp16, tmp22, tmp23)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp0 >= tmp14
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 3, tl.int64)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp0 < tmp26
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr2 + (x4 + 16*x3), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = 0.0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 > tmp30
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 0.1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 * tmp32
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.where(tmp31, tmp29, tmp33)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.full(tmp34.shape, 0.0, tmp34.dtype)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.where(tmp28, tmp34, tmp35)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp0 >= tmp26
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.full([1], 4, tl.int64)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp0 < tmp38
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp37 & tmp39
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr3 + (x4 + 16*x3), tmp40 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = 0.0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp41 > tmp42
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = 0.1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp41 * tmp44
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp43, tmp41, tmp45)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.full(tmp46.shape, 0.0, tmp46.dtype)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.where(tmp40, tmp46, tmp47)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp0 >= tmp38
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.full([1], 5, tl.int64)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp0 < tmp50
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.load(in_ptr4 + (x4 + 16*x3), tmp49 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.load(in_ptr5 + (x1), tmp49 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.full([XBLOCK], 1, tl.int32)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp53 + tmp54
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp53 < 0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.where(tmp56, tmp55, tmp53)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.load(in_ptr6 + (x0), tmp49 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp58 + tmp54
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp58 < 0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tl.where(tmp60, tmp59, tmp58)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tl.load(in_ptr7 + (x3), tmp49 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = 0.0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp62 > tmp63
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = 0.1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp62 * tmp65
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tl.where(tmp64, tmp62, tmp66)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tl.load(in_ptr8 + (x0), tmp49 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp68 + tmp54
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp68 < 0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.where(tmp70, tmp69, tmp68)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp67 - tmp67
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.load(in_ptr9 + (x0), tmp49 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp72 * tmp73
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp67 + tmp74
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp75 - tmp52
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.load(in_ptr10 + (x1), tmp49 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp76 * tmp77
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp52 + tmp78
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl.full(tmp79.shape, 0.0, tmp79.dtype)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tl.where(tmp49, tmp79, tmp80)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tl.where(tmp40, tmp48, tmp81)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tl.where(tmp28, tmp36, tmp82)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tl.where(tmp16, tmp24, tmp83)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tl.where(tmp4, tmp12, tmp84)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp85, xmask)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/r5/cr56qd43t2lrjnkwr3bp5vvnkq2yyvkewltbaprfnkxexgz3siqs.py
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [leaky_relu_5], Original ATen: [aten.leaky_relu, aten.leaky_relu_backward]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   leaky_relu_5 => gt_5, mul_10, where_5
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_5 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_5, 0), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_5, 0.1), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_5 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_5, %convolution_5, %mul_10), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_6 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%where_5, 0), kwargs = {})
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_leaky_relu_leaky_relu_backward_7 = async_compile.triton('triton_poi_fused_leaky_relu_leaky_relu_backward_7', '''
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_leaky_relu_leaky_relu_backward_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_leaky_relu_leaky_relu_backward_7(in_out_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp0, tmp4)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 > tmp1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp5, xmask)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7 = args
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (1, 4, 1, 1), (4, 1, 1, 1))
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (1, 4, 3, 3), (36, 9, 3, 1))
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, 4, 3, 3), (36, 9, 3, 1))
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (1, 4, 3, 3), (36, 9, 3, 1))
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (1, 4, 1, 1), (4, 1, 1, 1))
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, 5, 1, 1), (5, 1, 1, 1))
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_pool_2], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_0.run(buf11, 4, grid=grid(4), stream=stream0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 1), (1, 1), torch.float32)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_pool_2], Original ATen: [aten.sub, aten.clamp]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_0.run(buf13, 4, grid=grid(4), stream=stream0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_pool_2], Original ATen: [aten._to_copy]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf7, 4, grid=grid(4), stream=stream0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_pool_2], Original ATen: [aten.add, aten.clamp]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf8, 4, grid=grid(4), stream=stream0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_pool_2], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf9, 4, grid=grid(4), stream=stream0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_pool_2], Original ATen: [aten.add, aten.clamp]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf10, 4, grid=grid(4), stream=stream0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 16, 16), torch.float32)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = reinterpret_tensor(buf4, (4, 4, 1, 1), (4, 1, 1, 1), 0); del buf4  # reuse
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_pool], Original ATen: [aten.mean]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mean_2.run(buf5, primals_2, 16, 16, grid=grid(16), stream=stream0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv_4], Original ATen: [aten.convolution]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf5, primals_6, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 1, 1, 1), (1, 1, 1, 1))
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 1, 1, 1), (1, 1, 1, 1), torch.bool)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_pool_1], Original ATen: [aten.leaky_relu, aten.leaky_relu_backward]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_leaky_relu_backward_3.run(buf6, buf18, 4, grid=grid(4), stream=stream0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv], Original ATen: [aten.convolution]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_2, primals_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 1, 4, 4), (16, 16, 4, 1), torch.bool)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [leaky_relu], Original ATen: [aten.leaky_relu, aten.leaky_relu_backward]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_leaky_relu_backward_4.run(buf0, buf22, 64, grid=grid(64), stream=stream0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv_1], Original ATen: [aten.convolution]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(primals_2, primals_3, stride=(1, 1), padding=(6, 6), dilation=(6, 6), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 1, 4, 4), (16, 16, 4, 1), torch.bool)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [leaky_relu_1], Original ATen: [aten.leaky_relu, aten.leaky_relu_backward]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_leaky_relu_backward_4.run(buf1, buf21, 64, grid=grid(64), stream=stream0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv_2], Original ATen: [aten.convolution]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(primals_2, primals_4, stride=(1, 1), padding=(12, 12), dilation=(12, 12), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 1, 4, 4), (16, 16, 4, 1), torch.bool)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [leaky_relu_2], Original ATen: [aten.leaky_relu, aten.leaky_relu_backward]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_leaky_relu_backward_4.run(buf2, buf20, 64, grid=grid(64), stream=stream0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv_3], Original ATen: [aten.convolution]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(primals_2, primals_5, stride=(1, 1), padding=(18, 18), dilation=(18, 18), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 1, 4, 4), (16, 16, 4, 1), torch.bool)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [leaky_relu_3], Original ATen: [aten.leaky_relu, aten.leaky_relu_backward]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_leaky_relu_backward_4.run(buf3, buf19, 64, grid=grid(64), stream=stream0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [global_pool_1, global_pool_2], Original ATen: [aten.leaky_relu, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_5.run(buf7, buf9, buf6, buf10, buf11, buf12, 64, grid=grid(64), stream=stream0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 5, 4, 4), (80, 16, 4, 1), torch.float32)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_6.run(buf0, buf1, buf2, buf3, buf12, buf8, buf9, buf6, buf10, buf11, buf13, buf14, 320, grid=grid(320), stream=stream0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf12
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv_5], Original ATen: [aten.convolution]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = extern_kernels.convolution(buf14, primals_7, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf15, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf15; del buf15  # reuse
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [leaky_relu_5], Original ATen: [aten.leaky_relu, aten.leaky_relu_backward]
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_leaky_relu_backward_7.run(buf16, buf17, 256, grid=grid(256), stream=stream0)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf16, primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, buf5, buf7, buf8, buf9, buf10, buf11, buf13, buf14, buf17, buf18, buf19, buf20, buf21, buf22, )
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((1, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((1, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((1, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((1, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, 5, 1, 1), (5, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7])
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:39:53.257000 2021286 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:39:53.269000 2021286 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/tp/ctplfhlodl524dsprg2fe7jorooffg2zo6mwg56syv3npmx53o5c.py
