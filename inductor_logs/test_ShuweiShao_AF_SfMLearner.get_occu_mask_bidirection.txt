V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['12_inference']
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/44/c44b57zbzv46krbnpqjub2uyqgqhk5hunawqeucaoqslkls4xpmv.py
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [new_locs_2], Original ATen: [aten.index]
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   new_locs_2 => index
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%permute_1, [None, None, None, %lift_fresh_copy]), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_index_0 = async_compile.triton('triton_poi_fused_index_0', '''
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_index_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_index_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 2)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 2) % 16)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 32
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (x1 + 32*x2), xmask, eviction_policy='evict_last')
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (16 + x1), xmask, eviction_policy='evict_last')
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr1 + (16 + x1 + 32*x2), xmask, eviction_policy='evict_last')
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int64)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp2, tmp1, tmp3)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 == tmp7
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 0, tl.int32)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 == tmp9
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 0.3333333333333333
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.5
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 - tmp16
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 2.0
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp10, tmp19, tmp22)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 * tmp14
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 - tmp16
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp18
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp6 == tmp9
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (x1 + 16*tmp4), xmask, eviction_policy='evict_last')
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr1 + (x1 + 16*tmp4 + 32*x2), xmask, eviction_policy='evict_last')
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp27, tmp19, tmp30)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp8, tmp26, tmp31)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp32, xmask)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/oe/coe4nprxt7ieoyvyywipzp7csglhbx3h7eedkws4oo4tnnbhfueo.py
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [flow21_warped, add_1, flow12_diff], Original ATen: [aten.grid_sampler_2d, aten.add, aten.abs]
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_8
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   flow12_diff => abs_1
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   flow21_warped => add_1, add_2, add_3, add_4, add_5, add_6, add_7, clamp_max, clamp_max_1, clamp_min, clamp_min_1, floor, floor_1, full_default_11, full_default_2, full_default_5, full_default_8, ge, ge_1, ge_2, ge_3, ge_4, ge_5, ge_6, ge_7, index_1, index_2, index_3, index_4, logical_and, logical_and_1, logical_and_10, logical_and_11, logical_and_2, logical_and_3, logical_and_4, logical_and_5, logical_and_6, logical_and_7, logical_and_8, logical_and_9, lt, lt_1, lt_2, lt_3, lt_4, lt_5, lt_6, lt_7, mul_10, mul_11, mul_2, mul_3, mul_4, mul_5, mul_6, mul_7, mul_8, mul_9, sub_2, sub_3, sub_4, sub_5, sub_6, sub_7, sub_8, sub_9, where_11, where_2, where_5, where_8
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_8, 2.0), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, 1.5), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_1, 0), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=5] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 3), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor : [num_users=9] = call_function[target=torch.ops.aten.floor.default](args = (%clamp_max,), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor, 0), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor, 4), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_9, 2.0), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_3, 1.5), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_2, 0), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_1 : [num_users=5] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_1, 3), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor_1 : [num_users=9] = call_function[target=torch.ops.aten.floor.default](args = (%clamp_max_1,), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_1 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor_1, 0), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_1 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor_1, 4), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_1, %lt_1), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_1 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt, %logical_and), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_2 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge, %logical_and_1), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_1 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%arg2_1, [%view_1, %view_2, %where_1, %where]), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=8] = call_function[target=torch.ops.aten.add.Tensor](args = (%floor, 1), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_3, %clamp_max), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=8] = call_function[target=torch.ops.aten.add.Tensor](args = (%floor_1, 1), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %clamp_max_1), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %sub_3), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_2 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_2, %mul_4, %full_default_2), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_1, %where_2), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_2 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_3, 0), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_2 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_3, 4), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_3 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor_1, 0), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_3 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor_1, 4), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_3 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_3, %lt_3), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_4 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_2, %logical_and_3), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_5 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_2, %logical_and_4), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_2 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%arg2_1, [%view_1, %view_2, %where_4, %where_3]), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_max, %floor), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %clamp_max_1), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %sub_5), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_5 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_5 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_5, %mul_5, %full_default_5), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_2, %where_5), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %mul_9), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_4 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor, 0), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_4 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor, 4), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_5 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_4, 0), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_5 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_4, 4), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_6 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_5, %lt_5), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_7 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_4, %logical_and_6), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_8 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_4, %logical_and_7), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_3 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%arg2_1, [%view_1, %view_2, %where_7, %where_6]), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_3, %clamp_max), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_max_1, %floor_1), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %sub_7), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_8 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_8 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_8, %mul_6, %full_default_8), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_3, %where_8), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_5, %mul_10), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_6 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_3, 0), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_6 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_3, 4), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_7 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_4, 0), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_7 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_4, 4), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_9 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_7, %lt_7), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_10 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_6, %logical_and_9), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_11 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_6, %logical_and_10), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_4 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%arg2_1, [%view_1, %view_2, %where_10, %where_9]), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_max, %floor), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_max_1, %floor_1), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %sub_9), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_11 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_11 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_11, %mul_7, %full_default_11), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_4, %where_11), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_6, %mul_11), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%arg1_1, %add_7), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%add_8,), kwargs = {})
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_abs_add_grid_sampler_2d_1 = async_compile.triton('triton_poi_fused_abs_add_grid_sampler_2d_1', '''
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_abs_add_grid_sampler_2d_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_abs_add_grid_sampler_2d_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 32
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 16
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0 + 32*x2), xmask, eviction_policy='evict_last')
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (1 + 2*x0 + 32*x2), xmask, eviction_policy='evict_last')
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tl.load(in_ptr2 + (x3), xmask)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 2.0
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.5
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp4, tmp5)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 3.0
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.minimum(tmp6, tmp7)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = libdevice.floor(tmp8)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 >= tmp5
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 4.0
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 < tmp11
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp1
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 + tmp3
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp15, tmp5)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.minimum(tmp16, tmp7)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = libdevice.floor(tmp17)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 >= tmp5
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 < tmp11
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 & tmp20
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp12 & tmp21
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp10 & tmp22
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp18.to(tl.int64)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full([1], 0, tl.int64)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp23, tmp24, tmp25)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.full([XBLOCK], 4, tl.int32)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 + tmp27
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp26 < 0
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp29, tmp28, tmp26)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp30) & (tmp30 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp30 < 4")
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp9.to(tl.int64)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp23, tmp32, tmp25)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 + tmp27
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 < 0
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.where(tmp35, tmp34, tmp33)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp36) & (tmp36 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp36 < 4")
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr1 + (tmp36 + 4*tmp30 + 16*x4), xmask, eviction_policy='evict_last')
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = 1.0
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp9 + tmp39
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 >= tmp5
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 < tmp11
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 & tmp21
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp41 & tmp43
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp44, tmp24, tmp25)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 + tmp27
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp45 < 0
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.where(tmp47, tmp46, tmp45)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp48) & (tmp48 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp48 < 4")
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp40.to(tl.int64)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.where(tmp44, tmp50, tmp25)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 + tmp27
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 < 0
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.where(tmp53, tmp52, tmp51)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp54) & (tmp54 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp54 < 4")
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.load(in_ptr1 + (tmp54 + 4*tmp48 + 16*x4), xmask, eviction_policy='evict_last')
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp18 + tmp39
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp57 >= tmp5
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp57 < tmp11
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp58 & tmp59
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp12 & tmp60
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp10 & tmp61
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp57.to(tl.int64)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.where(tmp62, tmp63, tmp25)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp64 + tmp27
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp64 < 0
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tl.where(tmp66, tmp65, tmp64)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp67) & (tmp67 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp67 < 4")
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.where(tmp62, tmp32, tmp25)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp69 + tmp27
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp69 < 0
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tl.where(tmp71, tmp70, tmp69)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp72) & (tmp72 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp72 < 4")
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.load(in_ptr1 + (tmp72 + 4*tmp67 + 16*x4), xmask, eviction_policy='evict_last')
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp42 & tmp60
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp41 & tmp75
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.where(tmp76, tmp63, tmp25)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp77 + tmp27
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp77 < 0
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl.where(tmp79, tmp78, tmp77)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp80) & (tmp80 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp80 < 4")
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tl.where(tmp76, tmp50, tmp25)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp82 + tmp27
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp82 < 0
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tl.where(tmp84, tmp83, tmp82)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp85) & (tmp85 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp85 < 4")
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tl.load(in_ptr1 + (tmp85 + 4*tmp80 + 16*x4), xmask, eviction_policy='evict_last')
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp40 - tmp8
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tmp57 - tmp17
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp88 * tmp89
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tl.where(tmp23, tmp90, tmp5)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tmp8 - tmp9
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tmp92 * tmp89
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tl.where(tmp44, tmp93, tmp5)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp17 - tmp18
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp88 * tmp95
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.where(tmp62, tmp96, tmp5)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tmp92 * tmp95
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tl.where(tmp76, tmp98, tmp5)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tmp38 * tmp91
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tmp56 * tmp94
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = tmp101 + tmp102
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = tmp74 * tmp97
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = tmp103 + tmp104
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = tmp87 * tmp99
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = tmp105 + tmp106
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = tmp100 + tmp107
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tl_math.abs(tmp108)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp109, xmask)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (1, 2, 4, 4), (32, 16, 4, 1))
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 2, 4, 4), (32, 16, 4, 1))
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (4, 2, 4, 4), (32, 16, 4, 1))
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 2), (32, 8, 2, 1), torch.float32)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [new_locs_2], Original ATen: [aten.index]
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_index_0.run(arg0_1, arg1_1, buf0, 128, grid=grid(128), stream=stream0)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 2, 4, 4), (32, 16, 4, 1), torch.float32)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf1; del buf1  # reuse
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf9; del buf9  # reuse
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [flow21_warped, add_1, flow12_diff], Original ATen: [aten.grid_sampler_2d, aten.add, aten.abs]
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_abs_add_grid_sampler_2d_1.run(buf10, buf0, arg2_1, arg1_1, 128, grid=grid(128), stream=stream0)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf10, )
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((1, 2, 4, 4), (32, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 2, 4, 4), (32, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((4, 2, 4, 4), (32, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:59:41.223000 2848083 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:59:41.230000 2848083 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/do/cdo3pxej7ehaepxtusfkm4q62herdajcjctn4qpqhkc3mk7ml4fr.py
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['12_inference']
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/44/c44b57zbzv46krbnpqjub2uyqgqhk5hunawqeucaoqslkls4xpmv.py
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [new_locs_2], Original ATen: [aten.index]
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   new_locs_2 => index
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%permute_1, [None, None, None, %lift_fresh_copy]), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_index_0 = async_compile.triton('triton_poi_fused_index_0', '''
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_index_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_index_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 2)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 2) % 16)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 32
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (x1 + 32*x2), xmask, eviction_policy='evict_last')
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (16 + x1), xmask, eviction_policy='evict_last')
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr1 + (16 + x1 + 32*x2), xmask, eviction_policy='evict_last')
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int64)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp2, tmp1, tmp3)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 == tmp7
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 0, tl.int32)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 == tmp9
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 0.3333333333333333
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.5
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 - tmp16
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 2.0
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp10, tmp19, tmp22)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 * tmp14
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 - tmp16
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp18
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp6 == tmp9
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (x1 + 16*tmp4), xmask, eviction_policy='evict_last')
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr1 + (x1 + 16*tmp4 + 32*x2), xmask, eviction_policy='evict_last')
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp27, tmp19, tmp30)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp8, tmp26, tmp31)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp32, xmask)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/oe/coe4nprxt7ieoyvyywipzp7csglhbx3h7eedkws4oo4tnnbhfueo.py
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [flow21_warped, add_1, flow12_diff], Original ATen: [aten.grid_sampler_2d, aten.add, aten.abs]
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_8
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   flow12_diff => abs_1
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   flow21_warped => add_1, add_2, add_3, add_4, add_5, add_6, add_7, clamp_max, clamp_max_1, clamp_min, clamp_min_1, floor, floor_1, full_default_11, full_default_2, full_default_5, full_default_8, ge, ge_1, ge_2, ge_3, ge_4, ge_5, ge_6, ge_7, index_1, index_2, index_3, index_4, logical_and, logical_and_1, logical_and_10, logical_and_11, logical_and_2, logical_and_3, logical_and_4, logical_and_5, logical_and_6, logical_and_7, logical_and_8, logical_and_9, lt, lt_1, lt_2, lt_3, lt_4, lt_5, lt_6, lt_7, mul_10, mul_11, mul_2, mul_3, mul_4, mul_5, mul_6, mul_7, mul_8, mul_9, sub_2, sub_3, sub_4, sub_5, sub_6, sub_7, sub_8, sub_9, where_11, where_2, where_5, where_8
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_8, 2.0), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, 1.5), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_1, 0), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=5] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 3), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor : [num_users=9] = call_function[target=torch.ops.aten.floor.default](args = (%clamp_max,), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor, 0), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor, 4), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_9, 2.0), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_3, 1.5), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_2, 0), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_1 : [num_users=5] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_1, 3), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor_1 : [num_users=9] = call_function[target=torch.ops.aten.floor.default](args = (%clamp_max_1,), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_1 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor_1, 0), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_1 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor_1, 4), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_1, %lt_1), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_1 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt, %logical_and), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_2 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge, %logical_and_1), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_1 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%arg2_1, [%view_1, %view_2, %where_1, %where]), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=8] = call_function[target=torch.ops.aten.add.Tensor](args = (%floor, 1), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_3, %clamp_max), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=8] = call_function[target=torch.ops.aten.add.Tensor](args = (%floor_1, 1), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %clamp_max_1), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %sub_3), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_2 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_2, %mul_4, %full_default_2), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_1, %where_2), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_2 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_3, 0), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_2 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_3, 4), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_3 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor_1, 0), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_3 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor_1, 4), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_3 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_3, %lt_3), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_4 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_2, %logical_and_3), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_5 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_2, %logical_and_4), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_2 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%arg2_1, [%view_1, %view_2, %where_4, %where_3]), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_max, %floor), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %clamp_max_1), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %sub_5), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_5 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_5 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_5, %mul_5, %full_default_5), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_2, %where_5), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %mul_9), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_4 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor, 0), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_4 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor, 4), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_5 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_4, 0), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_5 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_4, 4), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_6 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_5, %lt_5), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_7 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_4, %logical_and_6), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_8 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_4, %logical_and_7), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_3 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%arg2_1, [%view_1, %view_2, %where_7, %where_6]), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_3, %clamp_max), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_max_1, %floor_1), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %sub_7), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_8 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_8 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_8, %mul_6, %full_default_8), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_3, %where_8), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_5, %mul_10), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_6 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_3, 0), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_6 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_3, 4), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_7 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_4, 0), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_7 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_4, 4), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_9 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_7, %lt_7), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_10 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_6, %logical_and_9), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_11 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_6, %logical_and_10), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_4 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%arg2_1, [%view_1, %view_2, %where_10, %where_9]), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_max, %floor), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_max_1, %floor_1), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %sub_9), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_11 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_11 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_11, %mul_7, %full_default_11), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_4, %where_11), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_6, %mul_11), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%arg1_1, %add_7), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%add_8,), kwargs = {})
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_abs_add_grid_sampler_2d_1 = async_compile.triton('triton_poi_fused_abs_add_grid_sampler_2d_1', '''
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_abs_add_grid_sampler_2d_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_abs_add_grid_sampler_2d_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 32
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 16
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0 + 32*x2), xmask, eviction_policy='evict_last')
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (1 + 2*x0 + 32*x2), xmask, eviction_policy='evict_last')
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tl.load(in_ptr2 + (x3), xmask)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 2.0
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.5
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp4, tmp5)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 3.0
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.minimum(tmp6, tmp7)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = libdevice.floor(tmp8)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 >= tmp5
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 4.0
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 < tmp11
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp1
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 + tmp3
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp15, tmp5)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.minimum(tmp16, tmp7)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = libdevice.floor(tmp17)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 >= tmp5
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 < tmp11
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 & tmp20
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp12 & tmp21
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp10 & tmp22
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp18.to(tl.int64)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full([1], 0, tl.int64)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp23, tmp24, tmp25)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.full([XBLOCK], 4, tl.int32)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 + tmp27
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp26 < 0
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp29, tmp28, tmp26)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp30) & (tmp30 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp30 < 4")
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp9.to(tl.int64)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp23, tmp32, tmp25)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 + tmp27
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 < 0
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.where(tmp35, tmp34, tmp33)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp36) & (tmp36 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp36 < 4")
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr1 + (tmp36 + 4*tmp30 + 16*x4), xmask, eviction_policy='evict_last')
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = 1.0
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp9 + tmp39
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 >= tmp5
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 < tmp11
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 & tmp21
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp41 & tmp43
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp44, tmp24, tmp25)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 + tmp27
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp45 < 0
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.where(tmp47, tmp46, tmp45)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp48) & (tmp48 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp48 < 4")
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp40.to(tl.int64)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.where(tmp44, tmp50, tmp25)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 + tmp27
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 < 0
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.where(tmp53, tmp52, tmp51)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp54) & (tmp54 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp54 < 4")
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.load(in_ptr1 + (tmp54 + 4*tmp48 + 16*x4), xmask, eviction_policy='evict_last')
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp18 + tmp39
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp57 >= tmp5
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp57 < tmp11
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp58 & tmp59
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp12 & tmp60
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp10 & tmp61
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp57.to(tl.int64)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.where(tmp62, tmp63, tmp25)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp64 + tmp27
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp64 < 0
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tl.where(tmp66, tmp65, tmp64)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp67) & (tmp67 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp67 < 4")
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.where(tmp62, tmp32, tmp25)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp69 + tmp27
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp69 < 0
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tl.where(tmp71, tmp70, tmp69)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp72) & (tmp72 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp72 < 4")
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.load(in_ptr1 + (tmp72 + 4*tmp67 + 16*x4), xmask, eviction_policy='evict_last')
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp42 & tmp60
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp41 & tmp75
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.where(tmp76, tmp63, tmp25)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp77 + tmp27
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp77 < 0
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl.where(tmp79, tmp78, tmp77)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp80) & (tmp80 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp80 < 4")
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tl.where(tmp76, tmp50, tmp25)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp82 + tmp27
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp82 < 0
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tl.where(tmp84, tmp83, tmp82)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp85) & (tmp85 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp85 < 4")
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tl.load(in_ptr1 + (tmp85 + 4*tmp80 + 16*x4), xmask, eviction_policy='evict_last')
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp40 - tmp8
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tmp57 - tmp17
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp88 * tmp89
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tl.where(tmp23, tmp90, tmp5)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tmp8 - tmp9
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tmp92 * tmp89
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tl.where(tmp44, tmp93, tmp5)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp17 - tmp18
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp88 * tmp95
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.where(tmp62, tmp96, tmp5)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tmp92 * tmp95
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tl.where(tmp76, tmp98, tmp5)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tmp38 * tmp91
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tmp56 * tmp94
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = tmp101 + tmp102
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = tmp74 * tmp97
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = tmp103 + tmp104
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = tmp87 * tmp99
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = tmp105 + tmp106
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = tmp100 + tmp107
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tl_math.abs(tmp108)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp109, xmask)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (1, 2, 4, 4), (32, 16, 4, 1))
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 2, 4, 4), (32, 16, 4, 1))
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (4, 2, 4, 4), (32, 16, 4, 1))
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 2), (32, 8, 2, 1), torch.float32)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [new_locs_2], Original ATen: [aten.index]
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_index_0.run(arg0_1, arg1_1, buf0, 128, grid=grid(128), stream=stream0)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 2, 4, 4), (32, 16, 4, 1), torch.float32)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf1; del buf1  # reuse
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf9; del buf9  # reuse
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [flow21_warped, add_1, flow12_diff], Original ATen: [aten.grid_sampler_2d, aten.add, aten.abs]
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_abs_add_grid_sampler_2d_1.run(buf10, buf0, arg2_1, arg1_1, 128, grid=grid(128), stream=stream0)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf10, )
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((1, 2, 4, 4), (32, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 2, 4, 4), (32, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((4, 2, 4, 4), (32, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:49:18.222000 612325 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:49:18.230000 612325 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/y3/cy3dfwuz2i4z5jgxx6tgpjvwadixdqjp3aquyuatnykc36aizfnr.py
