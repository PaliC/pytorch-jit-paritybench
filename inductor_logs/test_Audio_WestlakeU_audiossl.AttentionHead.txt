V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/jh/cjhfnysgr7xwlsxizyg35osek2mvccv3nyr5lpaboonlffoplwxo.py
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.cat]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => cat
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=4] = call_function[target=torch.ops.aten.cat.default](args = ([%expand, %view_1], 1), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_0 = async_compile.triton('triton_poi_fused_cat_0', '''
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 80
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 5)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 20
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 5, tl.int64)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 4*((-1) + x1) + 16*x2), tmp6 & xmask, other=0.0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4u/c4uj7sbz2tkrsb5jv4qjkexjtkgsvxfup3tejiourwynrjdt3sza.py
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [layer_norm], Original ATen: [aten.native_layer_norm]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   layer_norm => add, rsqrt, var_mean
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%cat, [2]), kwargs = {correction: 0, keepdim: True})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_layer_norm_1 = async_compile.triton('triton_poi_fused_native_layer_norm_1', '''
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32}, 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_layer_norm_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_layer_norm_1(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 20
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 - tmp8
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp1 - tmp8
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10 + tmp12
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp3 - tmp8
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 * tmp14
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 + tmp15
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp5 - tmp8
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 * tmp17
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 + tmp18
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 / tmp7
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1e-05
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.rsqrt(tmp22)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp8, xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp23, xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4s/c4szvggl3acyoamubkoru4d5hm6zhs37bf7wzj7houg2qxohq4zp.py
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [layer_norm], Original ATen: [aten.native_layer_norm]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   layer_norm => add, add_1, mul, mul_1, rsqrt, sub, var_mean
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%cat, [2]), kwargs = {correction: 0, keepdim: True})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat, %getitem_1), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %primals_5), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %primals_6), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_layer_norm_2 = async_compile.triton('triton_poi_fused_native_layer_norm_2', '''
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_layer_norm_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_layer_norm_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 80
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/y6/cy6b5r4qllpoktzavdt3tfmbod3mdgrbcg2l7of6ho2thxagroys.py
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [matmul], Original ATen: [aten.clone]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   matmul => clone
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_1,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_3 = async_compile.triton('triton_poi_fused_clone_3', '''
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 8}, tile_hint=TileHint.SQUARE,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_3(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 5
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 12*x2 + 60*y1), xmask & ymask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 5*y3), tmp0, xmask & ymask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pg/cpgwgccwf5pftjnmvbp4al6kkg255zvvbj3b2i2qjpwv3ksbryju.py
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [matmul], Original ATen: [aten.clone]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   matmul => clone_1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_1 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_2,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_4 = async_compile.triton('triton_poi_fused_clone_4', '''
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 8}, tile_hint=TileHint.SQUARE,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 5
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4 + y0 + 12*x2 + 60*y1), xmask & ymask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 5*y3), tmp0, xmask & ymask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bb/cbbdgtbtryp3ltlq7u4x2uzl7u2tz45sxqwjov6azn3t26iiz37p.py
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn_1], Original ATen: [aten._softmax]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_1 => exp, sum_1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_7, 1), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%mul_tensor, [-1], True), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_tensor, 1.0), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%mul_tensor_1,), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_5 = async_compile.triton('triton_poi_fused__softmax_5', '''
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_5(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 80
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (5*x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 5*x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (2 + 5*x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (3 + 5*x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (4 + 5*x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp2, tmp4)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp5, tmp7)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp8, tmp10)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 * tmp1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp11, tmp13)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp2 - tmp14
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 * tmp1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl_math.exp(tmp16)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp4 - tmp14
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl_math.exp(tmp19)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 + tmp20
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp7 - tmp14
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 * tmp1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl_math.exp(tmp23)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp21 + tmp24
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp10 - tmp14
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl_math.exp(tmp27)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp25 + tmp28
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp13 - tmp14
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 * tmp1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl_math.exp(tmp31)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 + tmp32
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp14, xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp33, xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rb/crbi7hacm7w4zg4xfv4imnw4eedtnawujhloyfes42mzt3lcydon.py
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn_1], Original ATen: [aten._softmax]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_1 => div, exp
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_7, 1), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%mul_tensor, [-1], True), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_tensor, 1.0), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%mul_tensor_1,), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_6 = async_compile.triton('triton_poi_fused__softmax_6', '''
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_6', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_6(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 400
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 5
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 * tmp1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.exp(tmp5)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp8, xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3v/c3vzhvw7bcpbgzcelnuggz6p3ibxsnk6ip7sehf4swy55b2enc5z.py
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [matmul_1], Original ATen: [aten.clone]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   matmul_1 => clone_3
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_3 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_4,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_7 = async_compile.triton('triton_poi_fused_clone_7', '''
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 8}, tile_hint=TileHint.SQUARE,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_7(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 5
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (8 + y0 + 12*x2 + 60*y1), xmask & ymask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 5*y3), tmp0, xmask & ymask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4f/c4falyndw6zob3izlfb5cpgz7q6q6x3vfihp6hdxorrsexmf4k4a.py
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.clone]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => clone_4
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_4 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%view_11,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_8 = async_compile.triton('triton_poi_fused_clone_8', '''
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 32, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_8(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 20
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 5)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 5
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 5*x2 + 20*y1), xmask & ymask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp0, xmask & ymask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pe/cpexxufsslzpmutvjixb6mlcksar5r7ipe6xfarxjxdgbokkdcwf.py
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_3, x_5, layer_norm_1], Original ATen: [aten.add, aten.native_layer_norm]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   layer_norm_1 => var_mean_1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => add_2
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => add_3
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_13, %primals_9), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%cat, %add_2), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%add_3, [2]), kwargs = {correction: 0, keepdim: True})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_native_layer_norm_9 = async_compile.triton('triton_poi_fused_add_native_layer_norm_9', '''
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32}, 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_native_layer_norm_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_native_layer_norm_9(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 20
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (0))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK])
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr2 + (1))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr2 + (2))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [XBLOCK])
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr2 + (3))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.broadcast_to(tmp22, [XBLOCK])
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 + tmp4
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp6 + tmp10
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp5 + tmp11
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 + tmp16
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 + tmp17
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp12 + tmp18
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp21 + tmp23
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp20 + tmp24
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp19 + tmp25
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = 4.0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 / tmp27
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp5 - tmp28
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 * tmp29
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp11 - tmp28
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 * tmp31
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 + tmp32
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp18 - tmp28
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 * tmp34
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp33 + tmp35
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp25 - tmp28
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 * tmp37
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp36 + tmp38
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 / tmp27
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp28, xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp40, xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/af/cafhh7qivaku4y5zzlituzhet7knxkvz32gauqwyawfksj72wdtc.py
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_3, x_5, layer_norm_1], Original ATen: [aten.add, aten.native_layer_norm]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   layer_norm_1 => add_4, add_5, mul_3, mul_4, rsqrt_1, sub_2
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => add_2
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => add_3
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_13, %primals_9), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%cat, %add_2), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, 1e-05), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt_1 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_4,), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_3, %getitem_3), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %rsqrt_1), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_3, %primals_10), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, %primals_11), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_native_layer_norm_10 = async_compile.triton('triton_poi_fused_add_native_layer_norm_10', '''
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_native_layer_norm_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_native_layer_norm_10(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 80
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 - tmp5
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1e-05
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 + tmp8
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = libdevice.rsqrt(tmp9)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp6 * tmp10
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp15, xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2c/c2cxqkg7rybgenipk5cpsn6bue66zcg53m7iyo3epsmglhqiudqx.py
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_7], Original ATen: [aten.gelu]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_7 => add_6, erf, mul_5, mul_6, mul_7
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_15, 0.5), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_15, 0.7071067811865476), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %erf : [num_users=1] = call_function[target=torch.ops.aten.erf.default](args = (%mul_6,), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%erf, 1), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_5, %add_6), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_gelu_11 = async_compile.triton('triton_poi_fused_gelu_11', '''
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_gelu_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_gelu_11(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 320
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.5
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.7071067811865476
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.erf(tmp4)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1.0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 * tmp7
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp8, xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/px/cpx56c4jgnde3lv2u4jph5tiballx6w23rnq6f5g6xxhrnvgl4br.py
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_14], Original ATen: [aten._native_batch_norm_legit_no_training]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_14 => mul_9, sub_3
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze, %unsqueeze_1), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %unsqueeze_2), kwargs = {})
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_12 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_12', '''
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_12', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_12(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 20*x1), xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 20*x1), xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0 + 20*x1), xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 + tmp7
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 - tmp9
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 1e-05
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = libdevice.sqrt(tmp13)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([1], 1, tl.int32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 / tmp14
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 1.0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp10 * tmp18
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp19, xmask)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19 = args
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4), (4, 1))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4), (16, 4, 1))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, 1, 4), (4, 4, 1))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, ), (1, ))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (12, 4), (4, 1))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4), (4, 1))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, ), (1, ))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (16, 4), (4, 1))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (16, ), (1, ))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, 16), (16, 1))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (4, ), (1, ))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (4, ), (1, ))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (4, 4), (4, 1))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (4, ), (1, ))
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.addmm]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_2, reinterpret_tensor(primals_3, (16, 4), (4, 1), 0), reinterpret_tensor(primals_1, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 5, 4), (20, 4, 1), torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.cat]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_0.run(primals_4, buf0, buf1, 80, grid=grid(80), stream=stream0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 5, 1), (5, 1, 20), torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 5, 1), (5, 1, 20), torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [layer_norm], Original ATen: [aten.native_layer_norm]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_1.run(buf1, buf2, buf3, 20, grid=grid(20), stream=stream0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 5, 4), (20, 4, 1), torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [layer_norm], Original ATen: [aten.native_layer_norm]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_2.run(buf1, buf2, buf3, primals_5, primals_6, buf4, 80, grid=grid(80), stream=stream0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((20, 12), (12, 1), torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_1], Original ATen: [aten.mm]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf4, (20, 4), (4, 1), 0), reinterpret_tensor(primals_7, (4, 12), (1, 4), 0), out=buf5)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 5, 1), (20, 5, 1, 1), torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul], Original ATen: [aten.clone]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_3.run(buf5, buf6, 16, 5, grid=grid(16, 5), stream=stream0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 1, 5), (20, 5, 5, 1), torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul], Original ATen: [aten.clone]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_4.run(buf5, buf7, 16, 5, grid=grid(16, 5), stream=stream0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((16, 5, 5), (25, 5, 1), torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul], Original ATen: [aten.bmm]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf6, (16, 5, 1), (5, 1, 0), 0), reinterpret_tensor(buf7, (16, 1, 5), (5, 0, 1), 0), out=buf8)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4, 5, 1), (20, 5, 1, 80), torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 4, 5, 1), (20, 5, 1, 80), torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_1], Original ATen: [aten._softmax]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_5.run(buf8, buf9, buf10, 80, grid=grid(80), stream=stream0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf8, (4, 4, 5, 5), (100, 25, 5, 1), 0); del buf8  # reuse
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_1], Original ATen: [aten._softmax]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_6.run(buf11, buf9, buf10, 400, grid=grid(400), stream=stream0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf9, (4, 4, 5, 1), (20, 5, 1, 1), 0); del buf9  # reuse
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_1], Original ATen: [aten.clone]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_7.run(buf5, buf12, 16, 5, grid=grid(16, 5), stream=stream0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = reinterpret_tensor(buf10, (16, 5, 1), (5, 1, 1), 0); del buf10  # reuse
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_1], Original ATen: [aten.bmm]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf11, (16, 5, 5), (25, 5, 1), 0), reinterpret_tensor(buf12, (16, 5, 1), (5, 1, 0), 0), out=buf13)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 5, 4), (20, 4, 1), torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.clone]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_8.run(buf13, buf14, 20, 4, grid=grid(20, 4), stream=stream0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = reinterpret_tensor(buf13, (20, 4), (4, 1), 0); del buf13  # reuse
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.mm]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf14, (20, 4), (4, 1), 0), reinterpret_tensor(primals_8, (4, 4), (1, 4), 0), out=buf15)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf3; del buf3  # reuse
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = buf2; del buf2  # reuse
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3, x_5, layer_norm_1], Original ATen: [aten.add, aten.native_layer_norm]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_native_layer_norm_9.run(buf1, buf15, primals_9, buf16, buf17, 20, grid=grid(20), stream=stream0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 5, 4), (20, 4, 1), torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3, x_5, layer_norm_1], Original ATen: [aten.add, aten.native_layer_norm]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_native_layer_norm_10.run(buf1, buf15, primals_9, buf16, buf17, primals_10, primals_11, buf18, 80, grid=grid(80), stream=stream0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf16
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((20, 16), (16, 1), torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.addmm]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_13, reinterpret_tensor(buf18, (20, 4), (4, 1), 0), reinterpret_tensor(primals_12, (4, 16), (1, 4), 0), alpha=1, beta=1, out=buf19)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 5, 16), (80, 16, 1), torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_7], Original ATen: [aten.gelu]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_gelu_11.run(buf19, buf20, 320, grid=grid(320), stream=stream0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((20, 4), (4, 1), torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_9], Original ATen: [aten.addmm]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf20, (20, 16), (16, 1), 0), reinterpret_tensor(primals_14, (16, 4), (1, 16), 0), out=buf21)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 4, 1), (4, 1, 1), torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_14], Original ATen: [aten._native_batch_norm_legit_no_training]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_12.run(buf1, buf15, primals_9, buf21, primals_15, primals_16, primals_17, buf22, 16, grid=grid(16), stream=stream0)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf21
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_16
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_5], Original ATen: [aten.addmm]
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_19, reinterpret_tensor(buf22, (4, 4), (4, 1), 0), reinterpret_tensor(primals_18, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf23)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_19
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf23, primals_5, primals_9, primals_10, primals_17, reinterpret_tensor(primals_3, (16, 4), (4, 1), 0), buf1, reinterpret_tensor(buf4, (20, 4), (4, 1), 0), buf11, reinterpret_tensor(buf14, (20, 4), (4, 1), 0), buf15, reinterpret_tensor(buf18, (20, 4), (4, 1), 0), buf19, reinterpret_tensor(buf20, (20, 16), (16, 1), 0), reinterpret_tensor(buf22, (4, 4), (4, 1), 0), primals_18, primals_14, primals_12, primals_8, reinterpret_tensor(buf12, (16, 1, 5), (5, 1, 1), 0), reinterpret_tensor(buf6, (16, 1, 5), (5, 1, 1), 0), reinterpret_tensor(buf7, (16, 5, 1), (5, 1, 5), 0), primals_7, )
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, 1, 4), (4, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((12, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((16, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, 16), (16, 1), device='cuda:0', dtype=torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19])
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:31:25.861000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:25.874000 3636971 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6r/c6rhxlnuhyxkn3yrjf3syczprokupupexaz5n7u32laem2ie4m4k.py
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/jh/cjhfnysgr7xwlsxizyg35osek2mvccv3nyr5lpaboonlffoplwxo.py
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.cat]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => cat
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=4] = call_function[target=torch.ops.aten.cat.default](args = ([%expand, %view_1], 1), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_0 = async_compile.triton('triton_poi_fused_cat_0', '''
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 80
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 5)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 20
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 5, tl.int64)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 4*((-1) + x1) + 16*x2), tmp6 & xmask, other=0.0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4u/c4uj7sbz2tkrsb5jv4qjkexjtkgsvxfup3tejiourwynrjdt3sza.py
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [layer_norm], Original ATen: [aten.native_layer_norm]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   layer_norm => add, rsqrt, var_mean
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%cat, [2]), kwargs = {correction: 0, keepdim: True})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_layer_norm_1 = async_compile.triton('triton_poi_fused_native_layer_norm_1', '''
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32}, 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_layer_norm_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_layer_norm_1(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 20
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 - tmp8
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp1 - tmp8
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10 + tmp12
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp3 - tmp8
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 * tmp14
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 + tmp15
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp5 - tmp8
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 * tmp17
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 + tmp18
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 / tmp7
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1e-05
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.rsqrt(tmp22)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp8, xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp23, xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4s/c4szvggl3acyoamubkoru4d5hm6zhs37bf7wzj7houg2qxohq4zp.py
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [layer_norm], Original ATen: [aten.native_layer_norm]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   layer_norm => add, add_1, mul, mul_1, rsqrt, sub, var_mean
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%cat, [2]), kwargs = {correction: 0, keepdim: True})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat, %getitem_1), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %primals_5), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %primals_6), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_layer_norm_2 = async_compile.triton('triton_poi_fused_native_layer_norm_2', '''
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_layer_norm_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_layer_norm_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 80
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/y6/cy6b5r4qllpoktzavdt3tfmbod3mdgrbcg2l7of6ho2thxagroys.py
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [matmul], Original ATen: [aten.clone]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   matmul => clone
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_1,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_3 = async_compile.triton('triton_poi_fused_clone_3', '''
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 8}, tile_hint=TileHint.SQUARE,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_3(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 5
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 12*x2 + 60*y1), xmask & ymask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 5*y3), tmp0, xmask & ymask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pg/cpgwgccwf5pftjnmvbp4al6kkg255zvvbj3b2i2qjpwv3ksbryju.py
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [matmul], Original ATen: [aten.clone]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   matmul => clone_1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_1 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_2,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_4 = async_compile.triton('triton_poi_fused_clone_4', '''
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 8}, tile_hint=TileHint.SQUARE,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 5
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4 + y0 + 12*x2 + 60*y1), xmask & ymask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 5*y3), tmp0, xmask & ymask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/bb/cbbdgtbtryp3ltlq7u4x2uzl7u2tz45sxqwjov6azn3t26iiz37p.py
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn_1], Original ATen: [aten._softmax]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_1 => exp, sum_1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_7, 1), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%mul_tensor, [-1], True), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_tensor, 1.0), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%mul_tensor_1,), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_5 = async_compile.triton('triton_poi_fused__softmax_5', '''
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_5(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 80
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (5*x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 5*x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (2 + 5*x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (3 + 5*x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (4 + 5*x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp2, tmp4)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp5, tmp7)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp8, tmp10)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 * tmp1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp11, tmp13)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp2 - tmp14
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 * tmp1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl_math.exp(tmp16)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp4 - tmp14
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl_math.exp(tmp19)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 + tmp20
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp7 - tmp14
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 * tmp1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl_math.exp(tmp23)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp21 + tmp24
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp10 - tmp14
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl_math.exp(tmp27)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp25 + tmp28
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp13 - tmp14
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 * tmp1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl_math.exp(tmp31)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 + tmp32
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp14, xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp33, xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/rb/crbi7hacm7w4zg4xfv4imnw4eedtnawujhloyfes42mzt3lcydon.py
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn_1], Original ATen: [aten._softmax]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_1 => div, exp
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_7, 1), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%mul_tensor, [-1], True), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_tensor, 1.0), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%mul_tensor_1,), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_6 = async_compile.triton('triton_poi_fused__softmax_6', '''
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_6', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_6(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 400
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 5
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 * tmp1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.exp(tmp5)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp8, xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3v/c3vzhvw7bcpbgzcelnuggz6p3ibxsnk6ip7sehf4swy55b2enc5z.py
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [matmul_1], Original ATen: [aten.clone]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   matmul_1 => clone_3
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_3 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_4,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_7 = async_compile.triton('triton_poi_fused_clone_7', '''
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 8}, tile_hint=TileHint.SQUARE,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_7(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 5
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (8 + y0 + 12*x2 + 60*y1), xmask & ymask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 5*y3), tmp0, xmask & ymask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4f/c4falyndw6zob3izlfb5cpgz7q6q6x3vfihp6hdxorrsexmf4k4a.py
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.clone]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => clone_4
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_4 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%view_11,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_8 = async_compile.triton('triton_poi_fused_clone_8', '''
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 32, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_8(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 20
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 5)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 5
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 5*x2 + 20*y1), xmask & ymask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp0, xmask & ymask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pe/cpexxufsslzpmutvjixb6mlcksar5r7ipe6xfarxjxdgbokkdcwf.py
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_3, x_5, layer_norm_1], Original ATen: [aten.add, aten.native_layer_norm]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   layer_norm_1 => var_mean_1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => add_2
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => add_3
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_13, %primals_9), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%cat, %add_2), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%add_3, [2]), kwargs = {correction: 0, keepdim: True})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_native_layer_norm_9 = async_compile.triton('triton_poi_fused_add_native_layer_norm_9', '''
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32}, 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_native_layer_norm_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_native_layer_norm_9(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 20
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (0))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK])
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr2 + (1))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr2 + (2))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [XBLOCK])
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr2 + (3))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.broadcast_to(tmp22, [XBLOCK])
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 + tmp4
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp6 + tmp10
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp5 + tmp11
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 + tmp16
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 + tmp17
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp12 + tmp18
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp21 + tmp23
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp20 + tmp24
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp19 + tmp25
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = 4.0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 / tmp27
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp5 - tmp28
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 * tmp29
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp11 - tmp28
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 * tmp31
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 + tmp32
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp18 - tmp28
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 * tmp34
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp33 + tmp35
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp25 - tmp28
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 * tmp37
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp36 + tmp38
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 / tmp27
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp28, xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp40, xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/af/cafhh7qivaku4y5zzlituzhet7knxkvz32gauqwyawfksj72wdtc.py
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_3, x_5, layer_norm_1], Original ATen: [aten.add, aten.native_layer_norm]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   layer_norm_1 => add_4, add_5, mul_3, mul_4, rsqrt_1, sub_2
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => add_2
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => add_3
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_13, %primals_9), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%cat, %add_2), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, 1e-05), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt_1 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_4,), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_3, %getitem_3), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %rsqrt_1), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_3, %primals_10), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, %primals_11), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_native_layer_norm_10 = async_compile.triton('triton_poi_fused_add_native_layer_norm_10', '''
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_native_layer_norm_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_native_layer_norm_10(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 80
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 - tmp5
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1e-05
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 + tmp8
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = libdevice.rsqrt(tmp9)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp6 * tmp10
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp15, xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2c/c2cxqkg7rybgenipk5cpsn6bue66zcg53m7iyo3epsmglhqiudqx.py
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_7], Original ATen: [aten.gelu]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_7 => add_6, erf, mul_5, mul_6, mul_7
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_15, 0.5), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_15, 0.7071067811865476), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %erf : [num_users=1] = call_function[target=torch.ops.aten.erf.default](args = (%mul_6,), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%erf, 1), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_5, %add_6), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_gelu_11 = async_compile.triton('triton_poi_fused_gelu_11', '''
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_gelu_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_gelu_11(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 320
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.5
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.7071067811865476
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.erf(tmp4)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1.0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 * tmp7
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp8, xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/px/cpx56c4jgnde3lv2u4jph5tiballx6w23rnq6f5g6xxhrnvgl4br.py
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_14], Original ATen: [aten._native_batch_norm_legit_no_training]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_14 => mul_9, sub_3
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze, %unsqueeze_1), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %unsqueeze_2), kwargs = {})
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_12 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_12', '''
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_12', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_12(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 20*x1), xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 20*x1), xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0 + 20*x1), xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 + tmp7
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 - tmp9
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 1e-05
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = libdevice.sqrt(tmp13)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([1], 1, tl.int32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 / tmp14
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 1.0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp10 * tmp18
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp19, xmask)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19 = args
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4), (4, 1))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4), (16, 4, 1))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, 1, 4), (4, 4, 1))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, ), (1, ))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (12, 4), (4, 1))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4), (4, 1))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, ), (1, ))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (16, 4), (4, 1))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (16, ), (1, ))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, 16), (16, 1))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (4, ), (1, ))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (4, ), (1, ))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (4, 4), (4, 1))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (4, ), (1, ))
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.addmm]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_2, reinterpret_tensor(primals_3, (16, 4), (4, 1), 0), reinterpret_tensor(primals_1, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 5, 4), (20, 4, 1), torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.cat]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_0.run(primals_4, buf0, buf1, 80, grid=grid(80), stream=stream0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 5, 1), (5, 1, 20), torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 5, 1), (5, 1, 20), torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [layer_norm], Original ATen: [aten.native_layer_norm]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_1.run(buf1, buf2, buf3, 20, grid=grid(20), stream=stream0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 5, 4), (20, 4, 1), torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [layer_norm], Original ATen: [aten.native_layer_norm]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_2.run(buf1, buf2, buf3, primals_5, primals_6, buf4, 80, grid=grid(80), stream=stream0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((20, 12), (12, 1), torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_1], Original ATen: [aten.mm]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf4, (20, 4), (4, 1), 0), reinterpret_tensor(primals_7, (4, 12), (1, 4), 0), out=buf5)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 5, 1), (20, 5, 1, 1), torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul], Original ATen: [aten.clone]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_3.run(buf5, buf6, 16, 5, grid=grid(16, 5), stream=stream0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 1, 5), (20, 5, 5, 1), torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul], Original ATen: [aten.clone]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_4.run(buf5, buf7, 16, 5, grid=grid(16, 5), stream=stream0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((16, 5, 5), (25, 5, 1), torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul], Original ATen: [aten.bmm]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf6, (16, 5, 1), (5, 1, 0), 0), reinterpret_tensor(buf7, (16, 1, 5), (5, 0, 1), 0), out=buf8)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4, 5, 1), (20, 5, 1, 80), torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 4, 5, 1), (20, 5, 1, 80), torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_1], Original ATen: [aten._softmax]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_5.run(buf8, buf9, buf10, 80, grid=grid(80), stream=stream0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf8, (4, 4, 5, 5), (100, 25, 5, 1), 0); del buf8  # reuse
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_1], Original ATen: [aten._softmax]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_6.run(buf11, buf9, buf10, 400, grid=grid(400), stream=stream0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf9, (4, 4, 5, 1), (20, 5, 1, 1), 0); del buf9  # reuse
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_1], Original ATen: [aten.clone]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_7.run(buf5, buf12, 16, 5, grid=grid(16, 5), stream=stream0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = reinterpret_tensor(buf10, (16, 5, 1), (5, 1, 1), 0); del buf10  # reuse
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_1], Original ATen: [aten.bmm]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf11, (16, 5, 5), (25, 5, 1), 0), reinterpret_tensor(buf12, (16, 5, 1), (5, 1, 0), 0), out=buf13)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 5, 4), (20, 4, 1), torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.clone]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_8.run(buf13, buf14, 20, 4, grid=grid(20, 4), stream=stream0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = reinterpret_tensor(buf13, (20, 4), (4, 1), 0); del buf13  # reuse
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.mm]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf14, (20, 4), (4, 1), 0), reinterpret_tensor(primals_8, (4, 4), (1, 4), 0), out=buf15)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf3; del buf3  # reuse
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = buf2; del buf2  # reuse
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3, x_5, layer_norm_1], Original ATen: [aten.add, aten.native_layer_norm]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_native_layer_norm_9.run(buf1, buf15, primals_9, buf16, buf17, 20, grid=grid(20), stream=stream0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 5, 4), (20, 4, 1), torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3, x_5, layer_norm_1], Original ATen: [aten.add, aten.native_layer_norm]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_native_layer_norm_10.run(buf1, buf15, primals_9, buf16, buf17, primals_10, primals_11, buf18, 80, grid=grid(80), stream=stream0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf16
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((20, 16), (16, 1), torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.addmm]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_13, reinterpret_tensor(buf18, (20, 4), (4, 1), 0), reinterpret_tensor(primals_12, (4, 16), (1, 4), 0), alpha=1, beta=1, out=buf19)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 5, 16), (80, 16, 1), torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_7], Original ATen: [aten.gelu]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_gelu_11.run(buf19, buf20, 320, grid=grid(320), stream=stream0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((20, 4), (4, 1), torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_9], Original ATen: [aten.addmm]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf20, (20, 16), (16, 1), 0), reinterpret_tensor(primals_14, (16, 4), (1, 16), 0), out=buf21)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 4, 1), (4, 1, 1), torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_14], Original ATen: [aten._native_batch_norm_legit_no_training]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_12.run(buf1, buf15, primals_9, buf21, primals_15, primals_16, primals_17, buf22, 16, grid=grid(16), stream=stream0)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf21
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_16
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_5], Original ATen: [aten.addmm]
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_19, reinterpret_tensor(buf22, (4, 4), (4, 1), 0), reinterpret_tensor(primals_18, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf23)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_19
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf23, primals_5, primals_9, primals_10, primals_17, reinterpret_tensor(primals_3, (16, 4), (4, 1), 0), buf1, reinterpret_tensor(buf4, (20, 4), (4, 1), 0), buf11, reinterpret_tensor(buf14, (20, 4), (4, 1), 0), buf15, reinterpret_tensor(buf18, (20, 4), (4, 1), 0), buf19, reinterpret_tensor(buf20, (20, 16), (16, 1), 0), reinterpret_tensor(buf22, (4, 4), (4, 1), 0), primals_18, primals_14, primals_12, primals_8, reinterpret_tensor(buf12, (16, 1, 5), (5, 1, 1), 0), reinterpret_tensor(buf6, (16, 1, 5), (5, 1, 1), 0), reinterpret_tensor(buf7, (16, 5, 1), (5, 1, 5), 0), primals_7, )
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, 1, 4), (4, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((12, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((16, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, 16), (16, 1), device='cuda:0', dtype=torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19])
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:21:42.685000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:42.702000 2253495 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/gt/cgt6zhndlydc7evi7obew6c7d4q5hvnektv2mgrmjudogkdcknvl.py
