V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['24_inference']
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yb/cybcbi5c2vazyood3btummcpkjq3mhlvhocj6u2bnzfy3h37s26b.py
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [normalize], Original ATen: [aten.div]
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   normalize => div
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%arg0_1, %expand), kwargs = {})
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_0 = async_compile.triton('triton_poi_fused_div_0', '''
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-12
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp12, tmp13)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 / tmp14
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp15, xmask)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hz/chz3ynzydqzig6zpfi5fr6alz76hkze3b76jgilbljqolpctw7fh.py
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [dot], Original ATen: [aten.mul]
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   dot => mul
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_3, 0.5), kwargs = {})
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_1 = async_compile.triton('triton_poi_fused_mul_1', '''
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_1(in_out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.5
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp2, xmask)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tq/ctq34mcdqio5sugs6cxqlmhx37nb6bdaoncbf74iqh22ipjeel5s.py
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [dot, setitem], Original ATen: [aten.mul, aten.lift_fresh, aten.index_put]
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   dot => mul
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem => full_default, index_put
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_3, 0.5), kwargs = {})
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -50000.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_put : [num_users=2] = call_function[target=torch.ops.aten.index_put_.default](args = (%mul, [None, %iota_default, %iota_default], %full_default), kwargs = {})
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_index_put_lift_fresh_mul_2 = async_compile.triton('triton_poi_fused_index_put_lift_fresh_mul_2', '''
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_index_put_lift_fresh_mul_2', 'mutated_arg_names': ['out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_index_put_lift_fresh_mul_2(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = -50000.0
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (5*x0 + 16*x1), tmp0, xmask)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2w/c2wpyk2t5cug3yrw7mrohbyrzzup233avlqxdzto5n5qogry6ory.py
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [dot_1], Original ATen: [aten._softmax]
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   dot_1 => amax, exp, sub
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%index_put, [-1], True), kwargs = {})
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%index_put, %amax), kwargs = {})
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_3 = async_compile.triton('triton_poi_fused__softmax_3', '''
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3y/c3yyaov5ip6rip7mx7nj52y6lmtj6pahuc4hfrk7qr4tg67ulwac.py
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [dot_1], Original ATen: [aten._softmax]
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   dot_1 => div_1, sum_2
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_2), kwargs = {})
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_4 = async_compile.triton('triton_poi_fused__softmax_4', '''
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_4', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_4(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4), (16, 4, 1))
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4), (16, 4, 1))
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [normalize], Original ATen: [aten.div]
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_0.run(arg0_1, buf0, 64, grid=grid(64), stream=stream0)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [einsum], Original ATen: [aten.bmm]
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(arg0_1, reinterpret_tensor(buf0, (4, 4, 4), (16, 1, 4), 0), out=buf1)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [dot], Original ATen: [aten.mul]
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_1.run(buf2, 64, grid=grid(64), stream=stream0)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [dot, setitem], Original ATen: [aten.mul, aten.lift_fresh, aten.index_put]
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_index_put_lift_fresh_mul_2.run(buf2, 16, grid=grid(16), stream=stream0)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf0; del buf0  # reuse
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [dot_1], Original ATen: [aten._softmax]
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_3.run(buf2, buf4, 64, grid=grid(64), stream=stream0)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf2; del buf2  # reuse
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [dot_1], Original ATen: [aten._softmax]
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_4.run(buf4, buf5, 64, grid=grid(64), stream=stream0)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf4; del buf4  # reuse
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.bmm]
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(buf5, arg1_1, out=buf6)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf7 = empty_strided_cpu((0, ), (1, ), torch.float32)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf6, buf5, buf7, )
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:27:59.741000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:59.747000 4039611 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/vn/cvnakthnqwnk74spkuwnan3t42jsu6l27lcyvozedoroqepmrcxr.py
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['24_inference']
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/yb/cybcbi5c2vazyood3btummcpkjq3mhlvhocj6u2bnzfy3h37s26b.py
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [normalize], Original ATen: [aten.div]
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   normalize => div
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%arg0_1, %expand), kwargs = {})
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_0 = async_compile.triton('triton_poi_fused_div_0', '''
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-12
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp12, tmp13)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 / tmp14
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp15, xmask)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/hz/chz3ynzydqzig6zpfi5fr6alz76hkze3b76jgilbljqolpctw7fh.py
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [dot], Original ATen: [aten.mul]
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   dot => mul
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_3, 0.5), kwargs = {})
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_1 = async_compile.triton('triton_poi_fused_mul_1', '''
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_1(in_out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.5
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp2, xmask)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/tq/ctq34mcdqio5sugs6cxqlmhx37nb6bdaoncbf74iqh22ipjeel5s.py
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [dot, setitem], Original ATen: [aten.mul, aten.lift_fresh, aten.index_put]
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   dot => mul
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem => full_default, index_put
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_3, 0.5), kwargs = {})
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -50000.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_put : [num_users=2] = call_function[target=torch.ops.aten.index_put_.default](args = (%mul, [None, %iota_default, %iota_default], %full_default), kwargs = {})
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_index_put_lift_fresh_mul_2 = async_compile.triton('triton_poi_fused_index_put_lift_fresh_mul_2', '''
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_index_put_lift_fresh_mul_2', 'mutated_arg_names': ['out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_index_put_lift_fresh_mul_2(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = -50000.0
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (5*x0 + 16*x1), tmp0, xmask)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2w/c2wpyk2t5cug3yrw7mrohbyrzzup233avlqxdzto5n5qogry6ory.py
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [dot_1], Original ATen: [aten._softmax]
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   dot_1 => amax, exp, sub
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%index_put, [-1], True), kwargs = {})
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%index_put, %amax), kwargs = {})
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_3 = async_compile.triton('triton_poi_fused__softmax_3', '''
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3y/c3yyaov5ip6rip7mx7nj52y6lmtj6pahuc4hfrk7qr4tg67ulwac.py
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [dot_1], Original ATen: [aten._softmax]
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   dot_1 => div_1, sum_2
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_2), kwargs = {})
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_4 = async_compile.triton('triton_poi_fused__softmax_4', '''
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_4', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_4(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4), (16, 4, 1))
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4), (16, 4, 1))
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [normalize], Original ATen: [aten.div]
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_0.run(arg0_1, buf0, 64, grid=grid(64), stream=stream0)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [einsum], Original ATen: [aten.bmm]
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(arg0_1, reinterpret_tensor(buf0, (4, 4, 4), (16, 1, 4), 0), out=buf1)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [dot], Original ATen: [aten.mul]
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_1.run(buf2, 64, grid=grid(64), stream=stream0)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [dot, setitem], Original ATen: [aten.mul, aten.lift_fresh, aten.index_put]
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_index_put_lift_fresh_mul_2.run(buf2, 16, grid=grid(16), stream=stream0)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf0; del buf0  # reuse
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [dot_1], Original ATen: [aten._softmax]
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_3.run(buf2, buf4, 64, grid=grid(64), stream=stream0)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf2; del buf2  # reuse
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [dot_1], Original ATen: [aten._softmax]
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_4.run(buf4, buf5, 64, grid=grid(64), stream=stream0)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf4; del buf4  # reuse
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.bmm]
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(buf5, arg1_1, out=buf6)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf7 = empty_strided_cpu((0, ), (1, ), torch.float32)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf6, buf5, buf7, )
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:16:53.255000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:53.263000 1295092 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/35/c3565i76alkbqx7sxcpttfzabq3x3rzp5vopzle7ys4x3oyaclim.py
