V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['15_forward']
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nz/cnzesbduez5fwya47seso42tu7ua2jmktor22ecclf44itjotg3l.py
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ge, float_1, add, mul, add_1, mul_1, lt, float_2, gt, float_3, mul_2, mul_3, add_2, le, float_4, add_3, mul_4, add_4, mul_5, add_5], Original ATen: [aten.ge, aten._to_copy, aten.add, aten.mul, aten.lt, aten.gt, aten.le]
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_5 => add_5
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   float_1 => convert_element_type
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   float_2 => convert_element_type_1
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   float_3 => convert_element_type_2
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   float_4 => convert_element_type_3
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ge => ge
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   gt => gt
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   le => le
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   lt => lt
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_4
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_5 => mul_5
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge : [num_users=2] = call_function[target=torch.ops.aten.ge.Tensor](args = (%primals_2, %primals_1), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%ge, torch.float32), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_2, %primals_1), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_3, %add), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %mul), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, %add_1), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Tensor](args = (%primals_2, %primals_1), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%lt, torch.float32), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Tensor](args = (%primals_2, %primals_4), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%gt, torch.float32), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_1, %convert_element_type_2), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_2, %primals_2), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %mul_3), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=2] = call_function[target=torch.ops.aten.le.Tensor](args = (%primals_2, %primals_4), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_3 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%le, torch.float32), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_2, %primals_4), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_5, %add_3), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_4, %mul_4), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_3, %add_4), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_2, %mul_5), kwargs = {})
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_add_ge_gt_le_lt_mul_0 = async_compile.triton('triton_poi_fused__to_copy_add_ge_gt_le_lt_mul_0', '''
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*i1', 'out_ptr1': '*i1', 'out_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_ge_gt_le_lt_mul_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_add_ge_gt_le_lt_mul_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 <= tmp3
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2.to(tl.float32)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp0 + tmp1
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp7
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp1 + tmp8
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp5 * tmp9
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp0 < tmp1
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp0 > tmp3
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13.to(tl.float32)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 * tmp14
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 * tmp0
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp10 + tmp16
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp4.to(tl.float32)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp0 + tmp3
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp3 + tmp21
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp18 * tmp22
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp17 + tmp23
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp2, xmask)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp4, xmask)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x2), tmp24, xmask)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, ), (1, ))
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ge, float_1, add, mul, add_1, mul_1, lt, float_2, gt, float_3, mul_2, mul_3, add_2, le, float_4, add_3, mul_4, add_4, mul_5, add_5], Original ATen: [aten.ge, aten._to_copy, aten.add, aten.mul, aten.lt, aten.gt, aten.le]
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_ge_gt_le_lt_mul_0.run(primals_2, primals_1, primals_4, primals_3, primals_5, buf0, buf1, buf2, 256, grid=grid(256), stream=stream0)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf2, primals_1, primals_2, primals_3, primals_4, primals_5, buf0, buf1, )
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:58:22.428000 2290854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:58:22.431000 2290854 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/gj/cgjsbrbq6w4ufzviiicmvbv7c5ubzmlj7fvvzrtxm7q5o73sxfip.py
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['15_forward']
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/nz/cnzesbduez5fwya47seso42tu7ua2jmktor22ecclf44itjotg3l.py
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ge, float_1, add, mul, add_1, mul_1, lt, float_2, gt, float_3, mul_2, mul_3, add_2, le, float_4, add_3, mul_4, add_4, mul_5, add_5], Original ATen: [aten.ge, aten._to_copy, aten.add, aten.mul, aten.lt, aten.gt, aten.le]
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_5 => add_5
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   float_1 => convert_element_type
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   float_2 => convert_element_type_1
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   float_3 => convert_element_type_2
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   float_4 => convert_element_type_3
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ge => ge
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   gt => gt
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   le => le
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   lt => lt
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_4
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_5 => mul_5
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge : [num_users=2] = call_function[target=torch.ops.aten.ge.Tensor](args = (%primals_2, %primals_1), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%ge, torch.float32), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_2, %primals_1), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_3, %add), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %mul), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, %add_1), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Tensor](args = (%primals_2, %primals_1), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%lt, torch.float32), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Tensor](args = (%primals_2, %primals_4), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%gt, torch.float32), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_1, %convert_element_type_2), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_2, %primals_2), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %mul_3), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=2] = call_function[target=torch.ops.aten.le.Tensor](args = (%primals_2, %primals_4), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_3 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%le, torch.float32), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_2, %primals_4), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_5, %add_3), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_4, %mul_4), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_3, %add_4), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_2, %mul_5), kwargs = {})
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_add_ge_gt_le_lt_mul_0 = async_compile.triton('triton_poi_fused__to_copy_add_ge_gt_le_lt_mul_0', '''
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*i1', 'out_ptr1': '*i1', 'out_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_ge_gt_le_lt_mul_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_add_ge_gt_le_lt_mul_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 <= tmp3
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2.to(tl.float32)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp0 + tmp1
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp7
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp1 + tmp8
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp5 * tmp9
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp0 < tmp1
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp0 > tmp3
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13.to(tl.float32)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 * tmp14
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 * tmp0
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp10 + tmp16
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp4.to(tl.float32)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp0 + tmp3
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp3 + tmp21
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp18 * tmp22
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp17 + tmp23
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp2, xmask)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp4, xmask)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x2), tmp24, xmask)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, ), (1, ))
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ge, float_1, add, mul, add_1, mul_1, lt, float_2, gt, float_3, mul_2, mul_3, add_2, le, float_4, add_3, mul_4, add_4, mul_5, add_5], Original ATen: [aten.ge, aten._to_copy, aten.add, aten.mul, aten.lt, aten.gt, aten.le]
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_ge_gt_le_lt_mul_0.run(primals_2, primals_1, primals_4, primals_3, primals_5, buf0, buf1, buf2, 256, grid=grid(256), stream=stream0)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf2, primals_1, primals_2, primals_3, primals_4, primals_5, buf0, buf1, )
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:47:40.447000 3849067 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:47:40.449000 3849067 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/b3/cb3kqf266vjoy6okets2nrx4je2rkhesc57kqi2c5hujeuuc7uqu.py
