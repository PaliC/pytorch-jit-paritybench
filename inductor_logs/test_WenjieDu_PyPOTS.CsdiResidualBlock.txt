V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['13_forward']
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/a6/ca6kq5ydxnty7nvnlztym2hfyjhgyt3cojez2x7sakomlm6zg74p.py
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.clone]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   multi_head_attention_forward => clone_1
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_1 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_2,), kwargs = {memory_format: torch.contiguous_format})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_0 = async_compile.triton('triton_poi_fused_clone_0', '''
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4, 'x': 64}, tile_hint=TileHint.DEFAULT,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_0(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 4
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = (xindex % 4)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 4
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*((x2 % 4)) + 16*x1 + 64*(x2 // 4)), xmask & ymask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1 + 4*(x2 // 4)), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3 + 64*y0), tmp4, xmask & ymask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5d/c5dvn3bu2sfphqgcffyhu2zuw2pltjvgetjrhzwwtdsux6le4rlx.py
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.mul, aten.transpose]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   multi_head_attention_forward => mul
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%view_9, 1.0), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %permute_76 : [num_users=1] = call_function[target=torch.ops.aten.permute.default](args = (%view_12, [0, 2, 1]), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_transpose_1 = async_compile.triton('triton_poi_fused_mul_transpose_1', '''
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_transpose_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_transpose_1(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 12*y1 + 192*x2), xmask & ymask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp4, xmask & ymask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y3 + 64*x2), tmp4, xmask & ymask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hy/chyuk2jdogoordf2yfwyyvx4y5innadksc5dfde753zylct6i7ne.py
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.mul, aten.transpose]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   multi_head_attention_forward => mul_1
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%permute_8, 1.0), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %permute_77 : [num_users=1] = call_function[target=torch.ops.aten.permute.default](args = (%view_13, [0, 2, 1]), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_transpose_2 = async_compile.triton('triton_poi_fused_mul_transpose_2', '''
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_transpose_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_transpose_2(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4 + y0 + 12*y1 + 192*x2), xmask & ymask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4 + y0), ymask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp4, xmask & ymask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y3 + 64*x2), tmp4, xmask & ymask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ss/csszjx2ntxputg6naf3rudjos6rjiyn2qkgt2mexeufzisaa7zzc.py
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten._safe_softmax]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   multi_head_attention_forward => amax, exp, sub
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_14, [-1], True), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_14, %amax), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__safe_softmax_3 = async_compile.triton('triton_poi_fused__safe_softmax_3', '''
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__safe_softmax_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__safe_softmax_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten._safe_softmax]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   multi_head_attention_forward => any_1, div, eq, full_default, logical_not, logical_not_1, sum_1, where
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%view_14, -inf), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_not : [num_users=1] = call_function[target=torch.ops.aten.logical_not.default](args = (%eq,), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %any_1 : [num_users=1] = call_function[target=torch.ops.aten.any.dim](args = (%logical_not, -1, True), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_not_1 : [num_users=1] = call_function[target=torch.ops.aten.logical_not.default](args = (%any_1,), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([16, 4, 4, 4], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%logical_not_1, %full_default, %div), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__safe_softmax_4 = async_compile.triton('triton_poi_fused__safe_softmax_4', '''
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__safe_softmax_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__safe_softmax_4(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr1 + (x2), xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr1 + (4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr1 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr1 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr1 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = float("-inf")
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 == 0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3.to(tl.int64)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = (tmp4 != 0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 == tmp1
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 == 0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int64)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = (tmp9 != 0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp5 | tmp10
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 == tmp1
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 == 0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14.to(tl.int64)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = (tmp15 != 0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp11 | tmp16
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 == tmp1
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 == 0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20.to(tl.int64)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = (tmp21 != 0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp17 | tmp22
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 == 0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 + tmp27
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 + tmp31
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp25 / tmp32
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = 0.0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.where(tmp24, tmp34, tmp33)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp35, xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zy/czynfdlhefe5apahdfeyeev6mlxdjzdquxfpyu3njbvl6ed3zhkr.py
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.clone]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   multi_head_attention_forward => clone_2
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_2 : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%squeeze,), kwargs = {memory_format: torch.contiguous_format})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_5 = async_compile.triton('triton_poi_fused_clone_5', '''
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_5(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 768
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 64)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 256
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 12*x1), xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 4*x2), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp2, xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/cm/ccmidvit6spj4srut2ig5jjmekfs25yhdysq4ec2rd3rzjff3fru.py
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.bmm, aten.transpose]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   multi_head_attention_forward => bmm_1
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %bmm_1 : [num_users=1] = call_function[target=torch.ops.aten.bmm.default](args = (%view_15, %view_16), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %permute_75 : [num_users=1] = call_function[target=torch.ops.aten.permute.default](args = (%view_16, [0, 2, 1]), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_bmm_transpose_6 = async_compile.triton('triton_poi_fused_bmm_transpose_6', '''
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bmm_transpose_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_bmm_transpose_6(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 64
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (512 + x0 + 4*(((x0 % 4)) // 4) + 64*x1), xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp0, xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ge/cge3emagrxobrvfu4cwkus7xu2aydwfujmalhf4ue4s54nghisnk.py
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.clone]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   multi_head_attention_forward => clone_3
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_3 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_9,), kwargs = {memory_format: torch.contiguous_format})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_7 = async_compile.triton('triton_poi_fused_clone_7', '''
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4, 'x': 64}, tile_hint=TileHint.SQUARE,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_7(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 4
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x1), xmask & ymask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 64*y0), tmp0, xmask & ymask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ed/ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add_1, x_1], Original ATen: [aten.add, aten.native_layer_norm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_2
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => clone_5
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%permute_2, %view_19), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_5 : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%add_2,), kwargs = {memory_format: torch.contiguous_format})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_native_layer_norm_8 = async_compile.triton('triton_poi_fused_add_native_layer_norm_8', '''
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4, 'x': 64}, tile_hint=TileHint.DEFAULT,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_native_layer_norm_8', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_native_layer_norm_8(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 4
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = (xindex % 4)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 4
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*((x2 % 4)) + 16*x1 + 64*(x2 // 4)), xmask & ymask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1 + 4*(x2 // 4)), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_out_ptr0 + (x3 + 64*y0), xmask & ymask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 + tmp7
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3 + 64*y0), tmp8, xmask & ymask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/x2/cx2e265xxj5tco4kvrngjscyxtii2h7pyob3d2t7lznkxgyic26e.py
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.native_layer_norm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_3, rsqrt, var_mean
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%clone_5, [2]), kwargs = {correction: 0, keepdim: True})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_3,), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_layer_norm_9 = async_compile.triton('triton_poi_fused_native_layer_norm_9', '''
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_layer_norm_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_layer_norm_9(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 - tmp8
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp1 - tmp8
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10 + tmp12
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp3 - tmp8
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 * tmp14
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 + tmp15
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp5 - tmp8
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 * tmp17
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 + tmp18
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 / tmp7
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1e-05
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.rsqrt(tmp22)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp8, xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp23, xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ba/cbal473k7xs6b47axcxndlklazb3zobw3xk7omblkytvf3hewygf.py
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.native_layer_norm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_3, add_4, mul_2, mul_3, rsqrt, sub_1, var_mean
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%clone_5, [2]), kwargs = {correction: 0, keepdim: True})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_3,), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clone_5, %getitem_1), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %rsqrt), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_2, %primals_9), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_3, %primals_10), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_layer_norm_10 = async_compile.triton('triton_poi_fused_native_layer_norm_10', '''
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_layer_norm_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_layer_norm_10(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/i4/ci4dz6lt3fvdczcsyaulkeuembpw56ngtxvp6uhiduqw5bj4maei.py
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [gelu], Original ATen: [aten.gelu]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   gelu => add_5, erf, mul_4, mul_5, mul_6
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_21, 0.5), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_21, 0.7071067811865476), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %erf : [num_users=1] = call_function[target=torch.ops.aten.erf.default](args = (%mul_5,), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%erf, 1), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %add_5), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_gelu_11 = async_compile.triton('triton_poi_fused_gelu_11', '''
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_gelu_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_gelu_11(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), None)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.5
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.7071067811865476
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.erf(tmp4)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1.0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 * tmp7
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp8, None)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/og/cog736jzkmjg23hxvgbh6s3y7kxizsk5wl6heazr7w2fphoczhse.py
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add_2], Original ATen: [aten.add]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_6
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, %view_23), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_12 = async_compile.triton('triton_poi_fused_add_12', '''
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_12', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_12(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/us/cusnnps655o2alg2is4o6juoytxagipcifp4p7i3d3lfuss3gayc.py
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.clone]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   multi_head_attention_forward_1 => clone_10
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_10 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_16,), kwargs = {memory_format: torch.contiguous_format})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_13 = async_compile.triton('triton_poi_fused_clone_13', '''
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_13', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_13(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 16)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*(x1 // 4) + 64*((x1 % 4))), xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp0, xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/mj/cmjmemstb3qkfjyqxwiuw7cngayov4jbpqldwsef3jie6nkvs5mj.py
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add_3, x_4], Original ATen: [aten.add, aten.native_layer_norm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_10
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_4 => clone_14
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%permute_16, %view_44), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_14 : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%add_10,), kwargs = {memory_format: torch.contiguous_format})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_native_layer_norm_14 = async_compile.triton('triton_poi_fused_add_native_layer_norm_14', '''
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_native_layer_norm_14', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_native_layer_norm_14(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 16)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*(x1 // 4) + 64*((x1 % 4))), xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp4, xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/k7/ck7czzk4unz4iyfopqzs4gop4bii5sebm6uohrf6mh3v7wqsrrre.py
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_6], Original ATen: [aten.clone]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_6 => clone_17
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_17 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_28,), kwargs = {memory_format: torch.contiguous_format})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_15 = async_compile.triton('triton_poi_fused_clone_15', '''
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_15', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_15(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 4)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 4
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1 + 64*x3), xmask & ymask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2 + 4*y1 + 16*x3), xmask & ymask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2 + 4*y1 + 16*x3), xmask & ymask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (y0), ymask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (y0), ymask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5 + 16*y4), tmp8, xmask & ymask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/oe/coeg3oozxruiwohztpa5s32claeiolrko7hebfxidexxblbdihfk.py
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigmoid, tanh, y_9], Original ATen: [aten.sigmoid, aten.tanh, aten.mul]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigmoid => sigmoid
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   tanh => tanh
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_9 => mul_18
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%getitem_8,), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=2] = call_function[target=torch.ops.aten.tanh.default](args = (%getitem_9,), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_18 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid, %tanh), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_sigmoid_tanh_16 = async_compile.triton('triton_poi_fused_mul_sigmoid_tanh_16', '''
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_sigmoid_tanh_16', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_sigmoid_tanh_16(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 64)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x4 + 128*x2), xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x4 + 128*x2), xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (64 + x4 + 128*x2), xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (4 + x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (64 + x4 + 128*x2), xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (4 + x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 + tmp5
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.sigmoid(tmp6)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp10 + tmp13
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = libdevice.tanh(tmp14)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp7 * tmp15
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp7, xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp15, xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x3), tmp16, xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/n4/cn4m7jrikva2ewlpbfe5p66gd2woag6p7h2xxrncd3loak2bghqi.py
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_10], Original ATen: [aten.convolution]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_10 => convolution_2
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%mul_18, %primals_34, %primals_35, [1], [0], [1], False, [0], 1), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_17 = async_compile.triton('triton_poi_fused_convolution_17', '''
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_17', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_17(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 512
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 8)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/if/cifyrurav6ymuqovzsmw7yf7xjykl44eyxr42wnakad4x2jqktpo.py
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add_6, truediv], Original ATen: [aten.add, aten.div]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_6 => add_18
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div_2
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_18 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_52, %view_53), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_18, 1.4142135623730951), kwargs = {})
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_18 = async_compile.triton('triton_poi_fused_add_div_18', '''
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_18', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_18(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 64
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 128*x1), xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.7071067811865475
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp4, xmask)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35 = args
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (12, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (12, 4), (4, 1))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, 4), (4, 1))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (64, 4), (4, 1))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (64, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, 64), (64, 1))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (4, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (12, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (12, 4), (4, 1))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (4, 4), (4, 1))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (4, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (4, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (4, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (64, 4), (4, 1))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (64, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (4, 64), (64, 1))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (4, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (4, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (4, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (8, 4, 1), (4, 1, 1))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (8, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (8, 4, 1), (4, 1, 1))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (8, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (8, 4, 1), (4, 1, 1))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (8, ), (1, ))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.addmm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(primals_4, reinterpret_tensor(primals_2, (4, 4), (1, 4), 0), out=buf0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 16, 4), (64, 4, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.clone]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_0.run(primals_1, buf0, primals_3, buf1, 4, 64, grid=grid(4, 64), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((64, 12), (12, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.mm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf1, (64, 4), (4, 1), 0), reinterpret_tensor(primals_6, (4, 12), (1, 4), 0), out=buf2)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((16, 4, 4, 1), (16, 4, 1, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf59 = empty_strided_cuda((64, 1, 4), (1, 1, 64), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.mul, aten.transpose]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_transpose_1.run(buf2, primals_5, buf3, buf59, 64, 4, grid=grid(64, 4), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((16, 4, 1, 4), (16, 4, 4, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf60 = empty_strided_cuda((64, 4, 1), (1, 64, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.mul, aten.transpose]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_transpose_2.run(buf2, primals_5, buf4, buf60, 64, 4, grid=grid(64, 4), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((64, 4, 4), (16, 4, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.bmm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf3, (64, 4, 1), (4, 1, 0), 0), reinterpret_tensor(buf4, (64, 1, 4), (4, 0, 1), 0), out=buf5)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((16, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten._safe_softmax]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__safe_softmax_3.run(buf5, buf6, 1024, grid=grid(1024), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((16, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten._safe_softmax]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__safe_softmax_4.run(buf5, buf6, buf7, 1024, grid=grid(1024), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((3, 4, 16, 4), (256, 64, 4, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.clone]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_5.run(buf2, primals_5, buf8, 768, grid=grid(768), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf4, (64, 4, 1), (1, 64, 256), 0); del buf4  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf58 = reinterpret_tensor(buf3, (64, 1, 4), (1, 1, 64), 0); del buf3  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.bmm, aten.transpose]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_bmm_transpose_6.run(buf8, buf9, buf58, 256, grid=grid(256), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((64, 4, 1), (4, 1, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.bmm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf7, (64, 4, 4), (16, 4, 1), 0), buf9, out=buf10)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf9, (4, 16, 4, 1), (64, 4, 1, 1), 0); del buf9  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.clone]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_7.run(buf10, buf11, 4, 64, grid=grid(4, 64), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf10, (64, 4), (4, 1), 0); del buf10  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.addmm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf11, (64, 4), (4, 1), 0), reinterpret_tensor(primals_7, (4, 4), (1, 4), 0), out=buf12)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = reinterpret_tensor(buf12, (4, 16, 4), (64, 4, 1), 0); del buf12  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add_1, x_1], Original ATen: [aten.add, aten.native_layer_norm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_native_layer_norm_8.run(buf13, primals_1, buf0, primals_3, primals_8, 4, 64, grid=grid(4, 64), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 16, 1), (16, 1, 64), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 16, 1), (16, 1, 64), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.native_layer_norm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_9.run(buf13, buf14, buf15, 64, grid=grid(64), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 16, 4), (64, 4, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.native_layer_norm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_10.run(buf13, buf14, buf15, primals_9, primals_10, buf16, 256, grid=grid(256), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((64, 64), (64, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_1], Original ATen: [aten.addmm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_12, reinterpret_tensor(buf16, (64, 4), (4, 1), 0), reinterpret_tensor(primals_11, (4, 64), (1, 4), 0), alpha=1, beta=1, out=buf17)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 16, 64), (1024, 64, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [gelu], Original ATen: [aten.gelu]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_gelu_11.run(buf17, buf18, 4096, grid=grid(4096), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.addmm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf18, (64, 64), (64, 1), 0), reinterpret_tensor(primals_13, (64, 4), (1, 64), 0), out=buf19)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = reinterpret_tensor(buf19, (4, 16, 4), (64, 4, 1), 0); del buf19  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add_2], Original ATen: [aten.add]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_12.run(buf20, buf16, primals_14, 256, grid=grid(256), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_14
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = buf15; del buf15  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = buf14; del buf14  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.native_layer_norm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_9.run(buf20, buf21, buf22, 64, grid=grid(64), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 4, 4, 4), (16, 64, 1, 4), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_4], Original ATen: [aten.clone]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_10.run(buf20, buf21, buf22, primals_15, primals_16, buf23, 256, grid=grid(256), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_16
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((4, 16, 4), (64, 4, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.clone]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_13.run(buf23, buf24, 256, grid=grid(256), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = reinterpret_tensor(buf8, (64, 12), (12, 1), 0); del buf8  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.mm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf24, (64, 4), (4, 1), 0), reinterpret_tensor(primals_18, (4, 12), (1, 4), 0), out=buf25)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((16, 4, 4, 1), (16, 4, 1, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf56 = empty_strided_cuda((64, 1, 4), (1, 1, 64), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.mul, aten.transpose]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_transpose_1.run(buf25, primals_17, buf26, buf56, 64, 4, grid=grid(64, 4), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = empty_strided_cuda((16, 4, 1, 4), (16, 4, 4, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf57 = empty_strided_cuda((64, 4, 1), (1, 64, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.mul, aten.transpose]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_transpose_2.run(buf25, primals_17, buf27, buf57, 64, 4, grid=grid(64, 4), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = reinterpret_tensor(buf6, (64, 4, 4), (16, 4, 1), 0); del buf6  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.bmm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf26, (64, 4, 1), (4, 1, 0), 0), reinterpret_tensor(buf27, (64, 1, 4), (4, 0, 1), 0), out=buf28)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = reinterpret_tensor(buf5, (16, 4, 4, 4), (64, 16, 4, 1), 0); del buf5  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten._safe_softmax]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__safe_softmax_3.run(buf28, buf29, 1024, grid=grid(1024), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((16, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward, multi_head_attention_forward_1], Original ATen: [aten._safe_softmax]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__safe_softmax_4.run(buf28, buf29, buf30, 1024, grid=grid(1024), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf28
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf29
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = reinterpret_tensor(buf2, (3, 4, 16, 4), (256, 64, 4, 1), 0); del buf2  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.clone]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_5.run(buf25, primals_17, buf31, 768, grid=grid(768), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf25
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = reinterpret_tensor(buf27, (64, 4, 1), (1, 64, 256), 0); del buf27  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf55 = reinterpret_tensor(buf26, (64, 1, 4), (1, 1, 64), 0); del buf26  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.bmm, aten.transpose]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_bmm_transpose_6.run(buf31, buf32, buf55, 256, grid=grid(256), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf31
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = empty_strided_cuda((64, 4, 1), (4, 1, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.bmm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf30, (64, 4, 4), (16, 4, 1), 0), buf32, out=buf33)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = reinterpret_tensor(buf32, (4, 16, 4, 1), (64, 4, 1, 1), 0); del buf32  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.clone]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_7.run(buf33, buf34, 4, 64, grid=grid(4, 64), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = reinterpret_tensor(buf33, (64, 4), (4, 1), 0); del buf33  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.addmm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf34, (64, 4), (4, 1), 0), reinterpret_tensor(primals_19, (4, 4), (1, 4), 0), out=buf35)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = reinterpret_tensor(buf35, (4, 16, 4), (64, 4, 1), 0); del buf35  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add_3, x_4], Original ATen: [aten.add, aten.native_layer_norm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_native_layer_norm_14.run(buf36, buf23, primals_20, 256, grid=grid(256), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_20
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = buf22; del buf22  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf38 = buf21; del buf21  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.native_layer_norm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_9.run(buf36, buf37, buf38, 64, grid=grid(64), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf39 = reinterpret_tensor(buf23, (4, 16, 4), (64, 4, 1), 0); del buf23  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.native_layer_norm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_10.run(buf36, buf37, buf38, primals_21, primals_22, buf39, 256, grid=grid(256), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_22
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf40 = empty_strided_cuda((64, 64), (64, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_3], Original ATen: [aten.addmm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_24, reinterpret_tensor(buf39, (64, 4), (4, 1), 0), reinterpret_tensor(primals_23, (4, 64), (1, 4), 0), alpha=1, beta=1, out=buf40)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_24
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf41 = empty_strided_cuda((4, 16, 64), (1024, 64, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [gelu_1], Original ATen: [aten.gelu]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_gelu_11.run(buf40, buf41, 4096, grid=grid(4096), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf42 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.addmm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf41, (64, 64), (64, 1), 0), reinterpret_tensor(primals_25, (64, 4), (1, 64), 0), out=buf42)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf43 = reinterpret_tensor(buf42, (4, 16, 4), (64, 4, 1), 0); del buf42  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add_4], Original ATen: [aten.add]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_12.run(buf43, buf39, primals_26, 256, grid=grid(256), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_26
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf44 = buf38; del buf38  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf45 = buf37; del buf37  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.native_layer_norm]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_9.run(buf43, buf44, buf45, 64, grid=grid(64), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf46 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_6], Original ATen: [aten.clone]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_15.run(buf43, buf44, buf45, primals_27, primals_28, buf46, 16, 16, grid=grid(16, 16), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf44
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf45
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_28
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_7], Original ATen: [aten.convolution]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf47 = extern_kernels.convolution(reinterpret_tensor(buf46, (4, 4, 16), (64, 16, 1), 0), primals_29, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf47, (4, 8, 16), (128, 16, 1))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cond_info_1], Original ATen: [aten.convolution]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf48 = extern_kernels.convolution(reinterpret_tensor(primals_31, (4, 4, 16), (64, 16, 1), 0), primals_32, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf48, (4, 8, 16), (128, 16, 1))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf49 = empty_strided_cuda((4, 4, 16), (64, 16, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf50 = empty_strided_cuda((4, 4, 16), (64, 16, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf51 = empty_strided_cuda((4, 4, 16), (64, 16, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigmoid, tanh, y_9], Original ATen: [aten.sigmoid, aten.tanh, aten.mul]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_sigmoid_tanh_16.run(buf47, primals_30, buf48, primals_33, buf49, buf50, buf51, 256, grid=grid(256), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf47
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf48
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_30
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_33
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_10], Original ATen: [aten.convolution]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf52 = extern_kernels.convolution(buf51, primals_34, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf52, (4, 8, 16), (128, 16, 1))
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf53 = buf52; del buf52  # reuse
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_10], Original ATen: [aten.convolution]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_17.run(buf53, primals_35, 512, grid=grid(512), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_35
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf54 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add_6, truediv], Original ATen: [aten.add, aten.div]
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_18.run(primals_1, buf53, buf54, 256, grid=grid(256), stream=stream0)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf54, reinterpret_tensor(buf53, (4, 4, 4, 4), (128, 16, 4, 1), 64), primals_4, primals_9, primals_15, primals_21, primals_27, primals_29, primals_32, primals_34, reinterpret_tensor(buf1, (64, 4), (4, 1), 0), buf7, reinterpret_tensor(buf11, (64, 4), (4, 1), 0), buf13, reinterpret_tensor(buf16, (64, 4), (4, 1), 0), buf17, reinterpret_tensor(buf18, (64, 64), (64, 1), 0), buf20, reinterpret_tensor(buf24, (64, 4), (4, 1), 0), buf30, reinterpret_tensor(buf34, (64, 4), (4, 1), 0), buf36, reinterpret_tensor(buf39, (64, 4), (4, 1), 0), buf40, reinterpret_tensor(buf41, (64, 64), (64, 1), 0), buf43, reinterpret_tensor(buf46, (4, 4, 16), (64, 16, 1), 0), reinterpret_tensor(primals_31, (4, 4, 16), (64, 16, 1), 0), buf49, buf50, buf51, primals_25, primals_23, primals_19, buf55, buf56, buf57, primals_18, primals_13, primals_11, primals_7, buf58, buf59, buf60, primals_6, )
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((12, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((12, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((64, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, 64), (64, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((12, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((12, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((64, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((4, 64), (64, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((8, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((8, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((8, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35])
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:27:56.377000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:56.402000 4039611 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/bw/cbwrmjd2duop65wsj6h7mqp6b2s257rslhnfa6m2ukurw4kxjmvl.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['13_forward']
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/a6/ca6kq5ydxnty7nvnlztym2hfyjhgyt3cojez2x7sakomlm6zg74p.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.clone]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   multi_head_attention_forward => clone_1
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_1 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_2,), kwargs = {memory_format: torch.contiguous_format})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_0 = async_compile.triton('triton_poi_fused_clone_0', '''
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4, 'x': 64}, tile_hint=TileHint.DEFAULT,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_0(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 4
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = (xindex % 4)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 4
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*((x2 % 4)) + 16*x1 + 64*(x2 // 4)), xmask & ymask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1 + 4*(x2 // 4)), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3 + 64*y0), tmp4, xmask & ymask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5d/c5dvn3bu2sfphqgcffyhu2zuw2pltjvgetjrhzwwtdsux6le4rlx.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.mul, aten.transpose]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   multi_head_attention_forward => mul
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%view_9, 1.0), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %permute_76 : [num_users=1] = call_function[target=torch.ops.aten.permute.default](args = (%view_12, [0, 2, 1]), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_transpose_1 = async_compile.triton('triton_poi_fused_mul_transpose_1', '''
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_transpose_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_transpose_1(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 12*y1 + 192*x2), xmask & ymask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp4, xmask & ymask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y3 + 64*x2), tmp4, xmask & ymask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/hy/chyuk2jdogoordf2yfwyyvx4y5innadksc5dfde753zylct6i7ne.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.mul, aten.transpose]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   multi_head_attention_forward => mul_1
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%permute_8, 1.0), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %permute_77 : [num_users=1] = call_function[target=torch.ops.aten.permute.default](args = (%view_13, [0, 2, 1]), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_transpose_2 = async_compile.triton('triton_poi_fused_mul_transpose_2', '''
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_transpose_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_transpose_2(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4 + y0 + 12*y1 + 192*x2), xmask & ymask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4 + y0), ymask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp4, xmask & ymask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y3 + 64*x2), tmp4, xmask & ymask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ss/csszjx2ntxputg6naf3rudjos6rjiyn2qkgt2mexeufzisaa7zzc.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten._safe_softmax]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   multi_head_attention_forward => amax, exp, sub
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_14, [-1], True), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_14, %amax), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__safe_softmax_3 = async_compile.triton('triton_poi_fused__safe_softmax_3', '''
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__safe_softmax_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__safe_softmax_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten._safe_softmax]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   multi_head_attention_forward => any_1, div, eq, full_default, logical_not, logical_not_1, sum_1, where
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%view_14, -inf), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_not : [num_users=1] = call_function[target=torch.ops.aten.logical_not.default](args = (%eq,), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %any_1 : [num_users=1] = call_function[target=torch.ops.aten.any.dim](args = (%logical_not, -1, True), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_not_1 : [num_users=1] = call_function[target=torch.ops.aten.logical_not.default](args = (%any_1,), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([16, 4, 4, 4], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%logical_not_1, %full_default, %div), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__safe_softmax_4 = async_compile.triton('triton_poi_fused__safe_softmax_4', '''
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__safe_softmax_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__safe_softmax_4(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr1 + (x2), xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr1 + (4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr1 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr1 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr1 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = float("-inf")
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 == 0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3.to(tl.int64)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = (tmp4 != 0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 == tmp1
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 == 0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int64)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = (tmp9 != 0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp5 | tmp10
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 == tmp1
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 == 0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14.to(tl.int64)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = (tmp15 != 0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp11 | tmp16
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 == tmp1
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 == 0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20.to(tl.int64)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = (tmp21 != 0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp17 | tmp22
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 == 0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 + tmp27
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 + tmp31
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp25 / tmp32
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = 0.0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.where(tmp24, tmp34, tmp33)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp35, xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/zy/czynfdlhefe5apahdfeyeev6mlxdjzdquxfpyu3njbvl6ed3zhkr.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.clone]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   multi_head_attention_forward => clone_2
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_2 : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%squeeze,), kwargs = {memory_format: torch.contiguous_format})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_5 = async_compile.triton('triton_poi_fused_clone_5', '''
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_5(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 768
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 64)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 256
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 12*x1), xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 4*x2), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp2, xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/cm/ccmidvit6spj4srut2ig5jjmekfs25yhdysq4ec2rd3rzjff3fru.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.bmm, aten.transpose]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   multi_head_attention_forward => bmm_1
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %bmm_1 : [num_users=1] = call_function[target=torch.ops.aten.bmm.default](args = (%view_15, %view_16), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %permute_75 : [num_users=1] = call_function[target=torch.ops.aten.permute.default](args = (%view_16, [0, 2, 1]), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_bmm_transpose_6 = async_compile.triton('triton_poi_fused_bmm_transpose_6', '''
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bmm_transpose_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_bmm_transpose_6(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 64
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (512 + x0 + 4*(((x0 % 4)) // 4) + 64*x1), xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp0, xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ge/cge3emagrxobrvfu4cwkus7xu2aydwfujmalhf4ue4s54nghisnk.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.clone]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   multi_head_attention_forward => clone_3
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_3 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_9,), kwargs = {memory_format: torch.contiguous_format})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_7 = async_compile.triton('triton_poi_fused_clone_7', '''
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4, 'x': 64}, tile_hint=TileHint.SQUARE,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_7(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 4
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x1), xmask & ymask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 64*y0), tmp0, xmask & ymask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ed/ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add_1, x_1], Original ATen: [aten.add, aten.native_layer_norm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_2
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => clone_5
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%permute_2, %view_19), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_5 : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%add_2,), kwargs = {memory_format: torch.contiguous_format})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_native_layer_norm_8 = async_compile.triton('triton_poi_fused_add_native_layer_norm_8', '''
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4, 'x': 64}, tile_hint=TileHint.DEFAULT,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_native_layer_norm_8', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_native_layer_norm_8(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 4
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = (xindex % 4)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 4
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*((x2 % 4)) + 16*x1 + 64*(x2 // 4)), xmask & ymask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1 + 4*(x2 // 4)), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_out_ptr0 + (x3 + 64*y0), xmask & ymask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 + tmp7
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3 + 64*y0), tmp8, xmask & ymask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/x2/cx2e265xxj5tco4kvrngjscyxtii2h7pyob3d2t7lznkxgyic26e.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.native_layer_norm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_3, rsqrt, var_mean
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%clone_5, [2]), kwargs = {correction: 0, keepdim: True})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_3,), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_layer_norm_9 = async_compile.triton('triton_poi_fused_native_layer_norm_9', '''
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_layer_norm_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_layer_norm_9(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 - tmp8
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp1 - tmp8
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10 + tmp12
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp3 - tmp8
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 * tmp14
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 + tmp15
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp5 - tmp8
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 * tmp17
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 + tmp18
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 / tmp7
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1e-05
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.rsqrt(tmp22)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp8, xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp23, xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ba/cbal473k7xs6b47axcxndlklazb3zobw3xk7omblkytvf3hewygf.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.native_layer_norm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_3, add_4, mul_2, mul_3, rsqrt, sub_1, var_mean
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%clone_5, [2]), kwargs = {correction: 0, keepdim: True})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_3,), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clone_5, %getitem_1), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %rsqrt), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_2, %primals_9), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_3, %primals_10), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_native_layer_norm_10 = async_compile.triton('triton_poi_fused_native_layer_norm_10', '''
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_layer_norm_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_native_layer_norm_10(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/i4/ci4dz6lt3fvdczcsyaulkeuembpw56ngtxvp6uhiduqw5bj4maei.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [gelu], Original ATen: [aten.gelu]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   gelu => add_5, erf, mul_4, mul_5, mul_6
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_21, 0.5), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_21, 0.7071067811865476), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %erf : [num_users=1] = call_function[target=torch.ops.aten.erf.default](args = (%mul_5,), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%erf, 1), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %add_5), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_gelu_11 = async_compile.triton('triton_poi_fused_gelu_11', '''
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_gelu_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_gelu_11(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), None)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.5
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.7071067811865476
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.erf(tmp4)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1.0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 * tmp7
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp8, None)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/og/cog736jzkmjg23hxvgbh6s3y7kxizsk5wl6heazr7w2fphoczhse.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add_2], Original ATen: [aten.add]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_6
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, %view_23), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_12 = async_compile.triton('triton_poi_fused_add_12', '''
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_12', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_12(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/us/cusnnps655o2alg2is4o6juoytxagipcifp4p7i3d3lfuss3gayc.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.clone]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   multi_head_attention_forward_1 => clone_10
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_10 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_16,), kwargs = {memory_format: torch.contiguous_format})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_13 = async_compile.triton('triton_poi_fused_clone_13', '''
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_13', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_13(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 16)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*(x1 // 4) + 64*((x1 % 4))), xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp0, xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/mj/cmjmemstb3qkfjyqxwiuw7cngayov4jbpqldwsef3jie6nkvs5mj.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add_3, x_4], Original ATen: [aten.add, aten.native_layer_norm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_10
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_4 => clone_14
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%permute_16, %view_44), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_14 : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%add_10,), kwargs = {memory_format: torch.contiguous_format})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_native_layer_norm_14 = async_compile.triton('triton_poi_fused_add_native_layer_norm_14', '''
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_native_layer_norm_14', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_native_layer_norm_14(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 16)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*(x1 // 4) + 64*((x1 % 4))), xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp4, xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/k7/ck7czzk4unz4iyfopqzs4gop4bii5sebm6uohrf6mh3v7wqsrrre.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_6], Original ATen: [aten.clone]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_6 => clone_17
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_17 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_28,), kwargs = {memory_format: torch.contiguous_format})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_15 = async_compile.triton('triton_poi_fused_clone_15', '''
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_15', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_15(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 4)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 4
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1 + 64*x3), xmask & ymask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2 + 4*y1 + 16*x3), xmask & ymask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2 + 4*y1 + 16*x3), xmask & ymask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (y0), ymask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (y0), ymask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5 + 16*y4), tmp8, xmask & ymask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/oe/coeg3oozxruiwohztpa5s32claeiolrko7hebfxidexxblbdihfk.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sigmoid, tanh, y_9], Original ATen: [aten.sigmoid, aten.tanh, aten.mul]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigmoid => sigmoid
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   tanh => tanh
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_9 => mul_18
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%getitem_8,), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=2] = call_function[target=torch.ops.aten.tanh.default](args = (%getitem_9,), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_18 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid, %tanh), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_sigmoid_tanh_16 = async_compile.triton('triton_poi_fused_mul_sigmoid_tanh_16', '''
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_sigmoid_tanh_16', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_sigmoid_tanh_16(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 64)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x4 + 128*x2), xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x4 + 128*x2), xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (64 + x4 + 128*x2), xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (4 + x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (64 + x4 + 128*x2), xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (4 + x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 + tmp5
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.sigmoid(tmp6)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp10 + tmp13
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = libdevice.tanh(tmp14)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp7 * tmp15
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp7, xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp15, xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x3), tmp16, xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/n4/cn4m7jrikva2ewlpbfe5p66gd2woag6p7h2xxrncd3loak2bghqi.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [y_10], Original ATen: [aten.convolution]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_10 => convolution_2
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%mul_18, %primals_34, %primals_35, [1], [0], [1], False, [0], 1), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_17 = async_compile.triton('triton_poi_fused_convolution_17', '''
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_17', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_17(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 512
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 8)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/if/cifyrurav6ymuqovzsmw7yf7xjykl44eyxr42wnakad4x2jqktpo.py
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add_6, truediv], Original ATen: [aten.add, aten.div]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_6 => add_18
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div_2
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_18 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_52, %view_53), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_18, 1.4142135623730951), kwargs = {})
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_18 = async_compile.triton('triton_poi_fused_add_div_18', '''
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_18', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_18(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 64
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 128*x1), xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.7071067811865475
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp4, xmask)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35 = args
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (12, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (12, 4), (4, 1))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, 4), (4, 1))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (64, 4), (4, 1))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (64, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, 64), (64, 1))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (4, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (12, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (12, 4), (4, 1))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (4, 4), (4, 1))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (4, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (4, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (4, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (64, 4), (4, 1))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (64, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (4, 64), (64, 1))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (4, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (4, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (4, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (8, 4, 1), (4, 1, 1))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (8, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (8, 4, 1), (4, 1, 1))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (8, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (8, 4, 1), (4, 1, 1))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (8, ), (1, ))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.addmm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(primals_4, reinterpret_tensor(primals_2, (4, 4), (1, 4), 0), out=buf0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 16, 4), (64, 4, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.clone]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_0.run(primals_1, buf0, primals_3, buf1, 4, 64, grid=grid(4, 64), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((64, 12), (12, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.mm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf1, (64, 4), (4, 1), 0), reinterpret_tensor(primals_6, (4, 12), (1, 4), 0), out=buf2)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((16, 4, 4, 1), (16, 4, 1, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf59 = empty_strided_cuda((64, 1, 4), (1, 1, 64), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.mul, aten.transpose]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_transpose_1.run(buf2, primals_5, buf3, buf59, 64, 4, grid=grid(64, 4), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((16, 4, 1, 4), (16, 4, 4, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf60 = empty_strided_cuda((64, 4, 1), (1, 64, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.mul, aten.transpose]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_transpose_2.run(buf2, primals_5, buf4, buf60, 64, 4, grid=grid(64, 4), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((64, 4, 4), (16, 4, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.bmm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf3, (64, 4, 1), (4, 1, 0), 0), reinterpret_tensor(buf4, (64, 1, 4), (4, 0, 1), 0), out=buf5)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((16, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten._safe_softmax]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__safe_softmax_3.run(buf5, buf6, 1024, grid=grid(1024), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((16, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten._safe_softmax]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__safe_softmax_4.run(buf5, buf6, buf7, 1024, grid=grid(1024), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((3, 4, 16, 4), (256, 64, 4, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.clone]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_5.run(buf2, primals_5, buf8, 768, grid=grid(768), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf4, (64, 4, 1), (1, 64, 256), 0); del buf4  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf58 = reinterpret_tensor(buf3, (64, 1, 4), (1, 1, 64), 0); del buf3  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.bmm, aten.transpose]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_bmm_transpose_6.run(buf8, buf9, buf58, 256, grid=grid(256), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((64, 4, 1), (4, 1, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.bmm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf7, (64, 4, 4), (16, 4, 1), 0), buf9, out=buf10)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf9, (4, 16, 4, 1), (64, 4, 1, 1), 0); del buf9  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.clone]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_7.run(buf10, buf11, 4, 64, grid=grid(4, 64), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf10, (64, 4), (4, 1), 0); del buf10  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.addmm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf11, (64, 4), (4, 1), 0), reinterpret_tensor(primals_7, (4, 4), (1, 4), 0), out=buf12)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = reinterpret_tensor(buf12, (4, 16, 4), (64, 4, 1), 0); del buf12  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add_1, x_1], Original ATen: [aten.add, aten.native_layer_norm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_native_layer_norm_8.run(buf13, primals_1, buf0, primals_3, primals_8, 4, 64, grid=grid(4, 64), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 16, 1), (16, 1, 64), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 16, 1), (16, 1, 64), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.native_layer_norm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_9.run(buf13, buf14, buf15, 64, grid=grid(64), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 16, 4), (64, 4, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.native_layer_norm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_10.run(buf13, buf14, buf15, primals_9, primals_10, buf16, 256, grid=grid(256), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((64, 64), (64, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_1], Original ATen: [aten.addmm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_12, reinterpret_tensor(buf16, (64, 4), (4, 1), 0), reinterpret_tensor(primals_11, (4, 64), (1, 4), 0), alpha=1, beta=1, out=buf17)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 16, 64), (1024, 64, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [gelu], Original ATen: [aten.gelu]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_gelu_11.run(buf17, buf18, 4096, grid=grid(4096), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.addmm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf18, (64, 64), (64, 1), 0), reinterpret_tensor(primals_13, (64, 4), (1, 64), 0), out=buf19)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = reinterpret_tensor(buf19, (4, 16, 4), (64, 4, 1), 0); del buf19  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add_2], Original ATen: [aten.add]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_12.run(buf20, buf16, primals_14, 256, grid=grid(256), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_14
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = buf15; del buf15  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = buf14; del buf14  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.native_layer_norm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_9.run(buf20, buf21, buf22, 64, grid=grid(64), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 4, 4, 4), (16, 64, 1, 4), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_4], Original ATen: [aten.clone]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_10.run(buf20, buf21, buf22, primals_15, primals_16, buf23, 256, grid=grid(256), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_16
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((4, 16, 4), (64, 4, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.clone]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_13.run(buf23, buf24, 256, grid=grid(256), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = reinterpret_tensor(buf8, (64, 12), (12, 1), 0); del buf8  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.mm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf24, (64, 4), (4, 1), 0), reinterpret_tensor(primals_18, (4, 12), (1, 4), 0), out=buf25)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((16, 4, 4, 1), (16, 4, 1, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf56 = empty_strided_cuda((64, 1, 4), (1, 1, 64), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.mul, aten.transpose]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_transpose_1.run(buf25, primals_17, buf26, buf56, 64, 4, grid=grid(64, 4), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = empty_strided_cuda((16, 4, 1, 4), (16, 4, 4, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf57 = empty_strided_cuda((64, 4, 1), (1, 64, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.mul, aten.transpose]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_transpose_2.run(buf25, primals_17, buf27, buf57, 64, 4, grid=grid(64, 4), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = reinterpret_tensor(buf6, (64, 4, 4), (16, 4, 1), 0); del buf6  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.bmm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf26, (64, 4, 1), (4, 1, 0), 0), reinterpret_tensor(buf27, (64, 1, 4), (4, 0, 1), 0), out=buf28)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = reinterpret_tensor(buf5, (16, 4, 4, 4), (64, 16, 4, 1), 0); del buf5  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten._safe_softmax]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__safe_softmax_3.run(buf28, buf29, 1024, grid=grid(1024), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((16, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward, multi_head_attention_forward_1], Original ATen: [aten._safe_softmax]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__safe_softmax_4.run(buf28, buf29, buf30, 1024, grid=grid(1024), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf28
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf29
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = reinterpret_tensor(buf2, (3, 4, 16, 4), (256, 64, 4, 1), 0); del buf2  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.clone]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_5.run(buf25, primals_17, buf31, 768, grid=grid(768), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf25
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = reinterpret_tensor(buf27, (64, 4, 1), (1, 64, 256), 0); del buf27  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf55 = reinterpret_tensor(buf26, (64, 1, 4), (1, 1, 64), 0); del buf26  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.bmm, aten.transpose]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_bmm_transpose_6.run(buf31, buf32, buf55, 256, grid=grid(256), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf31
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = empty_strided_cuda((64, 4, 1), (4, 1, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.bmm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf30, (64, 4, 4), (16, 4, 1), 0), buf32, out=buf33)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = reinterpret_tensor(buf32, (4, 16, 4, 1), (64, 4, 1, 1), 0); del buf32  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.clone]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_7.run(buf33, buf34, 4, 64, grid=grid(4, 64), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = reinterpret_tensor(buf33, (64, 4), (4, 1), 0); del buf33  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward_1], Original ATen: [aten.addmm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf34, (64, 4), (4, 1), 0), reinterpret_tensor(primals_19, (4, 4), (1, 4), 0), out=buf35)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = reinterpret_tensor(buf35, (4, 16, 4), (64, 4, 1), 0); del buf35  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add_3, x_4], Original ATen: [aten.add, aten.native_layer_norm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_native_layer_norm_14.run(buf36, buf23, primals_20, 256, grid=grid(256), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_20
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = buf22; del buf22  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf38 = buf21; del buf21  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.native_layer_norm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_9.run(buf36, buf37, buf38, 64, grid=grid(64), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf39 = reinterpret_tensor(buf23, (4, 16, 4), (64, 4, 1), 0); del buf23  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.native_layer_norm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_10.run(buf36, buf37, buf38, primals_21, primals_22, buf39, 256, grid=grid(256), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_22
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf40 = empty_strided_cuda((64, 64), (64, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_3], Original ATen: [aten.addmm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_24, reinterpret_tensor(buf39, (64, 4), (4, 1), 0), reinterpret_tensor(primals_23, (4, 64), (1, 4), 0), alpha=1, beta=1, out=buf40)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_24
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf41 = empty_strided_cuda((4, 16, 64), (1024, 64, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [gelu_1], Original ATen: [aten.gelu]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_gelu_11.run(buf40, buf41, 4096, grid=grid(4096), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf42 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.addmm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf41, (64, 64), (64, 1), 0), reinterpret_tensor(primals_25, (64, 4), (1, 64), 0), out=buf42)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf43 = reinterpret_tensor(buf42, (4, 16, 4), (64, 4, 1), 0); del buf42  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add_4], Original ATen: [aten.add]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_12.run(buf43, buf39, primals_26, 256, grid=grid(256), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_26
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf44 = buf38; del buf38  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf45 = buf37; del buf37  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.native_layer_norm]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_native_layer_norm_9.run(buf43, buf44, buf45, 64, grid=grid(64), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf46 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_6], Original ATen: [aten.clone]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_15.run(buf43, buf44, buf45, primals_27, primals_28, buf46, 16, 16, grid=grid(16, 16), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf44
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf45
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_28
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_7], Original ATen: [aten.convolution]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf47 = extern_kernels.convolution(reinterpret_tensor(buf46, (4, 4, 16), (64, 16, 1), 0), primals_29, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf47, (4, 8, 16), (128, 16, 1))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cond_info_1], Original ATen: [aten.convolution]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf48 = extern_kernels.convolution(reinterpret_tensor(primals_31, (4, 4, 16), (64, 16, 1), 0), primals_32, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf48, (4, 8, 16), (128, 16, 1))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf49 = empty_strided_cuda((4, 4, 16), (64, 16, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf50 = empty_strided_cuda((4, 4, 16), (64, 16, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf51 = empty_strided_cuda((4, 4, 16), (64, 16, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sigmoid, tanh, y_9], Original ATen: [aten.sigmoid, aten.tanh, aten.mul]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_sigmoid_tanh_16.run(buf47, primals_30, buf48, primals_33, buf49, buf50, buf51, 256, grid=grid(256), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf47
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf48
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_30
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_33
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_10], Original ATen: [aten.convolution]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf52 = extern_kernels.convolution(buf51, primals_34, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf52, (4, 8, 16), (128, 16, 1))
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf53 = buf52; del buf52  # reuse
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [y_10], Original ATen: [aten.convolution]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_17.run(buf53, primals_35, 512, grid=grid(512), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_35
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf54 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add_6, truediv], Original ATen: [aten.add, aten.div]
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_18.run(primals_1, buf53, buf54, 256, grid=grid(256), stream=stream0)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf54, reinterpret_tensor(buf53, (4, 4, 4, 4), (128, 16, 4, 1), 64), primals_4, primals_9, primals_15, primals_21, primals_27, primals_29, primals_32, primals_34, reinterpret_tensor(buf1, (64, 4), (4, 1), 0), buf7, reinterpret_tensor(buf11, (64, 4), (4, 1), 0), buf13, reinterpret_tensor(buf16, (64, 4), (4, 1), 0), buf17, reinterpret_tensor(buf18, (64, 64), (64, 1), 0), buf20, reinterpret_tensor(buf24, (64, 4), (4, 1), 0), buf30, reinterpret_tensor(buf34, (64, 4), (4, 1), 0), buf36, reinterpret_tensor(buf39, (64, 4), (4, 1), 0), buf40, reinterpret_tensor(buf41, (64, 64), (64, 1), 0), buf43, reinterpret_tensor(buf46, (4, 4, 16), (64, 16, 1), 0), reinterpret_tensor(primals_31, (4, 4, 16), (64, 16, 1), 0), buf49, buf50, buf51, primals_25, primals_23, primals_19, buf55, buf56, buf57, primals_18, primals_13, primals_11, primals_7, buf58, buf59, buf60, primals_6, )
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((12, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((12, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((64, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, 64), (64, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((12, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((12, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((64, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((4, 64), (64, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((8, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((8, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((8, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35])
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:16:49.935000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:50.004000 1295092 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/ly/clyliqoszi4hutm3ybf7mlpoo42fglbz3lpufahzkjcm6atxw6h6.py
