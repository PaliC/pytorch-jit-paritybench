V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['67_forward']
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qj/cqj5clupvqoyhsfa4beql43xmtfgmjlincolavcm5dozt7e6kild.py
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [res, res_3, res_6], Original ATen: [aten.convolution]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   res => convolution
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   res_3 => convolution_1
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   res_6 => convolution_2
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%unsqueeze, %primals_2, %primals_3, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%unsqueeze, %primals_4, %primals_5, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%unsqueeze, %primals_6, %primals_7, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_0 = async_compile.triton('triton_poi_fused_convolution_0', '''
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_0(in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*x1), xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp0, xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp0, xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x3), tmp0, xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/on/conp33szwe4i5nc6d3tapi4tnceohzxqyl6e625aolrlto6mh7yd.py
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [res_3], Original ATen: [aten.convolution]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   res_3 => convolution_1
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%unsqueeze, %primals_4, %primals_5, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_1 = async_compile.triton('triton_poi_fused_convolution_1', '''
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_1(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp2, xmask & ymask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ne/cnepc6reogicuzjd4louma3a436aj47gsla7fe3mbckq5q4eo5h4.py
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [q], Original ATen: [aten.mul]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   q => mul
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_1, 1.0), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_2 = async_compile.triton('triton_poi_fused_mul_2', '''
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*x1), xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/jf/cjftqrbbjumgv7hru2b5nhevdjan5njzocrg4e5azspmrhueeabr.py
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn_output_weights_1], Original ATen: [aten._softmax]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_output_weights_1 => amax, exp, sub
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_7, [-1], True), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_7, %amax), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_3 = async_compile.triton('triton_poi_fused__softmax_3', '''
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bg/cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn_output_weights_1], Original ATen: [aten._softmax]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_output_weights_1 => div, sum_1
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_4 = async_compile.triton('triton_poi_fused__softmax_4', '''
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 4
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x5 + 16*y4), xmask & ymask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x3 + 16*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x3 + 16*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x3 + 16*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x3 + 16*y4), xmask & ymask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x5 + 64*y1), tmp8, xmask & ymask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/f3/cf3kun77gx6d6lgekpmg2tzo3bhbei6t66mrlpelb5x7lylxvzrc.py
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.bmm]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_output => bmm_1
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %bmm_1 : [num_users=1] = call_function[target=torch.ops.aten.bmm.default](args = (%view_8, %view_9), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_bmm_5 = async_compile.triton('triton_poi_fused_bmm_5', '''
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bmm_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_bmm_5(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x1 + 64*(x0 // 4) + ((x0 % 4))), xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yd/cydxbesmxe5qi6annmh3jnuxijke7u4wnvzgv7fqksvtmnpovkll.py
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn_output_2], Original ATen: [aten.clone]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_output_2 => clone_1
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_1 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%view_11,), kwargs = {memory_format: torch.contiguous_format})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_6 = async_compile.triton('triton_poi_fused_clone_6', '''
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_6(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 4
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x1), xmask & ymask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 16*y0), tmp0, xmask & ymask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ds/cdsolcdngtf4nmmdqdwmr5rrgpl73z5gqjjanixv25u3u5f52i5u.py
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn_output_2, src, mean, std], Original ATen: [aten.add, aten.mean, aten.std]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_output_2 => add
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   src => add_1
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std => var
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_13, %primals_9), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %add), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%add_1, [-1], True), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var : [num_users=1] = call_function[target=torch.ops.aten.var.correction](args = (%add_1, [-1]), kwargs = {correction: 1.0, keepdim: True})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mean_std_7 = async_compile.triton('triton_poi_fused_add_mean_std_7', '''
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mean_std_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mean_std_7(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (0))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK])
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr2 + (1))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr2 + (2))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [XBLOCK])
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr2 + (3))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.broadcast_to(tmp22, [XBLOCK])
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 + tmp4
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp6 + tmp10
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp5 + tmp11
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 + tmp16
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 + tmp17
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp12 + tmp18
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp21 + tmp23
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp20 + tmp24
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp19 + tmp25
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = 4.0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 / tmp27
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp5 - tmp28
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 * tmp29
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp11 - tmp28
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 * tmp31
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 + tmp32
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp18 - tmp28
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 * tmp34
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp33 + tmp35
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp25 - tmp28
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 * tmp37
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp36 + tmp38
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = 3.0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 / tmp40
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp28, xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp41, xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/he/checyhnakhbzxcef63a6fuh2wemrj73j7x2bugnsyx7miti46ben.py
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn_output_2, src, std, sub, mul, add_1, truediv, src_1], Original ATen: [aten.add, aten.std, aten.sub, aten.mul, aten.div]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_2
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_output_2 => add
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_1
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   src => add_1
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   src_1 => add_3
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std => sqrt
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub_1
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div_1
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_13, %primals_9), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %add), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%var,), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %mean), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_10, %sub_1), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sqrt, 1e-06), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_1, %add_2), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%div_1, %primals_11), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_mul_std_sub_8 = async_compile.triton('triton_poi_fused_add_div_mul_std_sub_8', '''
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_mul_std_sub_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_mul_std_sub_8(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x2), xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp1 + tmp4
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 - tmp6
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 * tmp7
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = libdevice.sqrt(tmp9)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1e-06
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp8 / tmp12
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp15, xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4b/c4bj4ejyuoo2kxcslfaneba52h5qdcms4f4fphlszoymrd5z64al.py
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [src_3], Original ATen: [aten.unsqueeze]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   src_3 => unsqueeze_4
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %unsqueeze_4 : [num_users=3] = call_function[target=torch.ops.aten.unsqueeze.default](args = (%permute_17, 2), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_unsqueeze_9 = async_compile.triton('triton_poi_fused_unsqueeze_9', '''
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_unsqueeze_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_unsqueeze_9(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*x1), xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp0, xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tp/ctp2ib6svdq3u4a62rfvuc4ycdkypjczzgh76tpfmjm7462h4zoq.py
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_3, relu], Original ATen: [aten.convolution, aten.relu]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_3 => convolution_3
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   relu => relu
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%unsqueeze_4, %primals_12, %primals_13, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_3,), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_10 = async_compile.triton('triton_poi_fused_convolution_relu_10', '''
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_10', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_10(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 2048)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), None)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, None)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/jq/cjqjz25y3un7i3isvirfvhnx5lcliimclojgutjimenqcwgzmjmj.py
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [src2], Original ATen: [aten.convolution]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   src2 => convolution_4
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_4 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu, %primals_14, %primals_15, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_11 = async_compile.triton('triton_poi_fused_convolution_11', '''
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_11', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_11(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/kh/ckh2koey4ypqim6dpwtt5iylfecm5wqawqdhuhtcelfgwvfblo4c.py
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [src_6, mean_2, std_2], Original ATen: [aten.add, aten.mean, aten.std]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_2 => mean_1
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   src_6 => add_4
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std_2 => var_1
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%permute_19, %permute_18), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%add_4, [-1], True), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_1 : [num_users=1] = call_function[target=torch.ops.aten.var.correction](args = (%add_4, [-1]), kwargs = {correction: 1.0, keepdim: True})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mean_std_12 = async_compile.triton('triton_poi_fused_add_mean_std_12', '''
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mean_std_12', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mean_std_12(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 + tmp5
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 + tmp8
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp6 + tmp9
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp10 + tmp13
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 4.0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 / tmp15
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp2 - tmp16
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 * tmp17
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp5 - tmp16
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp19
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp18 + tmp20
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp9 - tmp16
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 * tmp22
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp21 + tmp23
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp13 - tmp16
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp25
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp24 + tmp26
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 3.0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 / tmp28
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp29, xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp16, xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2u/c2uksrqnkowkwzlamd5edjqqhkwk3eqhwht5eok6edcgdfjvazp7.py
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [src_6, mean_2, std_2, sub_1, mul_1, add_4, truediv_1, src_7], Original ATen: [aten.add, aten.mean, aten.std, aten.sub, aten.mul, aten.div]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_5
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_2 => mean_1
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_2
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   src_6 => add_4
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   src_7 => add_6
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std_2 => sqrt_1
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_2
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_1 => div_2
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%permute_19, %permute_18), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%add_4, [-1], True), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt_1 : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%var_1,), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %mean_1), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_16, %sub_2), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sqrt_1, 1e-06), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_2, %add_5), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%div_2, %primals_17), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_mean_mul_std_sub_13 = async_compile.triton('triton_poi_fused_add_div_mean_mul_std_sub_13', '''
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_mean_mul_std_sub_13', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_mean_mul_std_sub_13(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 4
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x3), xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x3), xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr3 + (x4), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x4), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 - tmp4
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 * tmp5
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1e-06
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp6 / tmp10
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 4*x2 + 16*x1), tmp13, xmask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/w6/cw6acs7dgx6c7mxuszgrzodr2zmmnttgn4dc6rtm6sdm22ucdenq.py
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.transpose]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %permute_33 : [num_users=1] = call_function[target=torch.ops.aten.permute.default](args = (%view_6, [0, 2, 1]), kwargs = {})
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_transpose_14 = async_compile.triton('triton_poi_fused_transpose_14', '''
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_transpose_14', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_transpose_14(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 16*x1), xmask & ymask, eviction_policy='evict_last')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 4*y0), tmp0, xmask & ymask)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17 = args
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4), (4, 1))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, ), (1, ))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (2048, 4, 1, 1), (4, 1, 1, 1))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (2048, ), (1, ))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, 2048, 1, 1), (2048, 1, 1, 1))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (4, ), (1, ))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (4, ), (1, ))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 1, 4), (16, 1, 16, 4), torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 1, 4), (16, 1, 16, 4), torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 1, 4), (16, 1, 16, 4), torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [res, res_3, res_6], Original ATen: [aten.convolution]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(primals_1, buf0, buf2, buf4, 64, grid=grid(64), stream=stream0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [res], Original ATen: [aten.convolution]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 4, 1, 4), (16, 1, 16, 4))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [res_3], Original ATen: [aten.convolution]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(buf2, primals_4, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 4, 1, 4), (16, 1, 16, 4))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [res_6], Original ATen: [aten.convolution]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, primals_6, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 4, 1, 4), (16, 1, 16, 4))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf4, (4, 4, 1, 4), (16, 4, 4, 1), 0); del buf4  # reuse
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [res_3], Original ATen: [aten.convolution]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_1.run(buf3, primals_5, buf6, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf3, (4, 4, 4), (16, 4, 1), 0); del buf3  # reuse
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [q], Original ATen: [aten.mul]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_2.run(buf1, primals_3, buf7, 64, grid=grid(64), stream=stream0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((16, 4, 4), (16, 4, 1), torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_output_weights], Original ATen: [aten.bmm]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf7, (16, 4, 1), (1, 16, 0), 0), reinterpret_tensor(buf6, (16, 1, 4), (4, 0, 1), 0), out=buf8)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_output_weights_1], Original ATen: [aten._softmax]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_3.run(buf8, buf9, 256, grid=grid(256), stream=stream0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf8, (4, 4, 4, 4), (64, 1, 16, 4), 0); del buf8  # reuse
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_output_weights_1], Original ATen: [aten._softmax]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_4.run(buf9, buf10, 16, 16, grid=grid(16, 16), stream=stream0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf1, (4, 4, 1, 4), (16, 4, 4, 1), 0); del buf1  # reuse
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [res_6], Original ATen: [aten.convolution]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_1.run(buf5, primals_7, buf11, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf9, (16, 4, 4), (1, 64, 16), 0); del buf9  # reuse
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.bmm]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_bmm_5.run(buf10, buf12, 256, grid=grid(256), stream=stream0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = reinterpret_tensor(buf5, (16, 4, 1), (4, 1, 1), 0); del buf5  # reuse
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.bmm]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(buf12, reinterpret_tensor(buf11, (16, 4, 1), (4, 1, 0), 0), out=buf13)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf12
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = reinterpret_tensor(buf2, (4, 4, 4), (16, 4, 1), 0); del buf2  # reuse
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_output_2], Original ATen: [aten.clone]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_6.run(buf13, buf14, 4, 16, grid=grid(4, 16), stream=stream0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = reinterpret_tensor(buf13, (16, 4), (4, 1), 0); del buf13  # reuse
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_output_2], Original ATen: [aten.mm]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf14, (16, 4), (4, 1), 0), reinterpret_tensor(primals_8, (4, 4), (1, 4), 0), out=buf15)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 4, 1), (4, 1, 16), torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 4, 1), (4, 1, 16), torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = buf17; del buf17  # reuse
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_output_2, src, mean, std], Original ATen: [aten.add, aten.mean, aten.std]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mean_std_7.run(buf18, primals_1, buf15, primals_9, buf16, 16, grid=grid(16), stream=stream0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = reinterpret_tensor(buf0, (4, 4, 4), (16, 4, 1), 0); del buf0  # reuse
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_output_2, src, std, sub, mul, add_1, truediv, src_1], Original ATen: [aten.add, aten.std, aten.sub, aten.mul, aten.div]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_mul_std_sub_8.run(primals_10, primals_1, buf15, primals_9, buf16, buf18, primals_11, buf19, 64, grid=grid(64), stream=stream0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 4, 1, 4), (16, 1, 16, 4), torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [src_3], Original ATen: [aten.unsqueeze]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_unsqueeze_9.run(buf19, buf20, 64, grid=grid(64), stream=stream0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3], Original ATen: [aten.convolution]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = extern_kernels.convolution(buf20, primals_12, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf21, (4, 2048, 1, 4), (8192, 1, 8192, 2048))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = buf21; del buf21  # reuse
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3, relu], Original ATen: [aten.convolution, aten.relu]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_10.run(buf22, primals_13, 32768, grid=grid(32768), stream=stream0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [src2], Original ATen: [aten.convolution]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = extern_kernels.convolution(buf22, primals_14, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf23, (4, 4, 1, 4), (16, 1, 16, 4))
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = buf23; del buf23  # reuse
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [src2], Original ATen: [aten.convolution]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_11.run(buf24, primals_15, 64, grid=grid(64), stream=stream0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = reinterpret_tensor(buf18, (4, 4, 1), (1, 4, 16), 0); del buf18  # reuse
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = buf25; del buf25  # reuse
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = reinterpret_tensor(buf16, (4, 4, 1), (1, 4, 16), 0); del buf16  # reuse
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [src_6, mean_2, std_2], Original ATen: [aten.add, aten.mean, aten.std]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mean_std_12.run(buf26, buf20, buf24, buf27, 16, grid=grid(16), stream=stream0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = buf19; del buf19  # reuse
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [src_6, mean_2, std_2, sub_1, mul_1, add_4, truediv_1, src_7], Original ATen: [aten.add, aten.mean, aten.std, aten.sub, aten.mul, aten.div]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_mean_mul_std_sub_13.run(primals_16, buf20, buf24, buf27, buf26, primals_17, buf28, 64, grid=grid(64), stream=stream0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf26
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf27
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = empty_strided_cuda((16, 1, 4), (4, 4, 1), torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.transpose]
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_transpose_14.run(buf7, buf29, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf28, primals_1, primals_2, primals_4, primals_6, primals_9, primals_10, primals_12, primals_14, primals_16, buf10, reinterpret_tensor(buf14, (16, 4), (4, 1), 0), buf15, buf20, buf22, buf24, primals_8, reinterpret_tensor(buf11, (16, 1, 4), (4, 4, 1), 0), buf29, reinterpret_tensor(buf6, (16, 4, 1), (4, 1, 4), 0), )
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((2048, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((2048, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, 2048, 1, 1), (2048, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17])
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:19:58.223000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:58.249000 2798527 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ig/cigcspomeaj4cbl7puwp4uwa5p37pwel3qwpjkh67dnyauj7hxyw.py
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['67_forward']
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qj/cqj5clupvqoyhsfa4beql43xmtfgmjlincolavcm5dozt7e6kild.py
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [res, res_3, res_6], Original ATen: [aten.convolution]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   res => convolution
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   res_3 => convolution_1
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   res_6 => convolution_2
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%unsqueeze, %primals_2, %primals_3, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%unsqueeze, %primals_4, %primals_5, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%unsqueeze, %primals_6, %primals_7, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_0 = async_compile.triton('triton_poi_fused_convolution_0', '''
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_0(in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*x1), xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp0, xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp0, xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x3), tmp0, xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/on/conp33szwe4i5nc6d3tapi4tnceohzxqyl6e625aolrlto6mh7yd.py
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [res_3], Original ATen: [aten.convolution]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   res_3 => convolution_1
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%unsqueeze, %primals_4, %primals_5, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_1 = async_compile.triton('triton_poi_fused_convolution_1', '''
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_1(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp2, xmask & ymask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ne/cnepc6reogicuzjd4louma3a436aj47gsla7fe3mbckq5q4eo5h4.py
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [q], Original ATen: [aten.mul]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   q => mul
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_1, 1.0), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_2 = async_compile.triton('triton_poi_fused_mul_2', '''
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*x1), xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/jf/cjftqrbbjumgv7hru2b5nhevdjan5njzocrg4e5azspmrhueeabr.py
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn_output_weights_1], Original ATen: [aten._softmax]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_output_weights_1 => amax, exp, sub
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_7, [-1], True), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_7, %amax), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_3 = async_compile.triton('triton_poi_fused__softmax_3', '''
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/bg/cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn_output_weights_1], Original ATen: [aten._softmax]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_output_weights_1 => div, sum_1
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_4 = async_compile.triton('triton_poi_fused__softmax_4', '''
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 4
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x5 + 16*y4), xmask & ymask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x3 + 16*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x3 + 16*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x3 + 16*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x3 + 16*y4), xmask & ymask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x5 + 64*y1), tmp8, xmask & ymask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/f3/cf3kun77gx6d6lgekpmg2tzo3bhbei6t66mrlpelb5x7lylxvzrc.py
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.bmm]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_output => bmm_1
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %bmm_1 : [num_users=1] = call_function[target=torch.ops.aten.bmm.default](args = (%view_8, %view_9), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_bmm_5 = async_compile.triton('triton_poi_fused_bmm_5', '''
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bmm_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_bmm_5(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x1 + 64*(x0 // 4) + ((x0 % 4))), xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/yd/cydxbesmxe5qi6annmh3jnuxijke7u4wnvzgv7fqksvtmnpovkll.py
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn_output_2], Original ATen: [aten.clone]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_output_2 => clone_1
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_1 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%view_11,), kwargs = {memory_format: torch.contiguous_format})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_6 = async_compile.triton('triton_poi_fused_clone_6', '''
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_6(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 4
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x1), xmask & ymask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 16*y0), tmp0, xmask & ymask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ds/cdsolcdngtf4nmmdqdwmr5rrgpl73z5gqjjanixv25u3u5f52i5u.py
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn_output_2, src, mean, std], Original ATen: [aten.add, aten.mean, aten.std]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_output_2 => add
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   src => add_1
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std => var
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_13, %primals_9), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %add), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%add_1, [-1], True), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var : [num_users=1] = call_function[target=torch.ops.aten.var.correction](args = (%add_1, [-1]), kwargs = {correction: 1.0, keepdim: True})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mean_std_7 = async_compile.triton('triton_poi_fused_add_mean_std_7', '''
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mean_std_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mean_std_7(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (0))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK])
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr2 + (1))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK])
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr2 + (2))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [XBLOCK])
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr2 + (3))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.broadcast_to(tmp22, [XBLOCK])
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 + tmp4
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp6 + tmp10
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp5 + tmp11
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 + tmp16
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 + tmp17
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp12 + tmp18
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp21 + tmp23
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp20 + tmp24
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp19 + tmp25
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = 4.0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 / tmp27
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp5 - tmp28
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 * tmp29
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp11 - tmp28
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 * tmp31
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 + tmp32
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp18 - tmp28
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 * tmp34
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp33 + tmp35
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp25 - tmp28
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 * tmp37
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp36 + tmp38
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = 3.0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 / tmp40
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp28, xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp41, xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/he/checyhnakhbzxcef63a6fuh2wemrj73j7x2bugnsyx7miti46ben.py
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn_output_2, src, std, sub, mul, add_1, truediv, src_1], Original ATen: [aten.add, aten.std, aten.sub, aten.mul, aten.div]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_2
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn_output_2 => add
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_1
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   src => add_1
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   src_1 => add_3
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std => sqrt
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub_1
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div_1
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_13, %primals_9), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %add), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%var,), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %mean), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_10, %sub_1), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sqrt, 1e-06), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_1, %add_2), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%div_1, %primals_11), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_mul_std_sub_8 = async_compile.triton('triton_poi_fused_add_div_mul_std_sub_8', '''
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_mul_std_sub_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_mul_std_sub_8(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x2), xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp1 + tmp4
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 - tmp6
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 * tmp7
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = libdevice.sqrt(tmp9)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1e-06
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp8 / tmp12
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp15, xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4b/c4bj4ejyuoo2kxcslfaneba52h5qdcms4f4fphlszoymrd5z64al.py
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [src_3], Original ATen: [aten.unsqueeze]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   src_3 => unsqueeze_4
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %unsqueeze_4 : [num_users=3] = call_function[target=torch.ops.aten.unsqueeze.default](args = (%permute_17, 2), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_unsqueeze_9 = async_compile.triton('triton_poi_fused_unsqueeze_9', '''
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_unsqueeze_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_unsqueeze_9(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*x1), xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp0, xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/tp/ctp2ib6svdq3u4a62rfvuc4ycdkypjczzgh76tpfmjm7462h4zoq.py
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_3, relu], Original ATen: [aten.convolution, aten.relu]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_3 => convolution_3
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   relu => relu
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%unsqueeze_4, %primals_12, %primals_13, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_3,), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_10 = async_compile.triton('triton_poi_fused_convolution_relu_10', '''
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_10', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_10(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 2048)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), None)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, None)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/jq/cjqjz25y3un7i3isvirfvhnx5lcliimclojgutjimenqcwgzmjmj.py
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [src2], Original ATen: [aten.convolution]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   src2 => convolution_4
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_4 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu, %primals_14, %primals_15, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_11 = async_compile.triton('triton_poi_fused_convolution_11', '''
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_11', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_11(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/kh/ckh2koey4ypqim6dpwtt5iylfecm5wqawqdhuhtcelfgwvfblo4c.py
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [src_6, mean_2, std_2], Original ATen: [aten.add, aten.mean, aten.std]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_2 => mean_1
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   src_6 => add_4
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std_2 => var_1
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%permute_19, %permute_18), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%add_4, [-1], True), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_1 : [num_users=1] = call_function[target=torch.ops.aten.var.correction](args = (%add_4, [-1]), kwargs = {correction: 1.0, keepdim: True})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mean_std_12 = async_compile.triton('triton_poi_fused_add_mean_std_12', '''
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mean_std_12', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mean_std_12(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 + tmp5
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 + tmp8
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp6 + tmp9
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp10 + tmp13
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 4.0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 / tmp15
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp2 - tmp16
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 * tmp17
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp5 - tmp16
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp19
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp18 + tmp20
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp9 - tmp16
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 * tmp22
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp21 + tmp23
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp13 - tmp16
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp25
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp24 + tmp26
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 3.0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 / tmp28
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp29, xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp16, xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2u/c2uksrqnkowkwzlamd5edjqqhkwk3eqhwht5eok6edcgdfjvazp7.py
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [src_6, mean_2, std_2, sub_1, mul_1, add_4, truediv_1, src_7], Original ATen: [aten.add, aten.mean, aten.std, aten.sub, aten.mul, aten.div]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_5
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_2 => mean_1
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_2
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   src_6 => add_4
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   src_7 => add_6
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std_2 => sqrt_1
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_2
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_1 => div_2
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%permute_19, %permute_18), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%add_4, [-1], True), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt_1 : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%var_1,), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %mean_1), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_16, %sub_2), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sqrt_1, 1e-06), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_2, %add_5), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%div_2, %primals_17), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_mean_mul_std_sub_13 = async_compile.triton('triton_poi_fused_add_div_mean_mul_std_sub_13', '''
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_mean_mul_std_sub_13', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_mean_mul_std_sub_13(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 4
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x3), xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x3), xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr3 + (x4), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x4), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 - tmp4
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 * tmp5
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1e-06
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp6 / tmp10
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 4*x2 + 16*x1), tmp13, xmask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/w6/cw6acs7dgx6c7mxuszgrzodr2zmmnttgn4dc6rtm6sdm22ucdenq.py
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.transpose]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %permute_33 : [num_users=1] = call_function[target=torch.ops.aten.permute.default](args = (%view_6, [0, 2, 1]), kwargs = {})
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_transpose_14 = async_compile.triton('triton_poi_fused_transpose_14', '''
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_transpose_14', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_transpose_14(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 16*x1), xmask & ymask, eviction_policy='evict_last')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 4*y0), tmp0, xmask & ymask)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17 = args
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4), (4, 1))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, ), (1, ))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (2048, 4, 1, 1), (4, 1, 1, 1))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (2048, ), (1, ))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, 2048, 1, 1), (2048, 1, 1, 1))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (4, ), (1, ))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (4, ), (1, ))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 1, 4), (16, 1, 16, 4), torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 1, 4), (16, 1, 16, 4), torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 1, 4), (16, 1, 16, 4), torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [res, res_3, res_6], Original ATen: [aten.convolution]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(primals_1, buf0, buf2, buf4, 64, grid=grid(64), stream=stream0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [res], Original ATen: [aten.convolution]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 4, 1, 4), (16, 1, 16, 4))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [res_3], Original ATen: [aten.convolution]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(buf2, primals_4, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 4, 1, 4), (16, 1, 16, 4))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [res_6], Original ATen: [aten.convolution]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, primals_6, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 4, 1, 4), (16, 1, 16, 4))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf4, (4, 4, 1, 4), (16, 4, 4, 1), 0); del buf4  # reuse
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [res_3], Original ATen: [aten.convolution]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_1.run(buf3, primals_5, buf6, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf3, (4, 4, 4), (16, 4, 1), 0); del buf3  # reuse
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [q], Original ATen: [aten.mul]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_2.run(buf1, primals_3, buf7, 64, grid=grid(64), stream=stream0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((16, 4, 4), (16, 4, 1), torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_output_weights], Original ATen: [aten.bmm]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf7, (16, 4, 1), (1, 16, 0), 0), reinterpret_tensor(buf6, (16, 1, 4), (4, 0, 1), 0), out=buf8)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_output_weights_1], Original ATen: [aten._softmax]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_3.run(buf8, buf9, 256, grid=grid(256), stream=stream0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf8, (4, 4, 4, 4), (64, 1, 16, 4), 0); del buf8  # reuse
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_output_weights_1], Original ATen: [aten._softmax]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_4.run(buf9, buf10, 16, 16, grid=grid(16, 16), stream=stream0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf1, (4, 4, 1, 4), (16, 4, 4, 1), 0); del buf1  # reuse
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [res_6], Original ATen: [aten.convolution]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_1.run(buf5, primals_7, buf11, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf9, (16, 4, 4), (1, 64, 16), 0); del buf9  # reuse
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.bmm]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_bmm_5.run(buf10, buf12, 256, grid=grid(256), stream=stream0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = reinterpret_tensor(buf5, (16, 4, 1), (4, 1, 1), 0); del buf5  # reuse
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.bmm]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(buf12, reinterpret_tensor(buf11, (16, 4, 1), (4, 1, 0), 0), out=buf13)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf12
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = reinterpret_tensor(buf2, (4, 4, 4), (16, 4, 1), 0); del buf2  # reuse
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_output_2], Original ATen: [aten.clone]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_6.run(buf13, buf14, 4, 16, grid=grid(4, 16), stream=stream0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = reinterpret_tensor(buf13, (16, 4), (4, 1), 0); del buf13  # reuse
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_output_2], Original ATen: [aten.mm]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf14, (16, 4), (4, 1), 0), reinterpret_tensor(primals_8, (4, 4), (1, 4), 0), out=buf15)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 4, 1), (4, 1, 16), torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 4, 1), (4, 1, 16), torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = buf17; del buf17  # reuse
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_output_2, src, mean, std], Original ATen: [aten.add, aten.mean, aten.std]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mean_std_7.run(buf18, primals_1, buf15, primals_9, buf16, 16, grid=grid(16), stream=stream0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = reinterpret_tensor(buf0, (4, 4, 4), (16, 4, 1), 0); del buf0  # reuse
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn_output_2, src, std, sub, mul, add_1, truediv, src_1], Original ATen: [aten.add, aten.std, aten.sub, aten.mul, aten.div]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_mul_std_sub_8.run(primals_10, primals_1, buf15, primals_9, buf16, buf18, primals_11, buf19, 64, grid=grid(64), stream=stream0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 4, 1, 4), (16, 1, 16, 4), torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [src_3], Original ATen: [aten.unsqueeze]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_unsqueeze_9.run(buf19, buf20, 64, grid=grid(64), stream=stream0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3], Original ATen: [aten.convolution]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = extern_kernels.convolution(buf20, primals_12, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf21, (4, 2048, 1, 4), (8192, 1, 8192, 2048))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = buf21; del buf21  # reuse
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3, relu], Original ATen: [aten.convolution, aten.relu]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_10.run(buf22, primals_13, 32768, grid=grid(32768), stream=stream0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [src2], Original ATen: [aten.convolution]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = extern_kernels.convolution(buf22, primals_14, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf23, (4, 4, 1, 4), (16, 1, 16, 4))
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = buf23; del buf23  # reuse
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [src2], Original ATen: [aten.convolution]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_11.run(buf24, primals_15, 64, grid=grid(64), stream=stream0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = reinterpret_tensor(buf18, (4, 4, 1), (1, 4, 16), 0); del buf18  # reuse
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = buf25; del buf25  # reuse
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = reinterpret_tensor(buf16, (4, 4, 1), (1, 4, 16), 0); del buf16  # reuse
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [src_6, mean_2, std_2], Original ATen: [aten.add, aten.mean, aten.std]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mean_std_12.run(buf26, buf20, buf24, buf27, 16, grid=grid(16), stream=stream0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = buf19; del buf19  # reuse
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [src_6, mean_2, std_2, sub_1, mul_1, add_4, truediv_1, src_7], Original ATen: [aten.add, aten.mean, aten.std, aten.sub, aten.mul, aten.div]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_mean_mul_std_sub_13.run(primals_16, buf20, buf24, buf27, buf26, primals_17, buf28, 64, grid=grid(64), stream=stream0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf26
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf27
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = empty_strided_cuda((16, 1, 4), (4, 4, 1), torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.transpose]
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_transpose_14.run(buf7, buf29, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf28, primals_1, primals_2, primals_4, primals_6, primals_9, primals_10, primals_12, primals_14, primals_16, buf10, reinterpret_tensor(buf14, (16, 4), (4, 1), 0), buf15, buf20, buf22, buf24, primals_8, reinterpret_tensor(buf11, (16, 1, 4), (4, 4, 1), 0), buf29, reinterpret_tensor(buf6, (16, 4, 1), (4, 1, 4), 0), )
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((2048, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((2048, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, 2048, 1, 1), (2048, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17])
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 21:08:50.705000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:50.725000 255060 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/zr/czrnpa4qkje6moqoka2riwrzf5ikyzdekljpa32m6ym35bmg2bwa.py
