V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xm/cxmg4kfbcmv7uqj35mm2oa6kaovgle6zskpw34g445yi3zcrsikl.py
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sum_2], Original ATen: [aten.sum]
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%view_1, [0]), kwargs = {})
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_sum_0 = async_compile.triton('triton_per_fused_sum_0', '''
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_sum_0(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 192
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16 + 64*(r0 // 48) + ((r0 % 48))), rmask, other=0.0)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.7500001
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.75
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 / tmp2
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl_math.log(tmp4)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK, RBLOCK])
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(rmask, tmp6, 0)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.sum(tmp8, 1)[:, None]
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp9, None)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2s/c2suexw72o7wjpdm5ssnbd6qcroshpkzxk3wokeykwkxtord4xnc.py
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add, div, log_D1, sum_1, add_2, neg, loss], Original ATen: [aten.add, aten.div, aten.log, aten.sum, aten.neg]
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   div => div
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_D1 => log
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => div_2
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg => neg
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%select, 0.7500001), kwargs = {})
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%select, %add), kwargs = {})
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%div,), kwargs = {})
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%log, [0]), kwargs = {})
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, %sum_2), kwargs = {})
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%add_2,), kwargs = {})
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%neg, 4), kwargs = {})
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_log_neg_sum_1 = async_compile.triton('triton_poi_fused_add_div_log_neg_sum_1', '''
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_log_neg_sum_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_log_neg_sum_1(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (64 + x0), xmask)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (128 + x0), xmask)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (192 + x0), xmask)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr1 + (0))
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.broadcast_to(tmp20, [XBLOCK])
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.7500001
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl_math.log(tmp3)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 / tmp6
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl_math.log(tmp7)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp4 + tmp8
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp1
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 / tmp11
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl_math.log(tmp12)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp9 + tmp13
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 + tmp1
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 / tmp16
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl_math.log(tmp17)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp14 + tmp18
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp19 + tmp21
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = -tmp22
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 0.25
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp24
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp25, xmask)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((1, ), (1, ), torch.float32)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sum_2], Original ATen: [aten.sum]
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_sum_0.run(arg0_1, buf0, 1, 192, grid=grid(1), stream=stream0)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add, div, log_D1, sum_1, add_2, neg, loss], Original ATen: [aten.add, aten.div, aten.log, aten.sum, aten.neg]
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_log_neg_sum_1.run(arg0_1, buf0, buf1, 16, grid=grid(16), stream=stream0)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf1, )
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:02:10.864000 394836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:02:10.867000 394836 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/5f/c5fv7c7lflrfuexz72i23wabc3lerksrrzh7ugwhlp2ckkqm25je.py
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/xm/cxmg4kfbcmv7uqj35mm2oa6kaovgle6zskpw34g445yi3zcrsikl.py
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sum_2], Original ATen: [aten.sum]
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%view_1, [0]), kwargs = {})
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_sum_0 = async_compile.triton('triton_per_fused_sum_0', '''
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_sum_0(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 192
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16 + 64*(r0 // 48) + ((r0 % 48))), rmask, other=0.0)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.7500001
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.75
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 / tmp2
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl_math.log(tmp4)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK, RBLOCK])
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(rmask, tmp6, 0)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.sum(tmp8, 1)[:, None]
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp9, None)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2s/c2suexw72o7wjpdm5ssnbd6qcroshpkzxk3wokeykwkxtord4xnc.py
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add, div, log_D1, sum_1, add_2, neg, loss], Original ATen: [aten.add, aten.div, aten.log, aten.sum, aten.neg]
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   div => div
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_D1 => log
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => div_2
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg => neg
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%select, 0.7500001), kwargs = {})
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%select, %add), kwargs = {})
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%div,), kwargs = {})
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%log, [0]), kwargs = {})
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, %sum_2), kwargs = {})
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%add_2,), kwargs = {})
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%neg, 4), kwargs = {})
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_log_neg_sum_1 = async_compile.triton('triton_poi_fused_add_div_log_neg_sum_1', '''
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_log_neg_sum_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_log_neg_sum_1(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (64 + x0), xmask)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (128 + x0), xmask)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (192 + x0), xmask)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr1 + (0))
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.broadcast_to(tmp20, [XBLOCK])
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.7500001
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl_math.log(tmp3)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 / tmp6
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl_math.log(tmp7)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp4 + tmp8
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp1
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 / tmp11
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl_math.log(tmp12)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp9 + tmp13
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 + tmp1
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 / tmp16
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl_math.log(tmp17)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp14 + tmp18
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp19 + tmp21
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = -tmp22
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 0.25
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp24
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp25, xmask)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((1, ), (1, ), torch.float32)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sum_2], Original ATen: [aten.sum]
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_sum_0.run(arg0_1, buf0, 1, 192, grid=grid(1), stream=stream0)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add, div, log_D1, sum_1, add_2, neg, loss], Original ATen: [aten.add, aten.div, aten.log, aten.sum, aten.neg]
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_log_neg_sum_1.run(arg0_1, buf0, buf1, 16, grid=grid(16), stream=stream0)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf1, )
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:52:27.655000 3051581 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:52:27.659000 3051581 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/jg/cjgnw6yfncr6wm4jnhoi2qmp5ktdws7fmwoptbj7z3gti3az7b2g.py
