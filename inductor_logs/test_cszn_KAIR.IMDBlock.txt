V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['13_forward']
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pt/cptboqunucnhewwz7m3cnudutfp473wnmamgogua5apo37nzwa3f.py
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => gt, mul, where
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution, 0), kwargs = {})
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 0.05), kwargs = {})
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt, %convolution, %mul), kwargs = {})
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_5 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%where, 0), kwargs = {})
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_0 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_0', '''
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_0(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 64)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.05
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 > tmp3
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp8, None)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/w5/cw5qfprgtqh5cdptfzjudkxvakifcgkuapfmq4nhiiuwhimlezyj.py
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%getitem_12, %getitem_14, %getitem_16, %convolution_3], 1), kwargs = {})
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_1 = async_compile.triton('triton_poi_fused_cat_1', '''
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 64)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4096)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 262144
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 16, tl.int64)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 4096*(x1) + 262144*x2), tmp4, other=0.0)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 32, tl.int64)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (x0 + 4096*((-16) + x1) + 262144*x2), tmp9, other=0.0)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp0 >= tmp7
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 48, tl.int64)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp0 < tmp12
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp11 & tmp13
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr2 + (x0 + 4096*((-32) + x1) + 262144*x2), tmp14, other=0.0)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp0 >= tmp12
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 64, tl.int64)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp0 < tmp17
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr3 + (x0 + 4096*((-48) + x1) + 65536*x2), tmp16, other=0.0)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr4 + ((-48) + x1), tmp16, eviction_policy='evict_last', other=0.0)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full(tmp21.shape, 0.0, tmp21.dtype)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp16, tmp21, tmp22)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.where(tmp14, tmp15, tmp23)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.where(tmp9, tmp10, tmp24)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp4, tmp5, tmp25)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp26, None)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/id/cido2ym2wbxefiewfdsesledhvzs5yuoe6nz6kr7uzpiimtmycqu.py
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [res, add], Original ATen: [aten.convolution, aten.add]
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   res => convolution_4
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_4 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%cat, %primals_10, %primals_11, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_3, %convolution_4), kwargs = {})
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_convolution_2 = async_compile.triton('triton_poi_fused_add_convolution_2', '''
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_convolution_2(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 64)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), None)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_out_ptr0 + (x3), None)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp4, None)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11 = args
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (64, ), (1, ))
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (64, 48, 3, 3), (432, 9, 3, 1))
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (64, ), (1, ))
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (64, 48, 3, 3), (432, 9, 3, 1))
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (64, ), (1, ))
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (16, 48, 3, 3), (432, 9, 3, 1))
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (16, ), (1, ))
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (64, 64, 1, 1), (64, 1, 1, 1))
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (64, ), (1, ))
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_3, primals_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.bool)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_0.run(buf1, primals_2, buf12, 1048576, grid=grid(1048576), stream=stream0)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(reinterpret_tensor(buf1, (4, 48, 64, 64), (262144, 4096, 64, 1), 65536), primals_4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.bool)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_0.run(buf3, primals_5, buf11, 1048576, grid=grid(1048576), stream=stream0)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(reinterpret_tensor(buf3, (4, 48, 64, 64), (262144, 4096, 64, 1), 65536), primals_6, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.bool)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_0.run(buf5, primals_7, buf10, 1048576, grid=grid(1048576), stream=stream0)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [d4], Original ATen: [aten.convolution]
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(reinterpret_tensor(buf5, (4, 48, 64, 64), (262144, 4096, 64, 1), 65536), primals_8, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 16, 64, 64), (65536, 4096, 64, 1))
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.float32)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_1.run(buf1, buf3, buf5, buf6, primals_9, buf7, 1048576, grid=grid(1048576), stream=stream0)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [res], Original ATen: [aten.convolution]
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf7, primals_10, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf8; del buf8  # reuse
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [res, add], Original ATen: [aten.convolution, aten.add]
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_convolution_2.run(buf9, primals_3, primals_11, 1048576, grid=grid(1048576), stream=stream0)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf9, primals_1, primals_3, primals_4, primals_6, primals_8, primals_10, reinterpret_tensor(buf1, (4, 48, 64, 64), (262144, 4096, 64, 1), 65536), reinterpret_tensor(buf3, (4, 48, 64, 64), (262144, 4096, 64, 1), 65536), reinterpret_tensor(buf5, (4, 48, 64, 64), (262144, 4096, 64, 1), 65536), buf7, buf10, buf11, buf12, )
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 64, 64, 64), (262144, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((64, 48, 3, 3), (432, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((64, 48, 3, 3), (432, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((16, 48, 3, 3), (432, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((64, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11])
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:48:37.805000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:37.811000 2081666 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/qu/cquzx6zo4l7dzmqp2fnui45uevnstykqxqdmcocexvryv7bdn74m.py
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['13_forward']
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pt/cptboqunucnhewwz7m3cnudutfp473wnmamgogua5apo37nzwa3f.py
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => gt, mul, where
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution, 0), kwargs = {})
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 0.05), kwargs = {})
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt, %convolution, %mul), kwargs = {})
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_5 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%where, 0), kwargs = {})
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_0 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_0', '''
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_0(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 64)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.05
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 > tmp3
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp8, None)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/w5/cw5qfprgtqh5cdptfzjudkxvakifcgkuapfmq4nhiiuwhimlezyj.py
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%getitem_12, %getitem_14, %getitem_16, %convolution_3], 1), kwargs = {})
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_1 = async_compile.triton('triton_poi_fused_cat_1', '''
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 64)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4096)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 262144
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 16, tl.int64)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 4096*(x1) + 262144*x2), tmp4, other=0.0)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 32, tl.int64)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (x0 + 4096*((-16) + x1) + 262144*x2), tmp9, other=0.0)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp0 >= tmp7
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 48, tl.int64)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp0 < tmp12
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp11 & tmp13
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr2 + (x0 + 4096*((-32) + x1) + 262144*x2), tmp14, other=0.0)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp0 >= tmp12
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 64, tl.int64)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp0 < tmp17
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr3 + (x0 + 4096*((-48) + x1) + 65536*x2), tmp16, other=0.0)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr4 + ((-48) + x1), tmp16, eviction_policy='evict_last', other=0.0)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full(tmp21.shape, 0.0, tmp21.dtype)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp16, tmp21, tmp22)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.where(tmp14, tmp15, tmp23)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.where(tmp9, tmp10, tmp24)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp4, tmp5, tmp25)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp26, None)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/id/cido2ym2wbxefiewfdsesledhvzs5yuoe6nz6kr7uzpiimtmycqu.py
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [res, add], Original ATen: [aten.convolution, aten.add]
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   res => convolution_4
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_4 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%cat, %primals_10, %primals_11, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_3, %convolution_4), kwargs = {})
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_convolution_2 = async_compile.triton('triton_poi_fused_add_convolution_2', '''
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_convolution_2(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 64)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), None)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_out_ptr0 + (x3), None)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp4, None)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11 = args
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (64, ), (1, ))
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (64, 48, 3, 3), (432, 9, 3, 1))
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (64, ), (1, ))
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (64, 48, 3, 3), (432, 9, 3, 1))
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (64, ), (1, ))
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (16, 48, 3, 3), (432, 9, 3, 1))
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (16, ), (1, ))
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (64, 64, 1, 1), (64, 1, 1, 1))
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (64, ), (1, ))
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_3, primals_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.bool)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_0.run(buf1, primals_2, buf12, 1048576, grid=grid(1048576), stream=stream0)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(reinterpret_tensor(buf1, (4, 48, 64, 64), (262144, 4096, 64, 1), 65536), primals_4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.bool)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_0.run(buf3, primals_5, buf11, 1048576, grid=grid(1048576), stream=stream0)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(reinterpret_tensor(buf3, (4, 48, 64, 64), (262144, 4096, 64, 1), 65536), primals_6, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.bool)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_0.run(buf5, primals_7, buf10, 1048576, grid=grid(1048576), stream=stream0)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [d4], Original ATen: [aten.convolution]
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(reinterpret_tensor(buf5, (4, 48, 64, 64), (262144, 4096, 64, 1), 65536), primals_8, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 16, 64, 64), (65536, 4096, 64, 1))
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.float32)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_1.run(buf1, buf3, buf5, buf6, primals_9, buf7, 1048576, grid=grid(1048576), stream=stream0)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [res], Original ATen: [aten.convolution]
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf7, primals_10, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf8; del buf8  # reuse
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [res, add], Original ATen: [aten.convolution, aten.add]
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_convolution_2.run(buf9, primals_3, primals_11, 1048576, grid=grid(1048576), stream=stream0)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf9, primals_1, primals_3, primals_4, primals_6, primals_8, primals_10, reinterpret_tensor(buf1, (4, 48, 64, 64), (262144, 4096, 64, 1), 65536), reinterpret_tensor(buf3, (4, 48, 64, 64), (262144, 4096, 64, 1), 65536), reinterpret_tensor(buf5, (4, 48, 64, 64), (262144, 4096, 64, 1), 65536), buf7, buf10, buf11, buf12, )
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 64, 64, 64), (262144, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((64, 48, 3, 3), (432, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((64, 48, 3, 3), (432, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((16, 48, 3, 3), (432, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((64, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11])
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:38:09.885000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:09.890000 3611566 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/do/cdon6b2hpihrrbqnvrnl6mdxlf7bb2qwz6hte5vca423ves6kstn.py
