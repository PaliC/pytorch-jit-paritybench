V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['96_forward']
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/in/cinbtjb3wzgcalqsafqwntomsd7unebj7ez5f2dbwzu23zb7yri6.py
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm, silu], Original ATen: [aten._native_batch_norm_legit_no_training, aten.silu]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm => add_1, mul_1, mul_2, sub
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   silu => mul_3, sigmoid
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_1,), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=3] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, %sigmoid), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_silu_0 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_silu_0', '''
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_silu_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_silu_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 2)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sigmoid(tmp15)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp17, xmask)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/b7/cb74bzsajzwrgpig7hmwazhk2hyisgdav4utq2amlbdkbp6uhu5o.py
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm_1, silu_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.silu]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_1 => add_3, mul_5, mul_6, sub_1
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   silu_1 => mul_7, sigmoid_1
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_11), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_5, %unsqueeze_13), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_6, %unsqueeze_15), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_3,), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=4] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_3, %sigmoid_1), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_silu_1 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_silu_1', '''
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_silu_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_silu_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (0))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [XBLOCK])
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (0))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [XBLOCK])
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr4 + (0))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK])
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 - tmp2
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp3 * tmp12
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 * tmp15
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 + tmp18
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.sigmoid(tmp19)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp21, xmask)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qs/cqsgpy7najsyi3ce3imahfrm3kujqocqn54az4z44hs5kkejbm4g.py
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [id_out, input_2, input_4, add, add_1, silu_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add, aten.silu]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_10
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_11
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   id_out => add_5, mul_10, mul_9, sub_2
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_7, mul_12, mul_13, sub_3
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => add_9, mul_15, mul_16, sub_4
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   silu_2 => mul_17, sigmoid_2
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_7, %unsqueeze_17), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %unsqueeze_19), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_9, %unsqueeze_21), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_10, %unsqueeze_23), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_2, %unsqueeze_25), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %unsqueeze_27), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_12, %unsqueeze_29), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_13, %unsqueeze_31), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_3, %unsqueeze_33), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_35), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_15, %unsqueeze_37), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_16, %unsqueeze_39), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_7, %add_9), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_10, %add_5), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_2 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_11,), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_11, %sigmoid_2), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_silu_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_silu_2', '''
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'in_ptr12': '*fp32', 'in_ptr13': '*fp32', 'in_ptr14': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_silu_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 15, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_silu_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, in_ptr13, in_ptr14, xnumel, XBLOCK : tl.constexpr):
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (0))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [XBLOCK])
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (0))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [XBLOCK])
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr4 + (0))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK])
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr5 + (x0), xmask)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr6 + (0))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.broadcast_to(tmp21, [XBLOCK])
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr7 + (0))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.broadcast_to(tmp24, [XBLOCK])
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr8 + (0))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.broadcast_to(tmp31, [XBLOCK])
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr9 + (0))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.broadcast_to(tmp34, [XBLOCK])
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr10 + (x0), xmask)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr11 + (0))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.broadcast_to(tmp39, [XBLOCK])
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.load(in_ptr12 + (0))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.broadcast_to(tmp42, [XBLOCK])
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr13 + (0))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.broadcast_to(tmp49, [XBLOCK])
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.load(in_ptr14 + (0))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.broadcast_to(tmp52, [XBLOCK])
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 - tmp2
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp3 * tmp12
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 * tmp15
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 + tmp18
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 - tmp22
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 + tmp6
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = libdevice.sqrt(tmp26)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp9 / tmp27
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 * tmp11
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp23 * tmp29
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 * tmp32
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp33 + tmp35
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp19 + tmp36
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp38 - tmp40
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 + tmp6
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = libdevice.sqrt(tmp44)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp9 / tmp45
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 * tmp11
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp41 * tmp47
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp48 * tmp50
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp51 + tmp53
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp37 + tmp54
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.sigmoid(tmp55)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp55 * tmp56
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp57, xmask)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/p5/cp5tskbvhf6dstshzzdqeypi7iqem6vlpge6gvuf6ph6vgim4syw.py
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm_5], Original ATen: [aten._native_batch_norm_legit_no_training]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_5 => add_13, mul_19, mul_20, sub_5
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_4, %unsqueeze_41), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %unsqueeze_43), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_19, %unsqueeze_45), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_13 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_20, %unsqueeze_47), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_3', '''
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 2)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp15, xmask)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nn/cnnamxlnzv3l5v6rvksptoq2jzl7db4t2gfzmvqgwlkzglwh62ws.py
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%add_14, %mul_25], 1), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_4 = async_compile.triton('triton_poi_fused_cat_4', '''
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_4(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 2, tl.int64)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*(x1) + 32*x2), tmp4 & xmask, other=0.0)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x0 + 16*(x1) + 32*x2), tmp4 & xmask, other=0.0)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.sigmoid(tmp6)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp7
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 + tmp8
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full(tmp9.shape, 0.0, tmp9.dtype)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.where(tmp4, tmp9, tmp10)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp0 >= tmp3
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full([1], 4, tl.int64)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp0 < tmp13
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr2 + (x0 + 16*((-2) + x1) + 32*x2), tmp12 & xmask, other=0.0)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sigmoid(tmp15)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full(tmp17.shape, 0.0, tmp17.dtype)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp12, tmp17, tmp18)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp4, tmp11, tmp19)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp20, xmask)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6d/c6ddtocrltjxsvpe5yghv7rfeersboxli4tmazxrafhtyiabf6rv.py
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm_7, silu_5], Original ATen: [aten._native_batch_norm_legit_no_training, aten.silu]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_7 => add_18, mul_27, mul_28, sub_7
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   silu_5 => mul_29, sigmoid_5
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_6, %unsqueeze_57), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_27 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_7, %unsqueeze_59), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_28 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_27, %unsqueeze_61), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_18 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_28, %unsqueeze_63), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_5 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_18,), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_29 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_18, %sigmoid_5), kwargs = {})
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_silu_5 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_silu_5', '''
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_silu_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_silu_5(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sigmoid(tmp15)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp17, xmask)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40 = args
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (2, 4, 1, 1), (4, 1, 1, 1))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (2, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (2, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (2, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (2, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (1, 2, 1, 1), (2, 1, 1, 1))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (1, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (1, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (1, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (1, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (1, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (1, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (1, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (1, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (1, 1, 3, 3), (9, 9, 3, 1))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (1, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (1, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (1, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (1, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (1, 1, 1, 1), (1, 1, 1, 1))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (1, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (1, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (1, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (1, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (2, 1, 1, 1), (1, 1, 1, 1))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (2, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (2, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (2, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (2, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (2, 4, 1, 1), (4, 1, 1, 1))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (2, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (2, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (2, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (2, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (4, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (4, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (4, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_40, (4, ), (1, ))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_2, primals_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 2, 4, 4), (32, 16, 4, 1))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 2, 4, 4), (32, 16, 4, 1), torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm, silu], Original ATen: [aten._native_batch_norm_legit_no_training, aten.silu]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_silu_0.run(buf2, buf0, primals_3, primals_4, primals_5, primals_6, 128, grid=grid(128), stream=stream0)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(buf2, primals_7, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = reinterpret_tensor(buf4, (4, 1, 4, 4), (16, 16, 4, 1), 0); del buf4  # reuse
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_1, silu_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.silu]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_silu_1.run(buf5, buf3, primals_8, primals_9, primals_10, primals_11, 64, grid=grid(64), stream=stream0)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf5, primals_16, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf5, primals_21, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf8; del buf8  # reuse
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf9, (4, 1, 4, 4), (16, 16, 4, 1), 0); del buf9  # reuse
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [id_out, input_2, input_4, add, add_1, silu_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add, aten.silu]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_silu_2.run(buf10, buf6, primals_17, primals_18, primals_19, primals_20, buf7, primals_22, primals_23, primals_24, primals_25, buf5, primals_12, primals_13, primals_14, primals_15, 64, grid=grid(64), stream=stream0)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_4], Original ATen: [aten.convolution]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_26, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 2, 4, 4), (32, 16, 4, 1))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 2, 4, 4), (32, 16, 4, 1), torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_5], Original ATen: [aten._native_batch_norm_legit_no_training]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_3.run(buf11, primals_27, primals_28, primals_29, primals_30, buf12, 128, grid=grid(128), stream=stream0)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_5], Original ATen: [aten.convolution]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = extern_kernels.convolution(primals_2, primals_31, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf13, (4, 2, 4, 4), (32, 16, 4, 1))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 2, 4, 4), (32, 16, 4, 1), torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_6], Original ATen: [aten._native_batch_norm_legit_no_training]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_3.run(buf13, primals_32, primals_33, primals_34, primals_35, buf14, 128, grid=grid(128), stream=stream0)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_4.run(buf2, buf12, buf14, buf15, 256, grid=grid(256), stream=stream0)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf12
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_6], Original ATen: [aten.convolution]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = extern_kernels.convolution(buf15, primals_36, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf16, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = buf17; del buf17  # reuse
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_7, silu_5], Original ATen: [aten._native_batch_norm_legit_no_training, aten.silu]
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_silu_5.run(buf18, buf16, primals_37, primals_38, primals_39, primals_40, 256, grid=grid(256), stream=stream0)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf18, primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, buf0, buf2, buf3, buf5, buf6, buf7, buf10, buf11, buf13, buf15, buf16, )
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((1, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((1, 1, 1, 1), (1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((2, 1, 1, 1), (1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_40 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40])
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:19:11.867000 859334 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:19:11.879000 859334 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/lc/clcvd3r3a6gvtvc6r6mzlkimvhbhz7oqs4rhn5465fofjzjixye2.py
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['96_forward']
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/in/cinbtjb3wzgcalqsafqwntomsd7unebj7ez5f2dbwzu23zb7yri6.py
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm, silu], Original ATen: [aten._native_batch_norm_legit_no_training, aten.silu]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm => add_1, mul_1, mul_2, sub
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   silu => mul_3, sigmoid
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_1,), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=3] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, %sigmoid), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_silu_0 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_silu_0', '''
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_silu_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_silu_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 2)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sigmoid(tmp15)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp17, xmask)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/b7/cb74bzsajzwrgpig7hmwazhk2hyisgdav4utq2amlbdkbp6uhu5o.py
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm_1, silu_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.silu]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_1 => add_3, mul_5, mul_6, sub_1
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   silu_1 => mul_7, sigmoid_1
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_11), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_5, %unsqueeze_13), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_6, %unsqueeze_15), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_3,), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=4] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_3, %sigmoid_1), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_silu_1 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_silu_1', '''
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_silu_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_silu_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (0))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [XBLOCK])
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (0))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [XBLOCK])
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr4 + (0))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK])
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 - tmp2
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp3 * tmp12
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 * tmp15
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 + tmp18
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.sigmoid(tmp19)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp21, xmask)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qs/cqsgpy7najsyi3ce3imahfrm3kujqocqn54az4z44hs5kkejbm4g.py
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [id_out, input_2, input_4, add, add_1, silu_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add, aten.silu]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_10
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_11
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   id_out => add_5, mul_10, mul_9, sub_2
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_7, mul_12, mul_13, sub_3
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => add_9, mul_15, mul_16, sub_4
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   silu_2 => mul_17, sigmoid_2
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_7, %unsqueeze_17), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %unsqueeze_19), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_9, %unsqueeze_21), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_10, %unsqueeze_23), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_2, %unsqueeze_25), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %unsqueeze_27), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_12, %unsqueeze_29), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_13, %unsqueeze_31), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_3, %unsqueeze_33), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_35), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_15, %unsqueeze_37), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_16, %unsqueeze_39), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_7, %add_9), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_10, %add_5), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_2 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_11,), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_11, %sigmoid_2), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_silu_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_silu_2', '''
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'in_ptr12': '*fp32', 'in_ptr13': '*fp32', 'in_ptr14': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_silu_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 15, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_silu_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, in_ptr13, in_ptr14, xnumel, XBLOCK : tl.constexpr):
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (0))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [XBLOCK])
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (0))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [XBLOCK])
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr4 + (0))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK])
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr5 + (x0), xmask)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr6 + (0))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.broadcast_to(tmp21, [XBLOCK])
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr7 + (0))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.broadcast_to(tmp24, [XBLOCK])
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr8 + (0))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.broadcast_to(tmp31, [XBLOCK])
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr9 + (0))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.broadcast_to(tmp34, [XBLOCK])
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr10 + (x0), xmask)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr11 + (0))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.broadcast_to(tmp39, [XBLOCK])
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.load(in_ptr12 + (0))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.broadcast_to(tmp42, [XBLOCK])
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr13 + (0))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.broadcast_to(tmp49, [XBLOCK])
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.load(in_ptr14 + (0))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.broadcast_to(tmp52, [XBLOCK])
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 - tmp2
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp3 * tmp12
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 * tmp15
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 + tmp18
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 - tmp22
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 + tmp6
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = libdevice.sqrt(tmp26)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp9 / tmp27
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 * tmp11
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp23 * tmp29
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 * tmp32
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp33 + tmp35
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp19 + tmp36
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp38 - tmp40
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 + tmp6
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = libdevice.sqrt(tmp44)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp9 / tmp45
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 * tmp11
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp41 * tmp47
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp48 * tmp50
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp51 + tmp53
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp37 + tmp54
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.sigmoid(tmp55)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp55 * tmp56
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp57, xmask)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/p5/cp5tskbvhf6dstshzzdqeypi7iqem6vlpge6gvuf6ph6vgim4syw.py
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm_5], Original ATen: [aten._native_batch_norm_legit_no_training]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_5 => add_13, mul_19, mul_20, sub_5
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_4, %unsqueeze_41), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %unsqueeze_43), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_19, %unsqueeze_45), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_13 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_20, %unsqueeze_47), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_3', '''
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 2)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp15, xmask)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/nn/cnnamxlnzv3l5v6rvksptoq2jzl7db4t2gfzmvqgwlkzglwh62ws.py
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%add_14, %mul_25], 1), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_4 = async_compile.triton('triton_poi_fused_cat_4', '''
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_4(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 2, tl.int64)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*(x1) + 32*x2), tmp4 & xmask, other=0.0)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x0 + 16*(x1) + 32*x2), tmp4 & xmask, other=0.0)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.sigmoid(tmp6)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp7
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 + tmp8
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full(tmp9.shape, 0.0, tmp9.dtype)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.where(tmp4, tmp9, tmp10)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp0 >= tmp3
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full([1], 4, tl.int64)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp0 < tmp13
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr2 + (x0 + 16*((-2) + x1) + 32*x2), tmp12 & xmask, other=0.0)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sigmoid(tmp15)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full(tmp17.shape, 0.0, tmp17.dtype)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp12, tmp17, tmp18)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp4, tmp11, tmp19)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp20, xmask)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/6d/c6ddtocrltjxsvpe5yghv7rfeersboxli4tmazxrafhtyiabf6rv.py
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm_7, silu_5], Original ATen: [aten._native_batch_norm_legit_no_training, aten.silu]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_7 => add_18, mul_27, mul_28, sub_7
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   silu_5 => mul_29, sigmoid_5
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_6, %unsqueeze_57), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_27 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_7, %unsqueeze_59), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_28 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_27, %unsqueeze_61), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_18 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_28, %unsqueeze_63), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_5 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_18,), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_29 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_18, %sigmoid_5), kwargs = {})
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_silu_5 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_silu_5', '''
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_silu_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_silu_5(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sigmoid(tmp15)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp17, xmask)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40 = args
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (2, 4, 1, 1), (4, 1, 1, 1))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (2, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (2, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (2, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (2, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (1, 2, 1, 1), (2, 1, 1, 1))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (1, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (1, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (1, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (1, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (1, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (1, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (1, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (1, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (1, 1, 3, 3), (9, 9, 3, 1))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (1, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (1, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (1, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (1, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (1, 1, 1, 1), (1, 1, 1, 1))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (1, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (1, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (1, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (1, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (2, 1, 1, 1), (1, 1, 1, 1))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (2, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (2, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (2, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (2, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (2, 4, 1, 1), (4, 1, 1, 1))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (2, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (2, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (2, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (2, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (4, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (4, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (4, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_40, (4, ), (1, ))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_2, primals_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 2, 4, 4), (32, 16, 4, 1))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 2, 4, 4), (32, 16, 4, 1), torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm, silu], Original ATen: [aten._native_batch_norm_legit_no_training, aten.silu]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_silu_0.run(buf2, buf0, primals_3, primals_4, primals_5, primals_6, 128, grid=grid(128), stream=stream0)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(buf2, primals_7, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = reinterpret_tensor(buf4, (4, 1, 4, 4), (16, 16, 4, 1), 0); del buf4  # reuse
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_1, silu_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.silu]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_silu_1.run(buf5, buf3, primals_8, primals_9, primals_10, primals_11, 64, grid=grid(64), stream=stream0)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf5, primals_16, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf5, primals_21, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf8; del buf8  # reuse
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf9, (4, 1, 4, 4), (16, 16, 4, 1), 0); del buf9  # reuse
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [id_out, input_2, input_4, add, add_1, silu_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add, aten.silu]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_silu_2.run(buf10, buf6, primals_17, primals_18, primals_19, primals_20, buf7, primals_22, primals_23, primals_24, primals_25, buf5, primals_12, primals_13, primals_14, primals_15, 64, grid=grid(64), stream=stream0)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_4], Original ATen: [aten.convolution]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_26, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 2, 4, 4), (32, 16, 4, 1))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 2, 4, 4), (32, 16, 4, 1), torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_5], Original ATen: [aten._native_batch_norm_legit_no_training]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_3.run(buf11, primals_27, primals_28, primals_29, primals_30, buf12, 128, grid=grid(128), stream=stream0)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_5], Original ATen: [aten.convolution]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = extern_kernels.convolution(primals_2, primals_31, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf13, (4, 2, 4, 4), (32, 16, 4, 1))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 2, 4, 4), (32, 16, 4, 1), torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_6], Original ATen: [aten._native_batch_norm_legit_no_training]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_3.run(buf13, primals_32, primals_33, primals_34, primals_35, buf14, 128, grid=grid(128), stream=stream0)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_4.run(buf2, buf12, buf14, buf15, 256, grid=grid(256), stream=stream0)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf12
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_6], Original ATen: [aten.convolution]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = extern_kernels.convolution(buf15, primals_36, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf16, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = buf17; del buf17  # reuse
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_7, silu_5], Original ATen: [aten._native_batch_norm_legit_no_training, aten.silu]
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_silu_5.run(buf18, buf16, primals_37, primals_38, primals_39, primals_40, 256, grid=grid(256), stream=stream0)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf18, primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, buf0, buf2, buf3, buf5, buf6, buf7, buf10, buf11, buf13, buf15, buf16, )
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((1, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((1, 1, 1, 1), (1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((2, 1, 1, 1), (1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_40 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40])
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:09:33.253000 3568094 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:09:33.271000 3568094 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/v7/cv7i2u3d2zw76t6oxfm2uzpr53kirwe6jbruu6czjtekfkx52vg2.py
