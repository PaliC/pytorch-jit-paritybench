V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_inference']
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6z/c6zsvyyo6qpangayibgfbbxpvkjtnszrloqn42z7ywgh7ba6isrl.py
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [rvec], Original ATen: [aten.div]
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   rvec => div
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=24] = call_function[target=torch.ops.aten.div.Tensor](args = (%arg0_1, %unsqueeze), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_0 = async_compile.triton('triton_poi_fused_div_0', '''
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 1e-05
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = libdevice.sqrt(tmp13)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 / tmp14
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp15, xmask)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/f6/cf6afbwhqmkooa6h32adlolvpy4zvccuqtiid7qqmnfk22r7si7l.py
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pow_1, sum_1, add, theta, pow_2, pow_3, sub, costh, mul, add_1, mul_1, sub_1, mul_2, sinth, mul_3, sub_2, mul_4, sub_3, mul_5, mul_6, add_2, mul_7, sub_4, mul_8, mul_9, add_3, pow_4, pow_5, sub_5, mul_10, add_4, mul_11, sub_6, mul_12, mul_13, sub_7, mul_14, sub_8, mul_15, mul_16, sub_9, mul_17, sub_10, mul_18, mul_19, add_5, pow_6, pow_7, sub_11, mul_20, add_6], Original ATen: [aten.pow, aten.sum, aten.add, aten.sqrt, aten.rsub, aten.cos, aten.mul, aten.sin, aten.sub]
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_5 => add_5
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_6 => add_6
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   costh => cos
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_10 => mul_10
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_11 => mul_11
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_12 => mul_12
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_13 => mul_13
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_14 => mul_14
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_15 => mul_15
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_16 => mul_16
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_17 => mul_17
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_18 => mul_18
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_19 => mul_19
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_20 => mul_20
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_4
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_5 => mul_5
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_6 => mul_6
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_7 => mul_7
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_8 => mul_8
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_9 => mul_9
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_3 => pow_3
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_4 => pow_4
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_5 => pow_5
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_6 => pow_6
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_7 => pow_7
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sinth => sin
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_10 => sub_10
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_11 => sub_11
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_4 => sub_4
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_5 => sub_5
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_6 => sub_6
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_7 => sub_7
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_8 => sub_8
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_9 => sub_9
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   theta => sqrt
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%arg0_1, 2), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1]), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, 1e-05), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt : [num_users=3] = call_function[target=torch.ops.aten.sqrt.default](args = (%add,), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select, 2), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_1, 2), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %pow_3), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cos : [num_users=9] = call_function[target=torch.ops.aten.cos.default](args = (%sqrt,), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %cos), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_2, %mul), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_2, %select_3), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %cos), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %sub_1), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sin : [num_users=6] = call_function[target=torch.ops.aten.sin.default](args = (%sqrt,), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_4, %sin), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_2, %mul_3), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_5, %select_6), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %cos), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %sub_3), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_7, %sin), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %mul_6), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_8, %select_9), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %cos), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_7, %sub_4), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_10, %sin), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %mul_9), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_11, 2), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_5 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_12, 2), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %pow_5), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %cos), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_4, %mul_10), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_13, %select_14), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %cos), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_11, %sub_6), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_15, %sin), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_12, %mul_13), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_16, %select_17), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %cos), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_14, %sub_8), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_18, %sin), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_15, %mul_16), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_19, %select_20), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %cos), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_18 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_17, %sub_10), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_21, %sin), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_18, %mul_19), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_6 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_22, 2), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_7 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_23, 2), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %pow_7), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %cos), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_6, %mul_20), kwargs = {})
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_cos_mul_pow_rsub_sin_sqrt_sub_sum_1 = async_compile.triton('triton_poi_fused_add_cos_mul_pow_rsub_sin_sqrt_sub_sum_1', '''
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr4': '*fp32', 'out_ptr5': '*fp32', 'out_ptr6': '*fp32', 'out_ptr7': '*fp32', 'out_ptr8': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_cos_mul_pow_rsub_sin_sqrt_sub_sum_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_cos_mul_pow_rsub_sin_sqrt_sub_sum_1(in_ptr0, in_ptr1, out_ptr0, out_ptr1, out_ptr2, out_ptr3, out_ptr4, out_ptr5, out_ptr6, out_ptr7, out_ptr8, xnumel, XBLOCK : tl.constexpr):
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*x1), xmask)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (x0 + 64*x1), xmask)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (16 + x0 + 64*x1), xmask)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (32 + x0 + 64*x1), xmask)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (48 + x0 + 64*x1), xmask)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (16 + x0 + 64*x1), xmask)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 1.0
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 - tmp1
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 * tmp4
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 * tmp12
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp11 + tmp13
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 1e-05
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = libdevice.sqrt(tmp16)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl_math.cos(tmp17)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp3 * tmp18
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp1 + tmp19
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp0 * tmp21
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp2 - tmp18
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 * tmp23
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl_math.sin(tmp17)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 * tmp26
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp24 - tmp27
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp0 * tmp25
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 * tmp23
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp21 * tmp26
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 + tmp31
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp24 + tmp27
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp21 * tmp25
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 * tmp23
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp0 * tmp26
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 - tmp36
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp30 - tmp31
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp35 + tmp36
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp21 * tmp21
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp2 - tmp40
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp41 * tmp18
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp40 + tmp42
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp25 * tmp25
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp2 - tmp44
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 * tmp18
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp44 + tmp46
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 144*x1), tmp20, xmask)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0 + 144*x1), tmp28, xmask)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x0 + 144*x1), tmp32, xmask)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (x0 + 144*x1), tmp33, xmask)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr4 + (x0 + 144*x1), tmp37, xmask)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr5 + (x0 + 144*x1), tmp38, xmask)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr6 + (x0 + 144*x1), tmp39, xmask)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr7 + (x0 + 144*x1), tmp43, xmask)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr8 + (x0 + 144*x1), tmp47, xmask)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [rvec], Original ATen: [aten.div]
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_0.run(arg0_1, buf0, 256, grid=grid(256), stream=stream0)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 36, 4), (144, 4, 1), torch.float32)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = reinterpret_tensor(buf10, (4, 4, 4), (144, 4, 1), 0)  # alias
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = reinterpret_tensor(buf10, (4, 4, 4), (144, 4, 1), 16)  # alias
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = reinterpret_tensor(buf10, (4, 4, 4), (144, 4, 1), 32)  # alias
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = reinterpret_tensor(buf10, (4, 4, 4), (144, 4, 1), 48)  # alias
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf10, (4, 4, 4), (144, 4, 1), 80)  # alias
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf10, (4, 4, 4), (144, 4, 1), 96)  # alias
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf10, (4, 4, 4), (144, 4, 1), 112)  # alias
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = reinterpret_tensor(buf10, (4, 4, 4), (144, 4, 1), 64)  # alias
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf10, (4, 4, 4), (144, 4, 1), 128)  # alias
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, sum_1, add, theta, pow_2, pow_3, sub, costh, mul, add_1, mul_1, sub_1, mul_2, sinth, mul_3, sub_2, mul_4, sub_3, mul_5, mul_6, add_2, mul_7, sub_4, mul_8, mul_9, add_3, pow_4, pow_5, sub_5, mul_10, add_4, mul_11, sub_6, mul_12, mul_13, sub_7, mul_14, sub_8, mul_15, mul_16, sub_9, mul_17, sub_10, mul_18, mul_19, add_5, pow_6, pow_7, sub_11, mul_20, add_6], Original ATen: [aten.pow, aten.sum, aten.add, aten.sqrt, aten.rsub, aten.cos, aten.mul, aten.sin, aten.sub]
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_cos_mul_pow_rsub_sin_sqrt_sub_sum_1.run(buf0, arg0_1, buf1, buf2, buf3, buf4, buf6, buf7, buf8, buf5, buf9, 64, grid=grid(64), stream=stream0)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf10, (64, 3, 3), (9, 3, 1), 0), )
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:26:07.592000 1597724 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:26:07.597000 1597724 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6t/c6twsdaiabn52dvy254r5oepzo2sa3gxvnkuuetfqcet6szibv5h.py
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_inference']
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/6z/c6zsvyyo6qpangayibgfbbxpvkjtnszrloqn42z7ywgh7ba6isrl.py
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [rvec], Original ATen: [aten.div]
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   rvec => div
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=24] = call_function[target=torch.ops.aten.div.Tensor](args = (%arg0_1, %unsqueeze), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_0 = async_compile.triton('triton_poi_fused_div_0', '''
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 1e-05
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = libdevice.sqrt(tmp13)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 / tmp14
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp15, xmask)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/f6/cf6afbwhqmkooa6h32adlolvpy4zvccuqtiid7qqmnfk22r7si7l.py
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pow_1, sum_1, add, theta, pow_2, pow_3, sub, costh, mul, add_1, mul_1, sub_1, mul_2, sinth, mul_3, sub_2, mul_4, sub_3, mul_5, mul_6, add_2, mul_7, sub_4, mul_8, mul_9, add_3, pow_4, pow_5, sub_5, mul_10, add_4, mul_11, sub_6, mul_12, mul_13, sub_7, mul_14, sub_8, mul_15, mul_16, sub_9, mul_17, sub_10, mul_18, mul_19, add_5, pow_6, pow_7, sub_11, mul_20, add_6], Original ATen: [aten.pow, aten.sum, aten.add, aten.sqrt, aten.rsub, aten.cos, aten.mul, aten.sin, aten.sub]
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_5 => add_5
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_6 => add_6
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   costh => cos
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_10 => mul_10
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_11 => mul_11
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_12 => mul_12
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_13 => mul_13
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_14 => mul_14
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_15 => mul_15
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_16 => mul_16
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_17 => mul_17
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_18 => mul_18
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_19 => mul_19
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_20 => mul_20
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_4
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_5 => mul_5
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_6 => mul_6
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_7 => mul_7
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_8 => mul_8
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_9 => mul_9
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_3 => pow_3
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_4 => pow_4
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_5 => pow_5
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_6 => pow_6
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_7 => pow_7
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sinth => sin
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_10 => sub_10
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_11 => sub_11
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_4 => sub_4
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_5 => sub_5
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_6 => sub_6
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_7 => sub_7
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_8 => sub_8
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_9 => sub_9
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   theta => sqrt
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%arg0_1, 2), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1]), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, 1e-05), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt : [num_users=3] = call_function[target=torch.ops.aten.sqrt.default](args = (%add,), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select, 2), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_1, 2), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %pow_3), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cos : [num_users=9] = call_function[target=torch.ops.aten.cos.default](args = (%sqrt,), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %cos), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_2, %mul), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_2, %select_3), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %cos), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %sub_1), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sin : [num_users=6] = call_function[target=torch.ops.aten.sin.default](args = (%sqrt,), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_4, %sin), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_2, %mul_3), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_5, %select_6), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %cos), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %sub_3), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_7, %sin), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %mul_6), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_8, %select_9), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %cos), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_7, %sub_4), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_10, %sin), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %mul_9), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_11, 2), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_5 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_12, 2), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %pow_5), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %cos), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_4, %mul_10), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_13, %select_14), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %cos), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_11, %sub_6), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_15, %sin), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_12, %mul_13), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_16, %select_17), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %cos), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_14, %sub_8), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_18, %sin), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_15, %mul_16), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_19, %select_20), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %cos), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_18 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_17, %sub_10), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_21, %sin), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_18, %mul_19), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_6 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_22, 2), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_7 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_23, 2), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %pow_7), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %cos), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_6, %mul_20), kwargs = {})
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_cos_mul_pow_rsub_sin_sqrt_sub_sum_1 = async_compile.triton('triton_poi_fused_add_cos_mul_pow_rsub_sin_sqrt_sub_sum_1', '''
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr4': '*fp32', 'out_ptr5': '*fp32', 'out_ptr6': '*fp32', 'out_ptr7': '*fp32', 'out_ptr8': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_cos_mul_pow_rsub_sin_sqrt_sub_sum_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_cos_mul_pow_rsub_sin_sqrt_sub_sum_1(in_ptr0, in_ptr1, out_ptr0, out_ptr1, out_ptr2, out_ptr3, out_ptr4, out_ptr5, out_ptr6, out_ptr7, out_ptr8, xnumel, XBLOCK : tl.constexpr):
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*x1), xmask)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (x0 + 64*x1), xmask)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (16 + x0 + 64*x1), xmask)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (32 + x0 + 64*x1), xmask)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (48 + x0 + 64*x1), xmask)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (16 + x0 + 64*x1), xmask)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 1.0
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 - tmp1
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 * tmp4
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 * tmp12
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp11 + tmp13
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 1e-05
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = libdevice.sqrt(tmp16)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl_math.cos(tmp17)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp3 * tmp18
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp1 + tmp19
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp0 * tmp21
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp2 - tmp18
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 * tmp23
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl_math.sin(tmp17)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 * tmp26
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp24 - tmp27
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp0 * tmp25
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 * tmp23
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp21 * tmp26
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 + tmp31
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp24 + tmp27
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp21 * tmp25
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 * tmp23
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp0 * tmp26
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 - tmp36
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp30 - tmp31
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp35 + tmp36
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp21 * tmp21
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp2 - tmp40
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp41 * tmp18
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp40 + tmp42
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp25 * tmp25
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp2 - tmp44
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 * tmp18
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp44 + tmp46
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 144*x1), tmp20, xmask)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0 + 144*x1), tmp28, xmask)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x0 + 144*x1), tmp32, xmask)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (x0 + 144*x1), tmp33, xmask)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr4 + (x0 + 144*x1), tmp37, xmask)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr5 + (x0 + 144*x1), tmp38, xmask)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr6 + (x0 + 144*x1), tmp39, xmask)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr7 + (x0 + 144*x1), tmp43, xmask)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr8 + (x0 + 144*x1), tmp47, xmask)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [rvec], Original ATen: [aten.div]
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_0.run(arg0_1, buf0, 256, grid=grid(256), stream=stream0)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 36, 4), (144, 4, 1), torch.float32)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = reinterpret_tensor(buf10, (4, 4, 4), (144, 4, 1), 0)  # alias
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = reinterpret_tensor(buf10, (4, 4, 4), (144, 4, 1), 16)  # alias
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = reinterpret_tensor(buf10, (4, 4, 4), (144, 4, 1), 32)  # alias
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = reinterpret_tensor(buf10, (4, 4, 4), (144, 4, 1), 48)  # alias
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf10, (4, 4, 4), (144, 4, 1), 80)  # alias
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf10, (4, 4, 4), (144, 4, 1), 96)  # alias
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf10, (4, 4, 4), (144, 4, 1), 112)  # alias
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = reinterpret_tensor(buf10, (4, 4, 4), (144, 4, 1), 64)  # alias
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf10, (4, 4, 4), (144, 4, 1), 128)  # alias
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, sum_1, add, theta, pow_2, pow_3, sub, costh, mul, add_1, mul_1, sub_1, mul_2, sinth, mul_3, sub_2, mul_4, sub_3, mul_5, mul_6, add_2, mul_7, sub_4, mul_8, mul_9, add_3, pow_4, pow_5, sub_5, mul_10, add_4, mul_11, sub_6, mul_12, mul_13, sub_7, mul_14, sub_8, mul_15, mul_16, sub_9, mul_17, sub_10, mul_18, mul_19, add_5, pow_6, pow_7, sub_11, mul_20, add_6], Original ATen: [aten.pow, aten.sum, aten.add, aten.sqrt, aten.rsub, aten.cos, aten.mul, aten.sin, aten.sub]
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_cos_mul_pow_rsub_sin_sqrt_sub_sum_1.run(buf0, arg0_1, buf1, buf2, buf3, buf4, buf6, buf7, buf8, buf5, buf9, 64, grid=grid(64), stream=stream0)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf10, (64, 3, 3), (9, 3, 1), 0), )
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:15:54.681000 3047743 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:15:54.690000 3047743 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/5y/c5yad4q5364w57kdsqld772dtlmfnmbj7a4wmi4triovt77my4dk.py
