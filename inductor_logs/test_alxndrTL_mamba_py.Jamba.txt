V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] Output code: 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # AOT ID: ['2_forward']
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import torch
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import math
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import random
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import os
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import tempfile
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from math import inf, nan
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch import device, empty_strided
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     grid,
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     split_scan_grid,
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     grid_combo_kernels,
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     start_graph,
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     end_graph,
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     cooperative_reduction_grid,
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] aten = torch.ops.aten
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] async_compile = AsyncCompile()
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/37/c37npq3cl6yjhvnh2wf4mw3mp6ejvlpwhqswwo6ildu42e3tx5np.py
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Topologically Sorted Source Nodes: [pow_1, mean, add, rsqrt, mul, output], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Source node to ATen node mapping:
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   add => add
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   mean => mean
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   mul => mul
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   output => mul_1
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   pow_1 => pow_1
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   rsqrt => rsqrt
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Graph fragment:
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_1, 2), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%pow_1, [-1], True), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, 4), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_1, %rsqrt), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %primals_2), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_poi_fused_add_mean_mul_pow_rsqrt_0 = async_compile.triton('triton_poi_fused_add_mean_mul_pow_rsqrt_0', '''
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     size_hints={'x': 64}, 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     filename=__file__,
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mean_mul_pow_rsqrt_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     min_elem_per_thread=0
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton.jit
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def triton_poi_fused_add_mean_mul_pow_rsqrt_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xnumel = 64
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xmask = xindex < xnumel
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x2 = xindex
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x1 = xindex // 4
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x0 = (xindex % 4)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp6 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp9 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp17 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp2 = tmp1 * tmp1
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp4 = tmp3 * tmp3
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp5 = tmp2 + tmp4
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp7 = tmp6 * tmp6
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp8 = tmp5 + tmp7
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp10 = tmp9 * tmp9
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp11 = tmp8 + tmp10
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp12 = 4.0
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp13 = tmp11 / tmp12
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp14 = tmp13 + tmp12
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp15 = libdevice.rsqrt(tmp14)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp16 = tmp0 * tmp15
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp18 = tmp16 * tmp17
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp18, xmask)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] ''', device_str='cuda')
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vh/cvh6cfwwr3preimj7qozxjfj4y4bq4l7jmzcekwrqcjwoc3ggowj.py
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.mul, aten.clone]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Source node to ATen node mapping:
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   attn_output => clone, mul_2
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Graph fragment:
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%permute_3, 1.0), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand,), kwargs = {memory_format: torch.contiguous_format})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_poi_fused_clone_mul_1 = async_compile.triton('triton_poi_fused_clone_mul_1', '''
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     filename=__file__,
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_mul_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     min_elem_per_thread=0
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton.jit
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def triton_poi_fused_clone_mul_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     ynumel = 16
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xnumel = 4
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     ymask = yindex < ynumel
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xmask = xindex < xnumel
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x2 = xindex
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     y0 = (yindex % 4)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     y1 = yindex // 4
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     y3 = yindex
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp1 = 1.0
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp2 = tmp0 * tmp1
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp2, xmask & ymask)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] ''', device_str='cuda')
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nk/cnkl74nz5qg7yewaptikyxoz5tl3l7okz5jqszrni4ys6wkrnb3d.py
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.ones, aten.tril, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Source node to ATen node mapping:
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   attn_output => add_1, amax, any_1, eq, exp, full_default, full_default_1, full_default_2, le, logical_and, logical_not, sub, sub_1, sum_1, where
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Graph fragment:
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([4, 4], True), kwargs = {dtype: torch.bool, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze, %unsqueeze_1), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%sub, 0), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %logical_and : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%le, %full_default), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -inf), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and, %full_default_2, %full_default_1), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_11, %where), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%add_1, [-1], True), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %amax), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%add_1, -inf), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %logical_not : [num_users=1] = call_function[target=torch.ops.aten.logical_not.default](args = (%eq,), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %any_1 : [num_users=1] = call_function[target=torch.ops.aten.any.dim](args = (%logical_not, -1, True), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_2 = async_compile.triton('triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_2', '''
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     size_hints={'x': 64}, 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     filename=__file__,
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     min_elem_per_thread=0
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton.jit
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_2(in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xnumel = 64
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xmask = xindex < xnumel
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x2 = xindex
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x0 = (xindex % 4)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x2), xmask, eviction_policy='evict_last')
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp10 = tl.load(in_ptr0 + (1 + 4*x2), xmask, eviction_policy='evict_last')
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp17 = tl.load(in_ptr0 + (2 + 4*x2), xmask, eviction_policy='evict_last')
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp24 = tl.load(in_ptr0 + (3 + 4*x2), xmask, eviction_policy='evict_last')
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp1 = (-1)*x0
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp2 = tl.full([1], 0, tl.int64)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp3 = tmp1 <= tmp2
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp4 = tl.full([1], True, tl.int1)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp5 = tmp3 & tmp4
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp6 = 0.0
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp7 = float("-inf")
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp8 = tl.where(tmp5, tmp6, tmp7)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp9 = tmp0 + tmp8
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp11 = 1 + ((-1)*x0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp12 = tmp11 <= tmp2
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp13 = tmp12 & tmp4
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp14 = tl.where(tmp13, tmp6, tmp7)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp15 = tmp10 + tmp14
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp16 = triton_helpers.maximum(tmp9, tmp15)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp18 = 2 + ((-1)*x0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp19 = tmp18 <= tmp2
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp20 = tmp19 & tmp4
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp21 = tl.where(tmp20, tmp6, tmp7)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp22 = tmp17 + tmp21
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp23 = triton_helpers.maximum(tmp16, tmp22)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp25 = 3 + ((-1)*x0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp26 = tmp25 <= tmp2
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp27 = tmp26 & tmp4
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp28 = tl.where(tmp27, tmp6, tmp7)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp29 = tmp24 + tmp28
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp30 = triton_helpers.maximum(tmp23, tmp29)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp31 = tmp9 - tmp30
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp32 = tl_math.exp(tmp31)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp33 = tmp15 - tmp30
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp34 = tl_math.exp(tmp33)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp35 = tmp32 + tmp34
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp36 = tmp22 - tmp30
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp37 = tl_math.exp(tmp36)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp38 = tmp35 + tmp37
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp39 = tmp29 - tmp30
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp40 = tl_math.exp(tmp39)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp41 = tmp38 + tmp40
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp42 = tmp9 == tmp7
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp43 = tmp42 == 0
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp44 = tmp43.to(tl.int64)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp45 = (tmp44 != 0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp46 = tmp15 == tmp7
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp47 = tmp46 == 0
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp48 = tmp47.to(tl.int64)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp49 = (tmp48 != 0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp50 = tmp45 | tmp49
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp51 = tmp22 == tmp7
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp52 = tmp51 == 0
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp53 = tmp52.to(tl.int64)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp54 = (tmp53 != 0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp55 = tmp50 | tmp54
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp56 = tmp29 == tmp7
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp57 = tmp56 == 0
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp58 = tmp57.to(tl.int64)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp59 = (tmp58 != 0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp60 = tmp55 | tmp59
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp30, xmask)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(out_ptr1 + (x2), tmp41, xmask)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(out_ptr2 + (x2), tmp60, xmask)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] ''', device_str='cuda')
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ec/cechcneqzunbx7o65ys3gj2wq34xytcveumyvrn5covwlgt2gy7t.py
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.ones, aten.tril, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Source node to ATen node mapping:
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   attn_output => add_1, div, exp, full_default, full_default_1, full_default_2, full_default_3, le, logical_and, logical_not_1, sub, sub_1, where, where_1
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Graph fragment:
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([4, 4], True), kwargs = {dtype: torch.bool, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze, %unsqueeze_1), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%sub, 0), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %logical_and : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%le, %full_default), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -inf), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and, %full_default_2, %full_default_1), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_11, %where), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %amax), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %logical_not_1 : [num_users=1] = call_function[target=torch.ops.aten.logical_not.default](args = (%any_1,), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %full_default_3 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([4, 4, 4, 4], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %where_1 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%logical_not_1, %full_default_3, %div), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_3 = async_compile.triton('triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_3', '''
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     size_hints={'x': 256}, 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     filename=__file__,
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i1', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     min_elem_per_thread=0
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton.jit
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_3(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xnumel = 256
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xmask = xindex < xnumel
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x3 = xindex // 4
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x4 = xindex
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x0 = (xindex % 4)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask, eviction_policy='evict_last').to(tl.int1)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp2 = tl.load(in_out_ptr0 + (x4), xmask)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp12 = tl.load(in_ptr1 + (x3), xmask, eviction_policy='evict_last')
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp15 = tl.load(in_ptr2 + (x3), xmask, eviction_policy='evict_last')
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp1 = tmp0 == 0
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp3 = x0 + ((-1)*x1)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp4 = tl.full([1], 0, tl.int64)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp5 = tmp3 <= tmp4
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp6 = tl.full([1], True, tl.int1)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp7 = tmp5 & tmp6
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp8 = 0.0
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp9 = float("-inf")
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp10 = tl.where(tmp7, tmp8, tmp9)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp11 = tmp2 + tmp10
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp13 = tmp11 - tmp12
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp14 = tl_math.exp(tmp13)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp16 = tmp14 / tmp15
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp17 = tl.where(tmp1, tmp8, tmp16)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(in_out_ptr0 + (x4), tmp17, xmask)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] ''', device_str='cuda')
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/an/cany2jbw2jdajpiihiclpvumcasljofi46nmewpzgmcfjpkuy5qh.py
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.clone]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Source node to ATen node mapping:
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   attn_output => clone_2
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Graph fragment:
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %clone_2 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_3,), kwargs = {memory_format: torch.contiguous_format})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_poi_fused_clone_4 = async_compile.triton('triton_poi_fused_clone_4', '''
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     filename=__file__,
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     min_elem_per_thread=0
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton.jit
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def triton_poi_fused_clone_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     ynumel = 16
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xnumel = 4
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     ymask = yindex < ynumel
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xmask = xindex < xnumel
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x2 = xindex
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     y0 = (yindex % 4)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     y1 = yindex // 4
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     y3 = yindex
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp0, xmask & ymask)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] ''', device_str='cuda')
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/z2/cz2mwn2hidmpauodbuq7nfkemjwa5lzw23if74vok5kgkgtfxaim.py
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.add]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Source node to ATen node mapping:
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   x => add_2
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Graph fragment:
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %add_2 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %view_17), kwargs = {})
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_poi_fused_add_5 = async_compile.triton('triton_poi_fused_add_5', '''
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     size_hints={'x': 64}, 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     filename=__file__,
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     min_elem_per_thread=0
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton.jit
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def triton_poi_fused_add_5(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xnumel = 64
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xmask = xindex < xnumel
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x0 = xindex
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp1 = tl.load(in_out_ptr0 + (x0), xmask)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp2, xmask)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] ''', device_str='cuda')
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] async_compile.wait(globals())
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] del async_compile
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def call(args):
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7 = args
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     args.clear()
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(primals_3, (4, 4), (4, 1))
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(primals_5, (4, 4), (4, 1))
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(primals_6, (4, 4), (4, 1))
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         torch.cuda.set_device(0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, mean, add, rsqrt, mul, output], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused_add_mean_mul_pow_rsqrt_0.run(primals_1, primals_2, buf0, 64, grid=grid(64), stream=stream0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         del primals_2
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf1 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [queries], Original ATen: [aten.mm]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf0, (16, 4), (4, 1), 0), reinterpret_tensor(primals_3, (4, 4), (1, 4), 0), out=buf1)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf2 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [keys], Original ATen: [aten.mm]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf0, (16, 4), (4, 1), 0), reinterpret_tensor(primals_4, (4, 4), (1, 4), 0), out=buf2)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf3 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [values], Original ATen: [aten.mm]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf0, (16, 4), (4, 1), 0), reinterpret_tensor(primals_5, (4, 4), (1, 4), 0), out=buf3)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 1), torch.float32)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.mul, aten.clone]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused_clone_mul_1.run(buf1, buf4, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf5 = reinterpret_tensor(buf1, (4, 4, 1, 4), (16, 4, 4, 1), 0); del buf1  # reuse
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.mul, aten.clone]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused_clone_mul_1.run(buf2, buf5, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf6 = empty_strided_cuda((16, 4, 4), (16, 4, 1), torch.float32)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.bmm]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf4, (16, 4, 1), (4, 1, 0), 0), reinterpret_tensor(buf5, (16, 1, 4), (4, 0, 1), 0), out=buf6)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf7 = reinterpret_tensor(buf2, (4, 4, 4, 1), (16, 4, 1, 64), 0); del buf2  # reuse
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 64), torch.float32)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf9 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 64), torch.bool)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.ones, aten.tril, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_2.run(buf6, buf7, buf8, buf9, 64, grid=grid(64), stream=stream0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf10 = reinterpret_tensor(buf6, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf6  # reuse
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.ones, aten.tril, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_3.run(buf10, buf9, buf7, buf8, 256, grid=grid(256), stream=stream0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         del buf9
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf11 = reinterpret_tensor(buf8, (4, 4, 4, 1), (16, 4, 1, 1), 0); del buf8  # reuse
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.clone]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused_clone_4.run(buf3, buf11, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf12 = reinterpret_tensor(buf3, (16, 4, 1), (4, 1, 1), 0); del buf3  # reuse
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.bmm]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf10, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf11, (16, 4, 1), (4, 1, 0), 0), out=buf12)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf13 = reinterpret_tensor(buf7, (4, 4, 4, 1), (16, 4, 1, 1), 0); del buf7  # reuse
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [attn_output_1], Original ATen: [aten.clone]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused_clone_4.run(buf12, buf13, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf14 = reinterpret_tensor(buf12, (16, 4), (4, 1), 0); del buf12  # reuse
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [attn_output_3], Original ATen: [aten.mm]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf13, (16, 4), (4, 1), 0), reinterpret_tensor(primals_6, (4, 4), (1, 4), 0), out=buf14)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf15 = reinterpret_tensor(buf14, (4, 4, 4), (16, 4, 1), 0); del buf14  # reuse
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.add]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused_add_5.run(buf15, primals_1, 64, grid=grid(64), stream=stream0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf16 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [pow_2, mean_1, add_2, rsqrt_1, mul_2, output_1], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused_add_mean_mul_pow_rsqrt_0.run(buf15, primals_7, buf16, 64, grid=grid(64), stream=stream0)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     return (buf16, buf15, primals_1, primals_7, reinterpret_tensor(buf0, (16, 4), (4, 1), 0), buf10, reinterpret_tensor(buf13, (16, 4), (4, 1), 0), buf15, primals_6, reinterpret_tensor(buf11, (16, 1, 4), (4, 1, 1), 0), reinterpret_tensor(buf4, (16, 1, 4), (4, 1, 1), 0), reinterpret_tensor(buf5, (16, 4, 1), (4, 1, 4), 0), primals_5, primals_4, primals_3, )
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     primals_3 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     primals_5 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     primals_6 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7])
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] if __name__ == "__main__":
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:55:43.477000 869759 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 14:55:43.487000 869759 site-packages/torch/_inductor/graph.py:2053] [1/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/o4/co44kqnyau2x4e2zwfvhlnqrsfvwmoq4cfxicqyifl42ipwwjwnz.py
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] Output code: 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # AOT ID: ['2_forward']
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import torch
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import math
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import random
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import os
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import tempfile
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from math import inf, nan
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch import device, empty_strided
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     grid,
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     split_scan_grid,
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     grid_combo_kernels,
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     start_graph,
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     end_graph,
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     cooperative_reduction_grid,
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] aten = torch.ops.aten
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] async_compile = AsyncCompile()
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # kernel path: inductor_cache/37/c37npq3cl6yjhvnh2wf4mw3mp6ejvlpwhqswwo6ildu42e3tx5np.py
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Topologically Sorted Source Nodes: [pow_1, mean, add, rsqrt, mul, output], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Source node to ATen node mapping:
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   add => add
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   mean => mean
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   mul => mul
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   output => mul_1
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   pow_1 => pow_1
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   rsqrt => rsqrt
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Graph fragment:
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_1, 2), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%pow_1, [-1], True), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, 4), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_1, %rsqrt), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %primals_2), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_poi_fused_add_mean_mul_pow_rsqrt_0 = async_compile.triton('triton_poi_fused_add_mean_mul_pow_rsqrt_0', '''
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     size_hints={'x': 64}, 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     filename=__file__,
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mean_mul_pow_rsqrt_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     min_elem_per_thread=0
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton.jit
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def triton_poi_fused_add_mean_mul_pow_rsqrt_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xnumel = 64
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xmask = xindex < xnumel
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x2 = xindex
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x1 = xindex // 4
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x0 = (xindex % 4)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp6 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp9 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp17 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp2 = tmp1 * tmp1
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp4 = tmp3 * tmp3
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp5 = tmp2 + tmp4
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp7 = tmp6 * tmp6
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp8 = tmp5 + tmp7
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp10 = tmp9 * tmp9
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp11 = tmp8 + tmp10
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp12 = 4.0
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp13 = tmp11 / tmp12
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp14 = tmp13 + tmp12
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp15 = libdevice.rsqrt(tmp14)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp16 = tmp0 * tmp15
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp18 = tmp16 * tmp17
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp18, xmask)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] ''', device_str='cuda')
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # kernel path: inductor_cache/vh/cvh6cfwwr3preimj7qozxjfj4y4bq4l7jmzcekwrqcjwoc3ggowj.py
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.mul, aten.clone]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Source node to ATen node mapping:
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   attn_output => clone, mul_2
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Graph fragment:
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%permute_3, 1.0), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand,), kwargs = {memory_format: torch.contiguous_format})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_poi_fused_clone_mul_1 = async_compile.triton('triton_poi_fused_clone_mul_1', '''
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     filename=__file__,
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_mul_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     min_elem_per_thread=0
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton.jit
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def triton_poi_fused_clone_mul_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     ynumel = 16
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xnumel = 4
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     ymask = yindex < ynumel
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xmask = xindex < xnumel
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x2 = xindex
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     y0 = (yindex % 4)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     y1 = yindex // 4
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     y3 = yindex
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp1 = 1.0
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp2 = tmp0 * tmp1
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp2, xmask & ymask)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] ''', device_str='cuda')
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # kernel path: inductor_cache/nk/cnkl74nz5qg7yewaptikyxoz5tl3l7okz5jqszrni4ys6wkrnb3d.py
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.ones, aten.tril, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Source node to ATen node mapping:
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   attn_output => add_1, amax, any_1, eq, exp, full_default, full_default_1, full_default_2, le, logical_and, logical_not, sub, sub_1, sum_1, where
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Graph fragment:
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([4, 4], True), kwargs = {dtype: torch.bool, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze, %unsqueeze_1), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%sub, 0), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %logical_and : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%le, %full_default), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -inf), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and, %full_default_2, %full_default_1), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_11, %where), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%add_1, [-1], True), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %amax), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%add_1, -inf), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %logical_not : [num_users=1] = call_function[target=torch.ops.aten.logical_not.default](args = (%eq,), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %any_1 : [num_users=1] = call_function[target=torch.ops.aten.any.dim](args = (%logical_not, -1, True), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_2 = async_compile.triton('triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_2', '''
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     size_hints={'x': 64}, 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     filename=__file__,
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     min_elem_per_thread=0
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton.jit
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_2(in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xnumel = 64
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xmask = xindex < xnumel
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x2 = xindex
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x0 = (xindex % 4)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x2), xmask, eviction_policy='evict_last')
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp10 = tl.load(in_ptr0 + (1 + 4*x2), xmask, eviction_policy='evict_last')
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp17 = tl.load(in_ptr0 + (2 + 4*x2), xmask, eviction_policy='evict_last')
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp24 = tl.load(in_ptr0 + (3 + 4*x2), xmask, eviction_policy='evict_last')
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp1 = (-1)*x0
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp2 = tl.full([1], 0, tl.int64)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp3 = tmp1 <= tmp2
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp4 = tl.full([1], True, tl.int1)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp5 = tmp3 & tmp4
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp6 = 0.0
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp7 = float("-inf")
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp8 = tl.where(tmp5, tmp6, tmp7)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp9 = tmp0 + tmp8
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp11 = 1 + ((-1)*x0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp12 = tmp11 <= tmp2
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp13 = tmp12 & tmp4
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp14 = tl.where(tmp13, tmp6, tmp7)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp15 = tmp10 + tmp14
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp16 = triton_helpers.maximum(tmp9, tmp15)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp18 = 2 + ((-1)*x0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp19 = tmp18 <= tmp2
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp20 = tmp19 & tmp4
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp21 = tl.where(tmp20, tmp6, tmp7)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp22 = tmp17 + tmp21
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp23 = triton_helpers.maximum(tmp16, tmp22)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp25 = 3 + ((-1)*x0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp26 = tmp25 <= tmp2
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp27 = tmp26 & tmp4
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp28 = tl.where(tmp27, tmp6, tmp7)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp29 = tmp24 + tmp28
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp30 = triton_helpers.maximum(tmp23, tmp29)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp31 = tmp9 - tmp30
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp32 = tl_math.exp(tmp31)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp33 = tmp15 - tmp30
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp34 = tl_math.exp(tmp33)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp35 = tmp32 + tmp34
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp36 = tmp22 - tmp30
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp37 = tl_math.exp(tmp36)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp38 = tmp35 + tmp37
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp39 = tmp29 - tmp30
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp40 = tl_math.exp(tmp39)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp41 = tmp38 + tmp40
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp42 = tmp9 == tmp7
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp43 = tmp42 == 0
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp44 = tmp43.to(tl.int64)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp45 = (tmp44 != 0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp46 = tmp15 == tmp7
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp47 = tmp46 == 0
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp48 = tmp47.to(tl.int64)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp49 = (tmp48 != 0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp50 = tmp45 | tmp49
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp51 = tmp22 == tmp7
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp52 = tmp51 == 0
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp53 = tmp52.to(tl.int64)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp54 = (tmp53 != 0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp55 = tmp50 | tmp54
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp56 = tmp29 == tmp7
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp57 = tmp56 == 0
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp58 = tmp57.to(tl.int64)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp59 = (tmp58 != 0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp60 = tmp55 | tmp59
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp30, xmask)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(out_ptr1 + (x2), tmp41, xmask)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(out_ptr2 + (x2), tmp60, xmask)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] ''', device_str='cuda')
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # kernel path: inductor_cache/ec/cechcneqzunbx7o65ys3gj2wq34xytcveumyvrn5covwlgt2gy7t.py
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.ones, aten.tril, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Source node to ATen node mapping:
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   attn_output => add_1, div, exp, full_default, full_default_1, full_default_2, full_default_3, le, logical_and, logical_not_1, sub, sub_1, where, where_1
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Graph fragment:
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([4, 4], True), kwargs = {dtype: torch.bool, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze, %unsqueeze_1), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%sub, 0), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %logical_and : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%le, %full_default), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -inf), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and, %full_default_2, %full_default_1), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_11, %where), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %amax), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %logical_not_1 : [num_users=1] = call_function[target=torch.ops.aten.logical_not.default](args = (%any_1,), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %full_default_3 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([4, 4, 4, 4], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %where_1 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%logical_not_1, %full_default_3, %div), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_3 = async_compile.triton('triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_3', '''
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     size_hints={'x': 256}, 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     filename=__file__,
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i1', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     min_elem_per_thread=0
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton.jit
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_3(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xnumel = 256
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xmask = xindex < xnumel
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x3 = xindex // 4
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x4 = xindex
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x0 = (xindex % 4)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask, eviction_policy='evict_last').to(tl.int1)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp2 = tl.load(in_out_ptr0 + (x4), xmask)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp12 = tl.load(in_ptr1 + (x3), xmask, eviction_policy='evict_last')
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp15 = tl.load(in_ptr2 + (x3), xmask, eviction_policy='evict_last')
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp1 = tmp0 == 0
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp3 = x0 + ((-1)*x1)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp4 = tl.full([1], 0, tl.int64)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp5 = tmp3 <= tmp4
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp6 = tl.full([1], True, tl.int1)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp7 = tmp5 & tmp6
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp8 = 0.0
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp9 = float("-inf")
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp10 = tl.where(tmp7, tmp8, tmp9)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp11 = tmp2 + tmp10
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp13 = tmp11 - tmp12
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp14 = tl_math.exp(tmp13)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp16 = tmp14 / tmp15
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp17 = tl.where(tmp1, tmp8, tmp16)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(in_out_ptr0 + (x4), tmp17, xmask)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] ''', device_str='cuda')
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # kernel path: inductor_cache/an/cany2jbw2jdajpiihiclpvumcasljofi46nmewpzgmcfjpkuy5qh.py
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.clone]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Source node to ATen node mapping:
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   attn_output => clone_2
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Graph fragment:
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %clone_2 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_3,), kwargs = {memory_format: torch.contiguous_format})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_poi_fused_clone_4 = async_compile.triton('triton_poi_fused_clone_4', '''
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     filename=__file__,
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     min_elem_per_thread=0
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton.jit
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def triton_poi_fused_clone_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     ynumel = 16
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xnumel = 4
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     ymask = yindex < ynumel
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xmask = xindex < xnumel
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x2 = xindex
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     y0 = (yindex % 4)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     y1 = yindex // 4
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     y3 = yindex
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp0, xmask & ymask)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] ''', device_str='cuda')
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # kernel path: inductor_cache/z2/cz2mwn2hidmpauodbuq7nfkemjwa5lzw23if74vok5kgkgtfxaim.py
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.add]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Source node to ATen node mapping:
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   x => add_2
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Graph fragment:
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %add_2 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %view_17), kwargs = {})
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_poi_fused_add_5 = async_compile.triton('triton_poi_fused_add_5', '''
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     size_hints={'x': 64}, 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     filename=__file__,
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     min_elem_per_thread=0
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton.jit
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def triton_poi_fused_add_5(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xnumel = 64
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xmask = xindex < xnumel
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x0 = xindex
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp1 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp2, xmask)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] ''', device_str='cuda')
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] async_compile.wait(globals())
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] del async_compile
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def call(args):
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7 = args
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     args.clear()
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(primals_3, (4, 4), (4, 1))
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(primals_5, (4, 4), (4, 1))
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(primals_6, (4, 4), (4, 1))
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, mean, add, rsqrt, mul, output], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused_add_mean_mul_pow_rsqrt_0.run(primals_1, primals_2, buf0, 64, grid=grid(64), stream=stream0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         del primals_2
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf1 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [queries], Original ATen: [aten.mm]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf0, (16, 4), (4, 1), 0), reinterpret_tensor(primals_3, (4, 4), (1, 4), 0), out=buf1)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf2 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [keys], Original ATen: [aten.mm]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf0, (16, 4), (4, 1), 0), reinterpret_tensor(primals_4, (4, 4), (1, 4), 0), out=buf2)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf3 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [values], Original ATen: [aten.mm]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf0, (16, 4), (4, 1), 0), reinterpret_tensor(primals_5, (4, 4), (1, 4), 0), out=buf3)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 1), torch.float32)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.mul, aten.clone]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused_clone_mul_1.run(buf1, buf4, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf5 = reinterpret_tensor(buf1, (4, 4, 1, 4), (16, 4, 4, 1), 0); del buf1  # reuse
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.mul, aten.clone]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused_clone_mul_1.run(buf2, buf5, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf6 = empty_strided_cuda((16, 4, 4), (16, 4, 1), torch.float32)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.bmm]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf4, (16, 4, 1), (4, 1, 0), 0), reinterpret_tensor(buf5, (16, 1, 4), (4, 0, 1), 0), out=buf6)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf7 = reinterpret_tensor(buf2, (4, 4, 4, 1), (16, 4, 1, 64), 0); del buf2  # reuse
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 64), torch.float32)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf9 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 64), torch.bool)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.ones, aten.tril, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_2.run(buf6, buf7, buf8, buf9, 64, grid=grid(64), stream=stream0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf10 = reinterpret_tensor(buf6, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf6  # reuse
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.ones, aten.tril, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused__safe_softmax_add_ones_scalar_tensor_tril_where_3.run(buf10, buf9, buf7, buf8, 256, grid=grid(256), stream=stream0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         del buf9
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf11 = reinterpret_tensor(buf8, (4, 4, 4, 1), (16, 4, 1, 1), 0); del buf8  # reuse
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.clone]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused_clone_4.run(buf3, buf11, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf12 = reinterpret_tensor(buf3, (16, 4, 1), (4, 1, 1), 0); del buf3  # reuse
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [attn_output], Original ATen: [aten.bmm]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf10, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf11, (16, 4, 1), (4, 1, 0), 0), out=buf12)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf13 = reinterpret_tensor(buf7, (4, 4, 4, 1), (16, 4, 1, 1), 0); del buf7  # reuse
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [attn_output_1], Original ATen: [aten.clone]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused_clone_4.run(buf12, buf13, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf14 = reinterpret_tensor(buf12, (16, 4), (4, 1), 0); del buf12  # reuse
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [attn_output_3], Original ATen: [aten.mm]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf13, (16, 4), (4, 1), 0), reinterpret_tensor(primals_6, (4, 4), (1, 4), 0), out=buf14)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf15 = reinterpret_tensor(buf14, (4, 4, 4), (16, 4, 1), 0); del buf14  # reuse
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.add]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused_add_5.run(buf15, primals_1, 64, grid=grid(64), stream=stream0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf16 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [pow_2, mean_1, add_2, rsqrt_1, mul_2, output_1], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused_add_mean_mul_pow_rsqrt_0.run(buf15, primals_7, buf16, 64, grid=grid(64), stream=stream0)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     return (buf16, buf15, primals_1, primals_7, reinterpret_tensor(buf0, (16, 4), (4, 1), 0), buf10, reinterpret_tensor(buf13, (16, 4), (4, 1), 0), buf15, primals_6, reinterpret_tensor(buf11, (16, 1, 4), (4, 1, 1), 0), reinterpret_tensor(buf4, (16, 1, 4), (4, 1, 1), 0), reinterpret_tensor(buf5, (16, 4, 1), (4, 1, 4), 0), primals_5, primals_4, primals_3, )
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     primals_3 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     primals_5 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     primals_6 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7])
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] if __name__ == "__main__":
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:44:50.998000 2139760 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 19:44:51.008000 2139760 site-packages/torch/_inductor/graph.py:2053] [1/0_1] [__output_code] Output code written to: inductor_cache/7g/c7gmjuurog5gto6xzhcul7fdnhndp5i4hyzdtyebjjc56nnrukdq.py
