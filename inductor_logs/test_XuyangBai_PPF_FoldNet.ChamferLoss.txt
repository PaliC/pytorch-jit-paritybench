V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add, mul, P, min_1, min_2, loss_1, loss_2, add_1], Original ATen: [aten.add, aten.mul, aten.sub, aten.min, aten.sum]
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   P => sub
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_1 => sum_1
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_2 => sum_2
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   min_1 => min_1
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   min_2 => min_2
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%permute_4, %expand_1), kwargs = {})
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%bmm_2, 2), kwargs = {})
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %mul), kwargs = {})
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %min_1 : [num_users=1] = call_function[target=torch.ops.aten.min.dim](args = (%sub, 1), kwargs = {})
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %min_2 : [num_users=1] = call_function[target=torch.ops.aten.min.dim](args = (%sub, 2), kwargs = {})
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%getitem,), kwargs = {})
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%getitem_2,), kwargs = {})
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, %sum_2), kwargs = {})
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_min_mul_sub_sum_0 = async_compile.triton('triton_per_fused_add_min_mul_sub_sum_0', '''
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 16},
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_min_mul_sub_sum_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 18, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_min_mul_sub_sum_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex // 4
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 4)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*r1), None, eviction_policy='evict_last')
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (5*r0 + 16*r1), None, eviction_policy='evict_last')
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (r0 + 16*r1), None)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (5 + 16*r1), None, eviction_policy='evict_last')
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (4 + r0 + 16*r1), None)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (10 + 16*r1), None, eviction_policy='evict_last')
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr2 + (8 + r0 + 16*r1), None)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (15 + 16*r1), None, eviction_policy='evict_last')
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr2 + (12 + r0 + 16*r1), None)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (5*r0 + 16*r1), None, eviction_policy='evict_last')
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr1 + (16*r1), None, eviction_policy='evict_last')
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr2 + (4*r2), None, eviction_policy='evict_last')
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr1 + (5 + 16*r1), None, eviction_policy='evict_last')
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.load(in_ptr2 + (1 + 4*r2), None, eviction_policy='evict_last')
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.load(in_ptr1 + (10 + 16*r1), None, eviction_policy='evict_last')
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.load(in_ptr2 + (2 + 4*r2), None, eviction_policy='evict_last')
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.load(in_ptr1 + (15 + 16*r1), None, eviction_policy='evict_last')
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.load(in_ptr2 + (3 + 4*r2), None, eviction_policy='evict_last')
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 2.0
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 - tmp5
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 + tmp1
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp4
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 - tmp10
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.minimum(tmp6, tmp11)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 + tmp1
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 * tmp4
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 - tmp16
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = triton_helpers.minimum(tmp12, tmp17)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp1
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 * tmp4
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 - tmp22
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = triton_helpers.minimum(tmp18, tmp23)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.broadcast_to(tmp24, [XBLOCK, RBLOCK])
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.sum(tmp25, 1)[:, None]
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 * tmp4
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 - tmp32
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp28 + tmp34
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 * tmp4
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp35 - tmp37
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = triton_helpers.minimum(tmp33, tmp38)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp28 + tmp40
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 * tmp4
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp41 - tmp43
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = triton_helpers.minimum(tmp39, tmp44)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp28 + tmp46
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp48 * tmp4
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp47 - tmp49
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = triton_helpers.minimum(tmp45, tmp50)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.broadcast_to(tmp51, [XBLOCK, RBLOCK])
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.sum(tmp52, 1)[:, None]
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp27 + tmp54
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp55, None)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4), (16, 4, 1))
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4), (16, 4, 1))
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xx], Original ATen: [aten.bmm]
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(arg0_1, reinterpret_tensor(arg0_1, (4, 4, 4), (16, 1, 4), 0), out=buf0)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [yy], Original ATen: [aten.bmm]
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(arg1_1, reinterpret_tensor(arg1_1, (4, 4, 4), (16, 1, 4), 0), out=buf1)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [zz], Original ATen: [aten.bmm]
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(arg0_1, reinterpret_tensor(arg1_1, (4, 4, 4), (16, 1, 4), 0), out=buf2)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((), (), torch.float32)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf5; del buf5  # reuse
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add, mul, P, min_1, min_2, loss_1, loss_2, add_1], Original ATen: [aten.add, aten.mul, aten.sub, aten.min, aten.sum]
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_min_mul_sub_sum_0.run(buf7, buf0, buf1, buf2, 1, 16, grid=grid(1), stream=stream0)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, )
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:35:35.900000 165904 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:35:35.904000 165904 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/tp/ctpjv6uechigqmz6eztsgfjrhzubvh3u52hzqiivwd4thl7hxyze.py
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add, mul, P, min_1, min_2, loss_1, loss_2, add_1], Original ATen: [aten.add, aten.mul, aten.sub, aten.min, aten.sum]
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   P => sub
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_1 => sum_1
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_2 => sum_2
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   min_1 => min_1
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   min_2 => min_2
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%permute_4, %expand_1), kwargs = {})
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%bmm_2, 2), kwargs = {})
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %mul), kwargs = {})
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %min_1 : [num_users=1] = call_function[target=torch.ops.aten.min.dim](args = (%sub, 1), kwargs = {})
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %min_2 : [num_users=1] = call_function[target=torch.ops.aten.min.dim](args = (%sub, 2), kwargs = {})
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%getitem,), kwargs = {})
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%getitem_2,), kwargs = {})
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, %sum_2), kwargs = {})
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_min_mul_sub_sum_0 = async_compile.triton('triton_per_fused_add_min_mul_sub_sum_0', '''
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 16},
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_min_mul_sub_sum_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 18, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_min_mul_sub_sum_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex // 4
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 4)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*r1), None, eviction_policy='evict_last')
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (5*r0 + 16*r1), None, eviction_policy='evict_last')
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (r0 + 16*r1), None)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (5 + 16*r1), None, eviction_policy='evict_last')
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (4 + r0 + 16*r1), None)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (10 + 16*r1), None, eviction_policy='evict_last')
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr2 + (8 + r0 + 16*r1), None)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (15 + 16*r1), None, eviction_policy='evict_last')
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr2 + (12 + r0 + 16*r1), None)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (5*r0 + 16*r1), None, eviction_policy='evict_last')
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr1 + (16*r1), None, eviction_policy='evict_last')
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr2 + (4*r2), None, eviction_policy='evict_last')
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr1 + (5 + 16*r1), None, eviction_policy='evict_last')
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.load(in_ptr2 + (1 + 4*r2), None, eviction_policy='evict_last')
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.load(in_ptr1 + (10 + 16*r1), None, eviction_policy='evict_last')
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.load(in_ptr2 + (2 + 4*r2), None, eviction_policy='evict_last')
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.load(in_ptr1 + (15 + 16*r1), None, eviction_policy='evict_last')
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.load(in_ptr2 + (3 + 4*r2), None, eviction_policy='evict_last')
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 2.0
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 - tmp5
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 + tmp1
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp4
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 - tmp10
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.minimum(tmp6, tmp11)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 + tmp1
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 * tmp4
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 - tmp16
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = triton_helpers.minimum(tmp12, tmp17)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp1
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 * tmp4
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 - tmp22
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = triton_helpers.minimum(tmp18, tmp23)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.broadcast_to(tmp24, [XBLOCK, RBLOCK])
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.sum(tmp25, 1)[:, None]
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 * tmp4
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 - tmp32
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp28 + tmp34
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 * tmp4
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp35 - tmp37
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = triton_helpers.minimum(tmp33, tmp38)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp28 + tmp40
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 * tmp4
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp41 - tmp43
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = triton_helpers.minimum(tmp39, tmp44)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp28 + tmp46
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp48 * tmp4
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp47 - tmp49
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = triton_helpers.minimum(tmp45, tmp50)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.broadcast_to(tmp51, [XBLOCK, RBLOCK])
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.sum(tmp52, 1)[:, None]
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp27 + tmp54
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp55, None)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4), (16, 4, 1))
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4), (16, 4, 1))
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xx], Original ATen: [aten.bmm]
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(arg0_1, reinterpret_tensor(arg0_1, (4, 4, 4), (16, 1, 4), 0), out=buf0)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [yy], Original ATen: [aten.bmm]
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(arg1_1, reinterpret_tensor(arg1_1, (4, 4, 4), (16, 1, 4), 0), out=buf1)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [zz], Original ATen: [aten.bmm]
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(arg0_1, reinterpret_tensor(arg1_1, (4, 4, 4), (16, 1, 4), 0), out=buf2)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((), (), torch.float32)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf5; del buf5  # reuse
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add, mul, P, min_1, min_2, loss_1, loss_2, add_1], Original ATen: [aten.add, aten.mul, aten.sub, aten.min, aten.sum]
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_min_mul_sub_sum_0.run(buf7, buf0, buf1, buf2, 1, 16, grid=grid(1), stream=stream0)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, )
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:24:20.740000 1535867 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:24:20.743000 1535867 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/wb/cwbrw56lxcviqkktv76ljlh6ozvzqoimpnvra3zva5qttv7gx7g2.py
