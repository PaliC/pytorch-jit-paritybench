V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_forward']
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/we/cwewk4pfjttygn6kdg54flsy47nbcruyjsffne44plaragp3xoaj.py
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_weight_norm], Original ATen: [aten._weight_norm_interface]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _weight_norm => div, mul, pow_1, pow_2, sum_1
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_2, 2), kwargs = {})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1, 2], True), kwargs = {})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 0.5), kwargs = {})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_1, %pow_2), kwargs = {})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_2, %div), kwargs = {})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__weight_norm_interface_0 = async_compile.triton('triton_per_fused__weight_norm_interface_0', '''
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 8},
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__weight_norm_interface_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__weight_norm_interface_0(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 8
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 8
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 8*x0), xmask, other=0.0)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(xmask, tmp2, 0)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp4, 1)[:, None]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 * tmp8
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp6, xmask)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r1 + 8*x0), tmp9, xmask)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ha/chanmembdyld3ah5rj3nkvimranklvyvdcayk4eayravrhh5lion.py
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten.clone, aten.relu]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => clone
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => relu
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%slice_3,), kwargs = {memory_format: torch.contiguous_format})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%clone,), kwargs = {})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_relu_1 = async_compile.triton('triton_poi_fused_clone_relu_1', '''
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_relu_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_relu_1(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 4
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 5*x3), xmask)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp4, xmask)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rr/crroqo27ggm2xbiufrk7b7ngg7vddr74w673finte2rsshb7aee7.py
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_6, input_7, add, input_9], Original ATen: [aten.clone, aten.relu, aten.add, aten.threshold_backward]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => clone_2
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => relu_1
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => relu_2
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_2 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%slice_6,), kwargs = {memory_format: torch.contiguous_format})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%clone_2,), kwargs = {})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%relu_1, %primals_4), kwargs = {})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_2 : [num_users=3] = call_function[target=torch.ops.aten.relu.default](args = (%add,), kwargs = {})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_4 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_1, 0), kwargs = {})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clone_relu_threshold_backward_2 = async_compile.triton('triton_poi_fused_add_clone_relu_threshold_backward_2', '''
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clone_relu_threshold_backward_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clone_relu_threshold_backward_2(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 4
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 5*x3), xmask)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x4), xmask)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp3, tmp6)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 0.0
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp4 <= tmp8
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp7, xmask)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x4), tmp9, xmask)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gj/cgjy4frfqusqqqz7azo55wyzm7wmrksiqwgvzih5s4aruvlvgfo2.py
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten.clone, aten.relu]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => clone_4
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => relu_3
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_4 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%slice_9,), kwargs = {memory_format: torch.contiguous_format})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_3 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%clone_4,), kwargs = {})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_relu_3 = async_compile.triton('triton_poi_fused_clone_relu_3', '''
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_relu_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_relu_3(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 4
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 6*x3), xmask)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp4, xmask)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qe/cqeuxaxtazvem6fh2tzac3fcaeds5m7rh67rfqgayuiy6t4d2fjv.py
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_15, input_16, add_1, input_18], Original ATen: [aten.clone, aten.relu, aten.add, aten.threshold_backward]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_15 => clone_6
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_16 => relu_4
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_18 => relu_5
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_6 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%slice_12,), kwargs = {memory_format: torch.contiguous_format})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%clone_6,), kwargs = {})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%relu_4, %relu_2), kwargs = {})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_5 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_1,), kwargs = {})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_5, 0), kwargs = {})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_1 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_4, 0), kwargs = {})
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clone_relu_threshold_backward_4 = async_compile.triton('triton_poi_fused_add_clone_relu_threshold_backward_4', '''
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'out_ptr2': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clone_relu_threshold_backward_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clone_relu_threshold_backward_4(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 4
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 6*x4), xmask)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x3), xmask)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp3, tmp6)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 0.0
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp4 <= tmp8
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 <= tmp8
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp7, xmask)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp9, xmask)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x3), tmp10, xmask)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13 = args
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 1, 1), (1, 1, 1))
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 2), (8, 2, 1))
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4, 4), (16, 4, 1))
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, 1, 1), (1, 1, 1))
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4, 2), (8, 2, 1))
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 1, 1), (1, 1, 1))
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, 4, 2), (8, 2, 1))
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, ), (1, ))
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, 1, 1), (1, 1, 1))
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, 4, 2), (8, 2, 1))
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 1, 1), (1, 4, 4), torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = reinterpret_tensor(buf0, (4, 1, 1), (1, 1, 1), 0); del buf0  # reuse
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 2), (8, 2, 1), torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm], Original ATen: [aten._weight_norm_interface]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__weight_norm_interface_0.run(buf1, primals_2, primals_1, buf2, 4, 8, grid=grid(4), stream=stream0)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(primals_4, buf2, stride=(1,), padding=(1,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 4, 5), (20, 5, 1))
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten.clone, aten.relu]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_relu_1.run(buf3, primals_3, buf4, 64, grid=grid(64), stream=stream0)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 1, 1), (1, 4, 4), torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf5, (4, 1, 1), (1, 1, 1), 0); del buf5  # reuse
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 2), (8, 2, 1), torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm_1], Original ATen: [aten._weight_norm_interface]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__weight_norm_interface_0.run(buf6, primals_6, primals_5, buf7, 4, 8, grid=grid(4), stream=stream0)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf4, buf7, stride=(1,), padding=(1,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 4, 5), (20, 5, 1))
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.bool)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_6, input_7, add, input_9], Original ATen: [aten.clone, aten.relu, aten.add, aten.threshold_backward]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clone_relu_threshold_backward_2.run(buf8, primals_7, primals_4, buf9, buf22, 64, grid=grid(64), stream=stream0)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 1, 1), (1, 4, 4), torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf10, (4, 1, 1), (1, 1, 1), 0); del buf10  # reuse
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 4, 2), (8, 2, 1), torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm_2], Original ATen: [aten._weight_norm_interface]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__weight_norm_interface_0.run(buf11, primals_9, primals_8, buf12, 4, 8, grid=grid(4), stream=stream0)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_10], Original ATen: [aten.convolution]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = extern_kernels.convolution(buf9, buf12, stride=(1,), padding=(2,), dilation=(2,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf13, (4, 4, 6), (24, 6, 1))
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten.clone, aten.relu]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_relu_3.run(buf13, primals_10, buf14, 64, grid=grid(64), stream=stream0)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 1, 1), (1, 4, 4), torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = reinterpret_tensor(buf15, (4, 1, 1), (1, 1, 1), 0); del buf15  # reuse
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 4, 2), (8, 2, 1), torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm_3], Original ATen: [aten._weight_norm_interface]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__weight_norm_interface_0.run(buf16, primals_12, primals_11, buf17, 4, 8, grid=grid(4), stream=stream0)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_14], Original ATen: [aten.convolution]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = extern_kernels.convolution(buf14, buf17, stride=(1,), padding=(2,), dilation=(2,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf18, (4, 4, 6), (24, 6, 1))
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.bool)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.bool)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_15, input_16, add_1, input_18], Original ATen: [aten.clone, aten.relu, aten.add, aten.threshold_backward]
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clone_relu_threshold_backward_4.run(buf18, primals_13, buf9, buf19, buf21, buf20, 64, grid=grid(64), stream=stream0)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf18
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf19, buf2, buf7, buf12, buf17, primals_1, primals_2, primals_4, primals_5, primals_6, primals_8, primals_9, primals_11, primals_12, buf1, buf2, buf4, buf6, buf7, buf9, buf11, buf12, buf14, buf16, buf17, buf20, buf21, buf22, )
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 2), (8, 2, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4, 2), (8, 2, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, 4, 2), (8, 2, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, 4, 2), (8, 2, 1), device='cuda:0', dtype=torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13])
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:27:49.599000 4039611 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:27:49.607000 4039611 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/gt/cgt3dsqx7lab3rmzibjh6dqaozlpmvpi5wfhp66is4mggp4422e7.py
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_forward']
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/we/cwewk4pfjttygn6kdg54flsy47nbcruyjsffne44plaragp3xoaj.py
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_weight_norm], Original ATen: [aten._weight_norm_interface]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _weight_norm => div, mul, pow_1, pow_2, sum_1
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_2, 2), kwargs = {})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1, 2], True), kwargs = {})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 0.5), kwargs = {})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_1, %pow_2), kwargs = {})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_2, %div), kwargs = {})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__weight_norm_interface_0 = async_compile.triton('triton_per_fused__weight_norm_interface_0', '''
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 8},
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__weight_norm_interface_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__weight_norm_interface_0(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 8
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 8
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 8*x0), xmask, other=0.0)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(xmask, tmp2, 0)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp4, 1)[:, None]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 * tmp8
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp6, xmask)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r1 + 8*x0), tmp9, xmask)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ha/chanmembdyld3ah5rj3nkvimranklvyvdcayk4eayravrhh5lion.py
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten.clone, aten.relu]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => clone
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => relu
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%slice_3,), kwargs = {memory_format: torch.contiguous_format})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%clone,), kwargs = {})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_relu_1 = async_compile.triton('triton_poi_fused_clone_relu_1', '''
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_relu_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_relu_1(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 4
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 5*x3), xmask)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp4, xmask)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/rr/crroqo27ggm2xbiufrk7b7ngg7vddr74w673finte2rsshb7aee7.py
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_6, input_7, add, input_9], Original ATen: [aten.clone, aten.relu, aten.add, aten.threshold_backward]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => clone_2
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => relu_1
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => relu_2
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_2 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%slice_6,), kwargs = {memory_format: torch.contiguous_format})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%clone_2,), kwargs = {})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%relu_1, %primals_4), kwargs = {})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_2 : [num_users=3] = call_function[target=torch.ops.aten.relu.default](args = (%add,), kwargs = {})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_4 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_1, 0), kwargs = {})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clone_relu_threshold_backward_2 = async_compile.triton('triton_poi_fused_add_clone_relu_threshold_backward_2', '''
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clone_relu_threshold_backward_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clone_relu_threshold_backward_2(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 4
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 5*x3), xmask)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x4), xmask)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp3, tmp6)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 0.0
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp4 <= tmp8
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp7, xmask)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x4), tmp9, xmask)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/gj/cgjy4frfqusqqqz7azo55wyzm7wmrksiqwgvzih5s4aruvlvgfo2.py
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten.clone, aten.relu]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => clone_4
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => relu_3
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_4 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%slice_9,), kwargs = {memory_format: torch.contiguous_format})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_3 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%clone_4,), kwargs = {})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_relu_3 = async_compile.triton('triton_poi_fused_clone_relu_3', '''
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_relu_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_relu_3(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 4
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 6*x3), xmask)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp4, xmask)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qe/cqeuxaxtazvem6fh2tzac3fcaeds5m7rh67rfqgayuiy6t4d2fjv.py
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_15, input_16, add_1, input_18], Original ATen: [aten.clone, aten.relu, aten.add, aten.threshold_backward]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_15 => clone_6
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_16 => relu_4
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_18 => relu_5
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_6 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%slice_12,), kwargs = {memory_format: torch.contiguous_format})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%clone_6,), kwargs = {})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%relu_4, %relu_2), kwargs = {})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_5 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_1,), kwargs = {})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_5, 0), kwargs = {})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_1 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_4, 0), kwargs = {})
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clone_relu_threshold_backward_4 = async_compile.triton('triton_poi_fused_add_clone_relu_threshold_backward_4', '''
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'out_ptr2': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clone_relu_threshold_backward_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clone_relu_threshold_backward_4(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 4
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 6*x4), xmask)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x3), xmask)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp3, tmp6)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 0.0
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp4 <= tmp8
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 <= tmp8
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp7, xmask)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp9, xmask)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x3), tmp10, xmask)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13 = args
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 1, 1), (1, 1, 1))
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 2), (8, 2, 1))
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4, 4), (16, 4, 1))
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, 1, 1), (1, 1, 1))
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4, 2), (8, 2, 1))
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 1, 1), (1, 1, 1))
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, 4, 2), (8, 2, 1))
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, ), (1, ))
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, 1, 1), (1, 1, 1))
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, 4, 2), (8, 2, 1))
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 1, 1), (1, 4, 4), torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = reinterpret_tensor(buf0, (4, 1, 1), (1, 1, 1), 0); del buf0  # reuse
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 2), (8, 2, 1), torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm], Original ATen: [aten._weight_norm_interface]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__weight_norm_interface_0.run(buf1, primals_2, primals_1, buf2, 4, 8, grid=grid(4), stream=stream0)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(primals_4, buf2, stride=(1,), padding=(1,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 4, 5), (20, 5, 1))
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten.clone, aten.relu]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_relu_1.run(buf3, primals_3, buf4, 64, grid=grid(64), stream=stream0)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 1, 1), (1, 4, 4), torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf5, (4, 1, 1), (1, 1, 1), 0); del buf5  # reuse
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 2), (8, 2, 1), torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm_1], Original ATen: [aten._weight_norm_interface]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__weight_norm_interface_0.run(buf6, primals_6, primals_5, buf7, 4, 8, grid=grid(4), stream=stream0)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf4, buf7, stride=(1,), padding=(1,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 4, 5), (20, 5, 1))
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.bool)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_6, input_7, add, input_9], Original ATen: [aten.clone, aten.relu, aten.add, aten.threshold_backward]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clone_relu_threshold_backward_2.run(buf8, primals_7, primals_4, buf9, buf22, 64, grid=grid(64), stream=stream0)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 1, 1), (1, 4, 4), torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf10, (4, 1, 1), (1, 1, 1), 0); del buf10  # reuse
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 4, 2), (8, 2, 1), torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm_2], Original ATen: [aten._weight_norm_interface]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__weight_norm_interface_0.run(buf11, primals_9, primals_8, buf12, 4, 8, grid=grid(4), stream=stream0)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_10], Original ATen: [aten.convolution]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = extern_kernels.convolution(buf9, buf12, stride=(1,), padding=(2,), dilation=(2,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf13, (4, 4, 6), (24, 6, 1))
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten.clone, aten.relu]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_relu_3.run(buf13, primals_10, buf14, 64, grid=grid(64), stream=stream0)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 1, 1), (1, 4, 4), torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = reinterpret_tensor(buf15, (4, 1, 1), (1, 1, 1), 0); del buf15  # reuse
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 4, 2), (8, 2, 1), torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm_3], Original ATen: [aten._weight_norm_interface]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__weight_norm_interface_0.run(buf16, primals_12, primals_11, buf17, 4, 8, grid=grid(4), stream=stream0)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_14], Original ATen: [aten.convolution]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = extern_kernels.convolution(buf14, buf17, stride=(1,), padding=(2,), dilation=(2,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf18, (4, 4, 6), (24, 6, 1))
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.bool)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.bool)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_15, input_16, add_1, input_18], Original ATen: [aten.clone, aten.relu, aten.add, aten.threshold_backward]
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clone_relu_threshold_backward_4.run(buf18, primals_13, buf9, buf19, buf21, buf20, 64, grid=grid(64), stream=stream0)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf18
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf19, buf2, buf7, buf12, buf17, primals_1, primals_2, primals_4, primals_5, primals_6, primals_8, primals_9, primals_11, primals_12, buf1, buf2, buf4, buf6, buf7, buf9, buf11, buf12, buf14, buf16, buf17, buf20, buf21, buf22, )
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 2), (8, 2, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4, 2), (8, 2, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, 4, 2), (8, 2, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, 4, 2), (8, 2, 1), device='cuda:0', dtype=torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13])
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:16:43.294000 1295092 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:16:43.302000 1295092 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/6j/c6jc2ffhgxtkb2x4aeujy5kg4zg5fc5w7gvy4uzowvbgord6kvli.py
