V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['1_inference']
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3l/c3lobsl26bqvyv2oe75elkjwo26ogtmjwg22xr6hbfsuur4uqf5k.py
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [output0], Original ATen: [aten.log_sigmoid_forward, aten.mul, aten.rsub, aten.neg, aten.add, aten.sum, aten.div, aten.mean]
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output0 => abs_1, abs_2, add, div, exp, exp_1, full_default, full_default_1, log1p, log1p_1, mean, minimum, minimum_1, mul, mul_1, neg, neg_1, neg_2, neg_3, sub, sub_1, sub_2, sum_1
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %minimum : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%full_default, %arg1_1), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%arg1_1,), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%abs_1,), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg,), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log1p : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp,), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%minimum, %log1p), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %sub), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %arg0_1), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg_1 : [num_users=2] = call_function[target=torch.ops.aten.neg.default](args = (%arg1_1,), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %minimum_1 : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%full_default_1, %neg_1), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_2 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%neg_1,), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg_2 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%abs_2,), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg_2,), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log1p_1 : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp_1,), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%minimum_1, %log1p_1), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %sub_2), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_1), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg_3 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%add,), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%neg_3, [3]), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_1, 4), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%div,), kwargs = {})
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_log_sigmoid_forward_mean_mul_neg_rsub_sum_0 = async_compile.triton('triton_per_fused_add_div_log_sigmoid_forward_mean_mul_neg_rsub_sum_0', '''
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_log_sigmoid_forward_mean_mul_neg_rsub_sum_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_log_sigmoid_forward_mean_mul_neg_rsub_sum_0(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*r0), None, eviction_policy='evict_last')
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4*r0), None, eviction_policy='evict_last')
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (1 + 4*r0), None, eviction_policy='evict_last')
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr1 + (1 + 4*r0), None, eviction_policy='evict_last')
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr0 + (2 + 4*r0), None, eviction_policy='evict_last')
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr1 + (2 + 4*r0), None, eviction_policy='evict_last')
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.load(in_ptr0 + (3 + 4*r0), None, eviction_policy='evict_last')
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.load(in_ptr1 + (3 + 4*r0), None, eviction_policy='evict_last')
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.0
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.minimum(tmp2, tmp1)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl_math.abs(tmp1)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = -tmp4
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.exp(tmp5)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = libdevice.log1p(tmp6)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp3 - tmp7
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 * tmp8
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 - tmp0
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = -tmp1
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.minimum(tmp2, tmp12)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl_math.abs(tmp12)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = -tmp14
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.exp(tmp15)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = libdevice.log1p(tmp16)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 - tmp17
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp11 * tmp18
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp9 + tmp19
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = -tmp20
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = triton_helpers.minimum(tmp2, tmp23)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl_math.abs(tmp23)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = -tmp25
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl_math.exp(tmp26)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = libdevice.log1p(tmp27)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp24 - tmp28
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp22 * tmp29
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp10 - tmp22
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = -tmp23
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = triton_helpers.minimum(tmp2, tmp32)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl_math.abs(tmp32)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = -tmp34
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl_math.exp(tmp35)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = libdevice.log1p(tmp36)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp33 - tmp37
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp31 * tmp38
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp30 + tmp39
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = -tmp40
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp21 + tmp41
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = triton_helpers.minimum(tmp2, tmp44)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl_math.abs(tmp44)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = -tmp46
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl_math.exp(tmp47)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = libdevice.log1p(tmp48)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp45 - tmp49
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp43 * tmp50
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp10 - tmp43
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = -tmp44
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = triton_helpers.minimum(tmp2, tmp53)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl_math.abs(tmp53)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = -tmp55
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl_math.exp(tmp56)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = libdevice.log1p(tmp57)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp54 - tmp58
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp52 * tmp59
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp51 + tmp60
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = -tmp61
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp42 + tmp62
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = triton_helpers.minimum(tmp2, tmp65)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tl_math.abs(tmp65)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = -tmp67
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl_math.exp(tmp68)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = libdevice.log1p(tmp69)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp66 - tmp70
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp64 * tmp71
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp10 - tmp64
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = -tmp65
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = triton_helpers.minimum(tmp2, tmp74)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tl_math.abs(tmp74)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = -tmp76
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl_math.exp(tmp77)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = libdevice.log1p(tmp78)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp75 - tmp79
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp73 * tmp80
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp72 + tmp81
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = -tmp82
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp63 + tmp83
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = 0.25
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp84 * tmp85
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tl.broadcast_to(tmp86, [XBLOCK, RBLOCK])
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tl.sum(tmp87, 1)[:, None]
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = 64.0
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp89 / tmp90
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp91, None)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((), (), torch.float32)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output0], Original ATen: [aten.log_sigmoid_forward, aten.mul, aten.rsub, aten.neg, aten.add, aten.sum, aten.div, aten.mean]
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_log_sigmoid_forward_mean_mul_neg_rsub_sum_0.run(buf2, arg0_1, arg1_1, 1, 64, grid=grid(1), stream=stream0)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf2, )
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:32:01.783000 3084803 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:32:01.786000 3084803 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/37/c37h36mfxt6svijhu67dq4ury25cfu2252kcx4nynmhlrtcozqlu.py
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['1_inference']
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3l/c3lobsl26bqvyv2oe75elkjwo26ogtmjwg22xr6hbfsuur4uqf5k.py
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [output0], Original ATen: [aten.log_sigmoid_forward, aten.mul, aten.rsub, aten.neg, aten.add, aten.sum, aten.div, aten.mean]
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output0 => abs_1, abs_2, add, div, exp, exp_1, full_default, full_default_1, log1p, log1p_1, mean, minimum, minimum_1, mul, mul_1, neg, neg_1, neg_2, neg_3, sub, sub_1, sub_2, sum_1
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %minimum : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%full_default, %arg1_1), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%arg1_1,), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%abs_1,), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg,), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log1p : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp,), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%minimum, %log1p), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %sub), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %arg0_1), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg_1 : [num_users=2] = call_function[target=torch.ops.aten.neg.default](args = (%arg1_1,), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %minimum_1 : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%full_default_1, %neg_1), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_2 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%neg_1,), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg_2 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%abs_2,), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg_2,), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log1p_1 : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp_1,), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%minimum_1, %log1p_1), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %sub_2), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_1), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg_3 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%add,), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%neg_3, [3]), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_1, 4), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%div,), kwargs = {})
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_log_sigmoid_forward_mean_mul_neg_rsub_sum_0 = async_compile.triton('triton_per_fused_add_div_log_sigmoid_forward_mean_mul_neg_rsub_sum_0', '''
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_log_sigmoid_forward_mean_mul_neg_rsub_sum_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_log_sigmoid_forward_mean_mul_neg_rsub_sum_0(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*r0), None, eviction_policy='evict_last')
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4*r0), None, eviction_policy='evict_last')
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (1 + 4*r0), None, eviction_policy='evict_last')
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr1 + (1 + 4*r0), None, eviction_policy='evict_last')
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr0 + (2 + 4*r0), None, eviction_policy='evict_last')
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr1 + (2 + 4*r0), None, eviction_policy='evict_last')
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.load(in_ptr0 + (3 + 4*r0), None, eviction_policy='evict_last')
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.load(in_ptr1 + (3 + 4*r0), None, eviction_policy='evict_last')
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.0
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.minimum(tmp2, tmp1)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl_math.abs(tmp1)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = -tmp4
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.exp(tmp5)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = libdevice.log1p(tmp6)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp3 - tmp7
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 * tmp8
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 - tmp0
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = -tmp1
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.minimum(tmp2, tmp12)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl_math.abs(tmp12)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = -tmp14
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.exp(tmp15)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = libdevice.log1p(tmp16)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 - tmp17
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp11 * tmp18
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp9 + tmp19
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = -tmp20
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = triton_helpers.minimum(tmp2, tmp23)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl_math.abs(tmp23)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = -tmp25
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl_math.exp(tmp26)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = libdevice.log1p(tmp27)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp24 - tmp28
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp22 * tmp29
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp10 - tmp22
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = -tmp23
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = triton_helpers.minimum(tmp2, tmp32)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl_math.abs(tmp32)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = -tmp34
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl_math.exp(tmp35)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = libdevice.log1p(tmp36)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp33 - tmp37
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp31 * tmp38
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp30 + tmp39
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = -tmp40
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp21 + tmp41
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = triton_helpers.minimum(tmp2, tmp44)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl_math.abs(tmp44)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = -tmp46
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl_math.exp(tmp47)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = libdevice.log1p(tmp48)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp45 - tmp49
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp43 * tmp50
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp10 - tmp43
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = -tmp44
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = triton_helpers.minimum(tmp2, tmp53)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl_math.abs(tmp53)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = -tmp55
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl_math.exp(tmp56)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = libdevice.log1p(tmp57)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp54 - tmp58
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp52 * tmp59
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp51 + tmp60
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = -tmp61
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp42 + tmp62
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = triton_helpers.minimum(tmp2, tmp65)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tl_math.abs(tmp65)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = -tmp67
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl_math.exp(tmp68)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = libdevice.log1p(tmp69)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp66 - tmp70
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp64 * tmp71
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp10 - tmp64
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = -tmp65
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = triton_helpers.minimum(tmp2, tmp74)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tl_math.abs(tmp74)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = -tmp76
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl_math.exp(tmp77)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = libdevice.log1p(tmp78)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp75 - tmp79
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp73 * tmp80
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp72 + tmp81
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = -tmp82
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp63 + tmp83
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = 0.25
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp84 * tmp85
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tl.broadcast_to(tmp86, [XBLOCK, RBLOCK])
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tl.sum(tmp87, 1)[:, None]
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = 64.0
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp89 / tmp90
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp91, None)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((), (), torch.float32)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output0], Original ATen: [aten.log_sigmoid_forward, aten.mul, aten.rsub, aten.neg, aten.add, aten.sum, aten.div, aten.mean]
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_log_sigmoid_forward_mean_mul_neg_rsub_sum_0.run(buf2, arg0_1, arg1_1, 1, 64, grid=grid(1), stream=stream0)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf2, )
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 21:20:46.235000 533994 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:20:46.239000 533994 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/sv/csvwfdahdoy62wnnjz6kovevhn3fjewjkur4crdyq3isqxcyv4ag.py
