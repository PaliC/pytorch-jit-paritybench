V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['1_forward']
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/mv/cmvggobm7nq7gril4ix3m3hkfqk3csvhvrabanqmigb3xngtcnbl.py
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 256, 'x': 128}, tile_hint=TileHint.SQUARE,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 192
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 121
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 121*y3), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 363*y1), tmp0, xmask & ymask)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/f3/cf3yvvrx2dp4pn5dwcyzm6qhg7y76yekqxcww4ry23bgzk3jew7k.py
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4096}, tile_hint=TileHint.SQUARE,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 12
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 4096*y3), ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 12288*y1), tmp0, ymask)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2q/c2qkdnihgpqjyiepq5kmdwllvr43lblaoq4wtswrcqbq43c4hrha.py
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_2 = async_compile.triton('triton_poi_fused_2', '''
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16384, 'x': 32}, tile_hint=TileHint.SQUARE,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_2(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 12288
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 25
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 64)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 64
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 25*y3), xmask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 64*x2 + 1600*y1), tmp0, xmask)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/cb/ccbztjfnt3p32gvx2nflfmrax7bbpnqbuzsptz4rhm3bpzqfulny.py
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_3 = async_compile.triton('triton_poi_fused_3', '''
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 131072, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_3(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 73728
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 192)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 192
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 192*x2 + 1728*y1), tmp0, xmask & ymask)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ry/cryuxn3nofhkvhjzh67cbpkdz6qlyumozrnncptr6tewsx6nvmrj.py
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_4 = async_compile.triton('triton_poi_fused_4', '''
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 131072, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 98304
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 384)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 384
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 384*x2 + 3456*y1), tmp0, xmask & ymask)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/kc/ckcublsczsjz6ljmjhng6fmhokrsng45ul4sdi7gakhlhyvvsmwt.py
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_5 = async_compile.triton('triton_poi_fused_5', '''
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 65536, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_5(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 65536
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 256*x2 + 2304*y1), tmp0, xmask & ymask)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sk/csklhznypdsuhgznfbevoh6retr5pozqhkghqq2kje35vpzech2v.py
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.convolution, aten.relu]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => convolution
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => relu
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [4, 4], [2, 2], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution,), kwargs = {})
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_6 = async_compile.triton('triton_poi_fused_convolution_relu_6', '''
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 256, 'x': 256}, tile_hint=TileHint.DEFAULT,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_6(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 256
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 225
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 64)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 64
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 64*x2 + 14400*y1), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 0, tl.int32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 225*y3), tmp4, xmask & ymask)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/f5/cf5n2n2w2kr2wqcodv5n5m66utev5hero7jhrqqq6gws4klajgyy.py
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.max_pool2d_with_indices]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => getitem, getitem_1
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem : [num_users=2] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 0), kwargs = {})
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem_1 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 1), kwargs = {})
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_max_pool2d_with_indices_7 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_7', '''
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 256, 'x': 64}, tile_hint=TileHint.DEFAULT,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i8', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_max_pool2d_with_indices_7(in_ptr0, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 256
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 49
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 7)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 7
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 64)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 64
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x2 + 30*x3 + 225*y4), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 2*x2 + 30*x3 + 225*y4), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 2*x2 + 30*x3 + 225*y4), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (15 + 2*x2 + 30*x3 + 225*y4), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (16 + 2*x2 + 30*x3 + 225*y4), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (17 + 2*x2 + 30*x3 + 225*y4), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (30 + 2*x2 + 30*x3 + 225*y4), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (31 + 2*x2 + 30*x3 + 225*y4), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (32 + 2*x2 + 30*x3 + 225*y4), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp7, tmp6)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp9, tmp8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp11, tmp10)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp13, tmp12)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp15, tmp14)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp1 > tmp0
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1, 1], 1, tl.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.full([1, 1], 0, tl.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp18, tmp19)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp3 > tmp2
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([1, 1], 2, tl.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp21, tmp22, tmp20)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp5 > tmp4
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full([1, 1], 3, tl.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp24, tmp25, tmp23)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp7 > tmp6
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.full([1, 1], 4, tl.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.where(tmp27, tmp28, tmp26)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp9 > tmp8
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.full([1, 1], 5, tl.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp30, tmp31, tmp29)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp11 > tmp10
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.full([1, 1], 6, tl.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.where(tmp33, tmp34, tmp32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp13 > tmp12
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.full([1, 1], 7, tl.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp36, tmp37, tmp35)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp15 > tmp14
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.full([1, 1], 8, tl.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.where(tmp39, tmp40, tmp38)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 64*x5 + 3136*y1), tmp16, xmask & ymask)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 64*x5 + 3136*y1), tmp41, xmask & ymask)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ht/chtd6poo2mv2m5zwldc2lhjorbcdvh6xe3wun7cej2dibulbwpgp.py
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_3, x_4], Original ATen: [aten.convolution, aten.relu]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => convolution_1
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_4 => relu_1
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%getitem, %primals_4, %primals_5, [1, 1], [2, 2], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_1,), kwargs = {})
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_8 = async_compile.triton('triton_poi_fused_convolution_relu_8', '''
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 64}, tile_hint=TileHint.DEFAULT,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_8(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 768
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 49
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 192)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 192
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 192*x2 + 9408*y1), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 0, tl.int32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 49*y3), tmp4, xmask & ymask)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.max_pool2d_with_indices]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => getitem_2, getitem_3
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem_2 : [num_users=2] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets_1, 0), kwargs = {})
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem_3 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets_1, 1), kwargs = {})
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_max_pool2d_with_indices_9 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_9', '''
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i8', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_max_pool2d_with_indices_9(in_ptr0, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 768
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 3)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 3
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 192)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 192
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x2 + 14*x3 + 49*y4), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 2*x2 + 14*x3 + 49*y4), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 2*x2 + 14*x3 + 49*y4), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (7 + 2*x2 + 14*x3 + 49*y4), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (8 + 2*x2 + 14*x3 + 49*y4), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (9 + 2*x2 + 14*x3 + 49*y4), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (14 + 2*x2 + 14*x3 + 49*y4), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (15 + 2*x2 + 14*x3 + 49*y4), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (16 + 2*x2 + 14*x3 + 49*y4), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp7, tmp6)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp9, tmp8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp11, tmp10)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp13, tmp12)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp15, tmp14)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp1 > tmp0
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1, 1], 1, tl.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.full([1, 1], 0, tl.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp18, tmp19)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp3 > tmp2
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([1, 1], 2, tl.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp21, tmp22, tmp20)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp5 > tmp4
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full([1, 1], 3, tl.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp24, tmp25, tmp23)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp7 > tmp6
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.full([1, 1], 4, tl.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.where(tmp27, tmp28, tmp26)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp9 > tmp8
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.full([1, 1], 5, tl.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp30, tmp31, tmp29)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp11 > tmp10
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.full([1, 1], 6, tl.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.where(tmp33, tmp34, tmp32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp13 > tmp12
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.full([1, 1], 7, tl.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp36, tmp37, tmp35)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp15 > tmp14
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.full([1, 1], 8, tl.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.where(tmp39, tmp40, tmp38)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 192*x5 + 1728*y1), tmp16, xmask & ymask)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 192*x5 + 1728*y1), tmp41, xmask & ymask)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7r/c7rd2ilxd3k7agyzyzaqopl4m73dbx6cjftajogchx5mt4cdtr26.py
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_6, x_7, x_8], Original ATen: [aten.convolution, aten.relu]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_6 => convolution_2
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_7 => relu_2
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_8 => convolution_3
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%getitem_2, %primals_6, %primals_7, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_2 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_2,), kwargs = {})
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_2, %primals_8, %primals_9, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_10 = async_compile.triton('triton_poi_fused_convolution_relu_10', '''
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 2048, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_10(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1536
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 384)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 384
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 384*x2 + 3456*y1), xmask & ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 0, tl.int32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 9*y3), tmp4, xmask & ymask)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 384*x2 + 3456*y1), tmp4, xmask & ymask)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gf/cgfbhmjp4irqyewzmaqarm4n2sq6pybthyr26fnw5hfwbejpi5ax.py
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_8, x_9, x_10], Original ATen: [aten.convolution, aten.relu]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_10 => convolution_4
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_8 => convolution_3
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_9 => relu_3
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_2, %primals_8, %primals_9, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_3 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_3,), kwargs = {})
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_4 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_3, %primals_10, %primals_11, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_11 = async_compile.triton('triton_poi_fused_convolution_relu_11', '''
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_11(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 256*x2 + 2304*y1), xmask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), None, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 0, tl.int32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 9*y3), tmp4, xmask)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 256*x2 + 2304*y1), tmp4, xmask)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dv/cdvdquyhqlj5ir4aq5kytckh6jh5lwld37cycetfwuod46vf4miv.py
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_10, x_11], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_10 => convolution_4
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_11 => relu_4
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_4 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_3, %primals_10, %primals_11, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_4,), kwargs = {})
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_4, 0), kwargs = {})
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_threshold_backward_12 = async_compile.triton('triton_poi_fused_convolution_relu_threshold_backward_12', '''
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_threshold_backward_12', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_threshold_backward_12(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 256*x2 + 2304*y1), xmask, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), None, eviction_policy='evict_last')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 0, tl.int32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 9*y3), tmp4, xmask)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 256*x2 + 2304*y1), tmp6, xmask)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11 = args
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (64, 3, 11, 11), (363, 121, 11, 1))
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (64, ), (1, ))
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 3, 64, 64), (12288, 4096, 64, 1))
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (192, 64, 5, 5), (1600, 25, 5, 1))
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (192, ), (1, ))
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (384, 192, 3, 3), (1728, 9, 3, 1))
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (384, ), (1, ))
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (256, 384, 3, 3), (3456, 9, 3, 1))
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (256, ), (1, ))
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (256, 256, 3, 3), (2304, 9, 3, 1))
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (256, ), (1, ))
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((64, 3, 11, 11), (363, 1, 33, 3), torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_1, buf0, 192, 121, grid=grid(192, 121), stream=stream0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 3, 64, 64), (12288, 1, 192, 3), torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_3, buf1, 12, 4096, grid=grid(12, 4096), stream=stream0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((192, 64, 5, 5), (1600, 1, 320, 64), torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_4, buf2, 12288, 25, grid=grid(12288, 25), stream=stream0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((384, 192, 3, 3), (1728, 1, 576, 192), torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_3.run(primals_6, buf3, 73728, 9, grid=grid(73728, 9), stream=stream0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((256, 384, 3, 3), (3456, 1, 1152, 384), torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_4.run(primals_8, buf4, 98304, 9, grid=grid(98304, 9), stream=stream0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_5.run(primals_10, buf5, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf1, buf0, stride=(4, 4), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 64, 15, 15), (14400, 1, 960, 64))
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 64, 15, 15), (14400, 225, 15, 1), torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.convolution, aten.relu]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_6.run(buf6, primals_2, buf7, 256, 225, grid=grid(256, 225), stream=stream0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 64, 7, 7), (3136, 1, 448, 64), torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 64, 7, 7), (3136, 1, 448, 64), torch.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.max_pool2d_with_indices]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_max_pool2d_with_indices_7.run(buf7, buf8, buf9, 256, 49, grid=grid(256, 49), stream=stream0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.convolution]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf8, buf2, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 192, 7, 7), (9408, 1, 1344, 192))
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 192, 7, 7), (9408, 49, 7, 1), torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3, x_4], Original ATen: [aten.convolution, aten.relu]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_8.run(buf10, primals_5, buf11, 768, 49, grid=grid(768, 49), stream=stream0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 192, 3, 3), (1728, 1, 576, 192), torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 192, 3, 3), (1728, 1, 576, 192), torch.int8)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.max_pool2d_with_indices]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_max_pool2d_with_indices_9.run(buf11, buf12, buf13, 768, 9, grid=grid(768, 9), stream=stream0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.convolution]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = extern_kernels.convolution(buf12, buf3, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf14, (4, 384, 3, 3), (3456, 1, 1152, 384))
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 384, 3, 3), (3456, 9, 3, 1), torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 384, 3, 3), (3456, 1, 1152, 384), torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6, x_7, x_8], Original ATen: [aten.convolution, aten.relu]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_10.run(buf14, primals_7, buf15, buf16, 1536, 9, grid=grid(1536, 9), stream=stream0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_8], Original ATen: [aten.convolution]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = extern_kernels.convolution(buf16, buf4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf17, (4, 256, 3, 3), (2304, 1, 768, 256))
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf16
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 256, 3, 3), (2304, 9, 3, 1), torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_8, x_9, x_10], Original ATen: [aten.convolution, aten.relu]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_11.run(buf17, primals_9, buf18, buf19, 1024, 9, grid=grid(1024, 9), stream=stream0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_10], Original ATen: [aten.convolution]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = extern_kernels.convolution(buf19, buf5, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf20, (4, 256, 3, 3), (2304, 1, 768, 256))
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = reinterpret_tensor(buf19, (4, 256, 3, 3), (2304, 9, 3, 1), 0); del buf19  # reuse
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 256, 3, 3), (2304, 1, 768, 256), torch.bool)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_10, x_11], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_threshold_backward_12.run(buf20, primals_11, buf21, buf22, 1024, 9, grid=grid(1024, 9), stream=stream0)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf20
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, buf11, buf15, buf18, buf21, buf0, buf1, buf2, buf3, buf4, buf5, buf7, buf8, buf9, buf11, buf12, buf13, buf15, buf18, buf22, )
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((64, 3, 11, 11), (363, 121, 11, 1), device='cuda:0', dtype=torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((192, 64, 5, 5), (1600, 25, 5, 1), device='cuda:0', dtype=torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((192, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((384, 192, 3, 3), (1728, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((256, 384, 3, 3), (3456, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11])
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:45:33.523000 2021106 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:45:33.543000 2021106 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/sa/csakoqctfbxome7wy2gxbwsn2frxxyqyzxjaoa2kwym46drgk7qa.py
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['1_forward']
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/mv/cmvggobm7nq7gril4ix3m3hkfqk3csvhvrabanqmigb3xngtcnbl.py
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 256, 'x': 128}, tile_hint=TileHint.SQUARE,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 192
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 121
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 121*y3), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 363*y1), tmp0, xmask & ymask)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/f3/cf3yvvrx2dp4pn5dwcyzm6qhg7y76yekqxcww4ry23bgzk3jew7k.py
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4096}, tile_hint=TileHint.SQUARE,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 12
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 4096*y3), ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 12288*y1), tmp0, ymask)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2q/c2qkdnihgpqjyiepq5kmdwllvr43lblaoq4wtswrcqbq43c4hrha.py
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_2 = async_compile.triton('triton_poi_fused_2', '''
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16384, 'x': 32}, tile_hint=TileHint.SQUARE,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_2(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 12288
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 25
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 64)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 64
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 25*y3), xmask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 64*x2 + 1600*y1), tmp0, xmask)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/cb/ccbztjfnt3p32gvx2nflfmrax7bbpnqbuzsptz4rhm3bpzqfulny.py
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_3 = async_compile.triton('triton_poi_fused_3', '''
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 131072, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_3(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 73728
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 192)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 192
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 192*x2 + 1728*y1), tmp0, xmask & ymask)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ry/cryuxn3nofhkvhjzh67cbpkdz6qlyumozrnncptr6tewsx6nvmrj.py
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_4 = async_compile.triton('triton_poi_fused_4', '''
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 131072, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 98304
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 384)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 384
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 384*x2 + 3456*y1), tmp0, xmask & ymask)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/kc/ckcublsczsjz6ljmjhng6fmhokrsng45ul4sdi7gakhlhyvvsmwt.py
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_5 = async_compile.triton('triton_poi_fused_5', '''
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 65536, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_5(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 65536
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 256*x2 + 2304*y1), tmp0, xmask & ymask)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sk/csklhznypdsuhgznfbevoh6retr5pozqhkghqq2kje35vpzech2v.py
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.convolution, aten.relu]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => convolution
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => relu
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [4, 4], [2, 2], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution,), kwargs = {})
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_6 = async_compile.triton('triton_poi_fused_convolution_relu_6', '''
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 256, 'x': 256}, tile_hint=TileHint.DEFAULT,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_6(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 256
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 225
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 64)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 64
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 64*x2 + 14400*y1), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 0, tl.int32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 225*y3), tmp4, xmask & ymask)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/f5/cf5n2n2w2kr2wqcodv5n5m66utev5hero7jhrqqq6gws4klajgyy.py
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.max_pool2d_with_indices]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => getitem, getitem_1
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem : [num_users=2] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 0), kwargs = {})
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem_1 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 1), kwargs = {})
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_max_pool2d_with_indices_7 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_7', '''
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 256, 'x': 64}, tile_hint=TileHint.DEFAULT,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i8', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_max_pool2d_with_indices_7(in_ptr0, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 256
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 49
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 7)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 7
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 64)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 64
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x2 + 30*x3 + 225*y4), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 2*x2 + 30*x3 + 225*y4), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 2*x2 + 30*x3 + 225*y4), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (15 + 2*x2 + 30*x3 + 225*y4), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (16 + 2*x2 + 30*x3 + 225*y4), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (17 + 2*x2 + 30*x3 + 225*y4), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (30 + 2*x2 + 30*x3 + 225*y4), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (31 + 2*x2 + 30*x3 + 225*y4), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (32 + 2*x2 + 30*x3 + 225*y4), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp7, tmp6)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp9, tmp8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp11, tmp10)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp13, tmp12)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp15, tmp14)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp1 > tmp0
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1, 1], 1, tl.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.full([1, 1], 0, tl.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp18, tmp19)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp3 > tmp2
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([1, 1], 2, tl.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp21, tmp22, tmp20)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp5 > tmp4
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full([1, 1], 3, tl.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp24, tmp25, tmp23)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp7 > tmp6
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.full([1, 1], 4, tl.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.where(tmp27, tmp28, tmp26)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp9 > tmp8
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.full([1, 1], 5, tl.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp30, tmp31, tmp29)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp11 > tmp10
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.full([1, 1], 6, tl.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.where(tmp33, tmp34, tmp32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp13 > tmp12
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.full([1, 1], 7, tl.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp36, tmp37, tmp35)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp15 > tmp14
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.full([1, 1], 8, tl.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.where(tmp39, tmp40, tmp38)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 64*x5 + 3136*y1), tmp16, xmask & ymask)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 64*x5 + 3136*y1), tmp41, xmask & ymask)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ht/chtd6poo2mv2m5zwldc2lhjorbcdvh6xe3wun7cej2dibulbwpgp.py
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_3, x_4], Original ATen: [aten.convolution, aten.relu]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => convolution_1
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_4 => relu_1
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%getitem, %primals_4, %primals_5, [1, 1], [2, 2], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_1,), kwargs = {})
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_8 = async_compile.triton('triton_poi_fused_convolution_relu_8', '''
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 64}, tile_hint=TileHint.DEFAULT,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_8(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 768
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 49
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 192)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 192
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 192*x2 + 9408*y1), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 0, tl.int32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 49*y3), tmp4, xmask & ymask)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.max_pool2d_with_indices]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => getitem_2, getitem_3
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem_2 : [num_users=2] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets_1, 0), kwargs = {})
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem_3 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets_1, 1), kwargs = {})
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_max_pool2d_with_indices_9 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_9', '''
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i8', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_max_pool2d_with_indices_9(in_ptr0, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 768
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 3)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 3
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 192)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 192
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x2 + 14*x3 + 49*y4), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 2*x2 + 14*x3 + 49*y4), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 2*x2 + 14*x3 + 49*y4), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (7 + 2*x2 + 14*x3 + 49*y4), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (8 + 2*x2 + 14*x3 + 49*y4), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (9 + 2*x2 + 14*x3 + 49*y4), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (14 + 2*x2 + 14*x3 + 49*y4), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (15 + 2*x2 + 14*x3 + 49*y4), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (16 + 2*x2 + 14*x3 + 49*y4), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp7, tmp6)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp9, tmp8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp11, tmp10)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp13, tmp12)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp15, tmp14)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp1 > tmp0
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1, 1], 1, tl.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.full([1, 1], 0, tl.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp18, tmp19)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp3 > tmp2
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([1, 1], 2, tl.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp21, tmp22, tmp20)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp5 > tmp4
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full([1, 1], 3, tl.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp24, tmp25, tmp23)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp7 > tmp6
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.full([1, 1], 4, tl.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.where(tmp27, tmp28, tmp26)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp9 > tmp8
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.full([1, 1], 5, tl.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp30, tmp31, tmp29)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp11 > tmp10
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.full([1, 1], 6, tl.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.where(tmp33, tmp34, tmp32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp13 > tmp12
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.full([1, 1], 7, tl.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp36, tmp37, tmp35)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp15 > tmp14
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.full([1, 1], 8, tl.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.where(tmp39, tmp40, tmp38)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 192*x5 + 1728*y1), tmp16, xmask & ymask)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 192*x5 + 1728*y1), tmp41, xmask & ymask)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7r/c7rd2ilxd3k7agyzyzaqopl4m73dbx6cjftajogchx5mt4cdtr26.py
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_6, x_7, x_8], Original ATen: [aten.convolution, aten.relu]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_6 => convolution_2
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_7 => relu_2
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_8 => convolution_3
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%getitem_2, %primals_6, %primals_7, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_2 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_2,), kwargs = {})
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_2, %primals_8, %primals_9, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_10 = async_compile.triton('triton_poi_fused_convolution_relu_10', '''
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 2048, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_10(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1536
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 384)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 384
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 384*x2 + 3456*y1), xmask & ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 0, tl.int32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 9*y3), tmp4, xmask & ymask)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 384*x2 + 3456*y1), tmp4, xmask & ymask)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/gf/cgfbhmjp4irqyewzmaqarm4n2sq6pybthyr26fnw5hfwbejpi5ax.py
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_8, x_9, x_10], Original ATen: [aten.convolution, aten.relu]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_10 => convolution_4
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_8 => convolution_3
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_9 => relu_3
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_2, %primals_8, %primals_9, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_3 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_3,), kwargs = {})
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_4 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_3, %primals_10, %primals_11, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_11 = async_compile.triton('triton_poi_fused_convolution_relu_11', '''
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_11(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 256*x2 + 2304*y1), xmask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), None, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 0, tl.int32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 9*y3), tmp4, xmask)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 256*x2 + 2304*y1), tmp4, xmask)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/dv/cdvdquyhqlj5ir4aq5kytckh6jh5lwld37cycetfwuod46vf4miv.py
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_10, x_11], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_10 => convolution_4
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_11 => relu_4
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_4 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_3, %primals_10, %primals_11, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_4,), kwargs = {})
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_4, 0), kwargs = {})
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_threshold_backward_12 = async_compile.triton('triton_poi_fused_convolution_relu_threshold_backward_12', '''
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_threshold_backward_12', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_threshold_backward_12(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 256*x2 + 2304*y1), xmask, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), None, eviction_policy='evict_last')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 0, tl.int32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 9*y3), tmp4, xmask)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 256*x2 + 2304*y1), tmp6, xmask)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11 = args
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (64, 3, 11, 11), (363, 121, 11, 1))
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (64, ), (1, ))
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 3, 64, 64), (12288, 4096, 64, 1))
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (192, 64, 5, 5), (1600, 25, 5, 1))
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (192, ), (1, ))
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (384, 192, 3, 3), (1728, 9, 3, 1))
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (384, ), (1, ))
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (256, 384, 3, 3), (3456, 9, 3, 1))
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (256, ), (1, ))
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (256, 256, 3, 3), (2304, 9, 3, 1))
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (256, ), (1, ))
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((64, 3, 11, 11), (363, 1, 33, 3), torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_1, buf0, 192, 121, grid=grid(192, 121), stream=stream0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 3, 64, 64), (12288, 1, 192, 3), torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_3, buf1, 12, 4096, grid=grid(12, 4096), stream=stream0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((192, 64, 5, 5), (1600, 1, 320, 64), torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_4, buf2, 12288, 25, grid=grid(12288, 25), stream=stream0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((384, 192, 3, 3), (1728, 1, 576, 192), torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_3.run(primals_6, buf3, 73728, 9, grid=grid(73728, 9), stream=stream0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((256, 384, 3, 3), (3456, 1, 1152, 384), torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_4.run(primals_8, buf4, 98304, 9, grid=grid(98304, 9), stream=stream0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_5.run(primals_10, buf5, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf1, buf0, stride=(4, 4), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 64, 15, 15), (14400, 1, 960, 64))
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 64, 15, 15), (14400, 225, 15, 1), torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.convolution, aten.relu]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_6.run(buf6, primals_2, buf7, 256, 225, grid=grid(256, 225), stream=stream0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 64, 7, 7), (3136, 1, 448, 64), torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 64, 7, 7), (3136, 1, 448, 64), torch.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.max_pool2d_with_indices]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_max_pool2d_with_indices_7.run(buf7, buf8, buf9, 256, 49, grid=grid(256, 49), stream=stream0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.convolution]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf8, buf2, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 192, 7, 7), (9408, 1, 1344, 192))
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 192, 7, 7), (9408, 49, 7, 1), torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3, x_4], Original ATen: [aten.convolution, aten.relu]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_8.run(buf10, primals_5, buf11, 768, 49, grid=grid(768, 49), stream=stream0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 192, 3, 3), (1728, 1, 576, 192), torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 192, 3, 3), (1728, 1, 576, 192), torch.int8)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.max_pool2d_with_indices]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_max_pool2d_with_indices_9.run(buf11, buf12, buf13, 768, 9, grid=grid(768, 9), stream=stream0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.convolution]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = extern_kernels.convolution(buf12, buf3, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf14, (4, 384, 3, 3), (3456, 1, 1152, 384))
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 384, 3, 3), (3456, 9, 3, 1), torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 384, 3, 3), (3456, 1, 1152, 384), torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6, x_7, x_8], Original ATen: [aten.convolution, aten.relu]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_10.run(buf14, primals_7, buf15, buf16, 1536, 9, grid=grid(1536, 9), stream=stream0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_8], Original ATen: [aten.convolution]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = extern_kernels.convolution(buf16, buf4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf17, (4, 256, 3, 3), (2304, 1, 768, 256))
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf16
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 256, 3, 3), (2304, 9, 3, 1), torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_8, x_9, x_10], Original ATen: [aten.convolution, aten.relu]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_11.run(buf17, primals_9, buf18, buf19, 1024, 9, grid=grid(1024, 9), stream=stream0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_10], Original ATen: [aten.convolution]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = extern_kernels.convolution(buf19, buf5, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf20, (4, 256, 3, 3), (2304, 1, 768, 256))
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = reinterpret_tensor(buf19, (4, 256, 3, 3), (2304, 9, 3, 1), 0); del buf19  # reuse
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 256, 3, 3), (2304, 1, 768, 256), torch.bool)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_10, x_11], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_threshold_backward_12.run(buf20, primals_11, buf21, buf22, 1024, 9, grid=grid(1024, 9), stream=stream0)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf20
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, buf11, buf15, buf18, buf21, buf0, buf1, buf2, buf3, buf4, buf5, buf7, buf8, buf9, buf11, buf12, buf13, buf15, buf18, buf22, )
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((64, 3, 11, 11), (363, 121, 11, 1), device='cuda:0', dtype=torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((192, 64, 5, 5), (1600, 25, 5, 1), device='cuda:0', dtype=torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((192, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((384, 192, 3, 3), (1728, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((384, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((256, 384, 3, 3), (3456, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11])
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:35:16.371000 3525451 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:35:16.388000 3525451 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/g7/cg7hze2pc3e4pw72wz3vg5u3uv47cxkjnump3zvhkpqje57fowaa.py
