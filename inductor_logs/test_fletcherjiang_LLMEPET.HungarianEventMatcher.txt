V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] Output code: 
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # AOT ID: ['4_inference']
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import torch
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import math
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import random
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import os
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import tempfile
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from math import inf, nan
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch import device, empty_strided
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     grid,
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     split_scan_grid,
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     grid_combo_kernels,
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     start_graph,
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     end_graph,
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     cooperative_reduction_grid,
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] aten = torch.ops.aten
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] async_compile = AsyncCompile()
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/az/cazq5m6vqq4vldqpzepr5b7cr4btbt4rwgikrclf5wamkaclpm5g.py
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Topologically Sorted Source Nodes: [tgt_spans], Original ATen: [aten.cat]
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   tgt_spans => cat
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Graph fragment:
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %cat : [num_users=5] = call_function[target=torch.ops.aten.cat.default](args = ([%select, %select_1, %select_2, %select_3],), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_poi_fused_cat_0 = async_compile.triton('triton_poi_fused_cat_0', '''
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     size_hints={'x': 64}, 
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     filename=__file__,
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     min_elem_per_thread=0
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton.jit
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def triton_poi_fused_cat_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xnumel = 64
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x1 = xindex // 4
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x0 = (xindex % 4)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x2 = xindex
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp0 = x1
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp4 = tmp0 < tmp3
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 4*(x1)), tmp4 & xmask, other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp7 = tl.full([1], 8, tl.int64)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp8 = tmp0 < tmp7
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp9 = tmp6 & tmp8
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp10 = tl.load(in_ptr0 + (16 + x0 + 4*((-4) + x1)), tmp9 & xmask, other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp11 = tmp0 >= tmp7
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp12 = tl.full([1], 12, tl.int64)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp13 = tmp0 < tmp12
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp14 = tmp11 & tmp13
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp15 = tl.load(in_ptr0 + (32 + x0 + 4*((-8) + x1)), tmp14 & xmask, other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp16 = tmp0 >= tmp12
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp17 = tl.full([1], 16, tl.int64)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp18 = tmp0 < tmp17
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp19 = tl.load(in_ptr0 + (48 + x0 + 4*((-12) + x1)), tmp16 & xmask, other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp20 = tl.where(tmp14, tmp15, tmp19)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp21 = tl.where(tmp9, tmp10, tmp20)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp22 = tl.where(tmp4, tmp5, tmp21)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp22, xmask)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] ''', device_str='cuda')
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Topologically Sorted Source Nodes: [mul_4, areas2, add_2, right, left, sub_4, inter, union, iou, right_1, left_1, sub_6, enclosing_area, sub_7, truediv_1, sub_8, cost_giou, mul_5, C], Original ATen: [aten.mul, aten.sub, aten.add, aten.minimum, aten.maximum, aten.clamp, aten.div, aten.neg]
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   C => add_3
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   add_2 => add_2
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   areas2 => sub_3
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   cost_giou => neg
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   enclosing_area => clamp_min_1
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   inter => clamp_min
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   iou => div
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   left => maximum
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   left_1 => minimum_1
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   mul_4 => mul_4
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   mul_5 => mul_5
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   right => minimum
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   right_1 => maximum_1
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   sub_4 => sub_4
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   sub_6 => sub_6
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   sub_7 => sub_7
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   sub_8 => sub_8
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   truediv_1 => div_1
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   union => sub_5
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Graph fragment:
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%_cdist_forward, 1), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_14, %select_15), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%unsqueeze_6, %sub_3), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %minimum : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%select_18, %select_19), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %maximum : [num_users=1] = call_function[target=torch.ops.aten.maximum.default](args = (%select_16, %select_17), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%minimum, %maximum), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %clamp_min : [num_users=2] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_4, 0), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub_5 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_2, %clamp_min), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%clamp_min, %sub_5), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %maximum_1 : [num_users=1] = call_function[target=torch.ops.aten.maximum.default](args = (%select_22, %select_23), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %minimum_1 : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%select_20, %select_21), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%maximum_1, %minimum_1), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %clamp_min_1 : [num_users=2] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_6, 0), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_1, %sub_5), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_7, %clamp_min_1), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div, %div_1), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%sub_8,), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%neg, 1), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, %mul_5), kwargs = {})
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_poi_fused_add_clamp_div_maximum_minimum_mul_neg_sub_1 = async_compile.triton('triton_poi_fused_add_clamp_div_maximum_minimum_mul_neg_sub_1', '''
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     size_hints={'x': 256}, 
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     filename=__file__,
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_div_maximum_minimum_mul_neg_sub_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 17, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     min_elem_per_thread=0
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton.jit
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def triton_poi_fused_add_clamp_div_maximum_minimum_mul_neg_sub_1(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xnumel = 256
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x1 = xindex // 16
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x0 = (xindex % 16)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x2 = xindex
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp76 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp0 = tl.full([1], 1, tl.int64)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp3 = tmp0 < tmp0
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp4 = tl.load(in_ptr0 + (4*x1), tmp3 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp5 = tl.load(in_ptr0 + (1 + 4*x1), tmp3 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp6 = 0.5
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp7 = tmp5 * tmp6
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp8 = tmp4 - tmp7
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp9 = tl.full(tmp8.shape, 0.0, tmp8.dtype)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp10 = tl.where(tmp3, tmp8, tmp9)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp11 = tmp0 >= tmp0
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp12 = tl.full([1], 2, tl.int64)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp13 = tmp0 < tmp12
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp14 = tl.load(in_ptr0 + (4*x1), tmp11 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp15 = tl.load(in_ptr0 + (1 + 4*x1), tmp11 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp16 = 0.5
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp17 = tmp15 * tmp16
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp18 = tmp14 + tmp17
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp19 = tl.full(tmp18.shape, 0.0, tmp18.dtype)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp20 = tl.where(tmp11, tmp18, tmp19)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp21 = tl.where(tmp3, tmp10, tmp20)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp22 = tmp1 >= tmp1
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp23 = tmp1 < tmp0
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp24 = tl.load(in_ptr0 + (4*x1), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp25 = tl.load(in_ptr0 + (1 + 4*x1), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp26 = 0.5
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp27 = tmp25 * tmp26
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp28 = tmp24 - tmp27
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp29 = tl.full(tmp28.shape, 0.0, tmp28.dtype)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp30 = tl.where(tmp23, tmp28, tmp29)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp31 = tmp1 >= tmp0
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp32 = tmp1 < tmp12
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp33 = tl.load(in_ptr0 + (4*x1), tmp31 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp34 = tl.load(in_ptr0 + (1 + 4*x1), tmp31 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp35 = 0.5
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp36 = tmp34 * tmp35
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp37 = tmp33 + tmp36
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp38 = tl.full(tmp37.shape, 0.0, tmp37.dtype)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp39 = tl.where(tmp31, tmp37, tmp38)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp40 = tl.where(tmp23, tmp30, tmp39)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp41 = tmp21 - tmp40
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp42 = tl.load(in_ptr1 + (4*x0), tmp3 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp43 = tl.load(in_ptr1 + (1 + 4*x0), tmp3 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp44 = tmp43 * tmp6
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp45 = tmp42 - tmp44
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp46 = tl.full(tmp45.shape, 0.0, tmp45.dtype)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp47 = tl.where(tmp3, tmp45, tmp46)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp48 = tl.load(in_ptr1 + (4*x0), tmp11 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp49 = tl.load(in_ptr1 + (1 + 4*x0), tmp11 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp50 = tmp49 * tmp16
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp51 = tmp48 + tmp50
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp52 = tl.full(tmp51.shape, 0.0, tmp51.dtype)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp53 = tl.where(tmp11, tmp51, tmp52)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp54 = tl.where(tmp3, tmp47, tmp53)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp55 = tl.load(in_ptr1 + (4*x0), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp56 = tl.load(in_ptr1 + (1 + 4*x0), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp57 = tmp56 * tmp26
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp58 = tmp55 - tmp57
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp59 = tl.full(tmp58.shape, 0.0, tmp58.dtype)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp60 = tl.where(tmp23, tmp58, tmp59)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp61 = tl.load(in_ptr1 + (4*x0), tmp31 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp62 = tl.load(in_ptr1 + (1 + 4*x0), tmp31 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp63 = tmp62 * tmp35
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp64 = tmp61 + tmp63
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp65 = tl.full(tmp64.shape, 0.0, tmp64.dtype)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp66 = tl.where(tmp31, tmp64, tmp65)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp67 = tl.where(tmp23, tmp60, tmp66)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp68 = tmp54 - tmp67
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp69 = tmp41 + tmp68
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp70 = triton_helpers.minimum(tmp21, tmp54)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp71 = triton_helpers.maximum(tmp40, tmp67)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp72 = tmp70 - tmp71
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp73 = triton_helpers.maximum(tmp21, tmp54)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp74 = triton_helpers.minimum(tmp40, tmp67)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp75 = tmp73 - tmp74
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp77 = 1.0
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp78 = tmp76 * tmp77
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp79 = 0.0
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp80 = triton_helpers.maximum(tmp72, tmp79)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp81 = tmp69 - tmp80
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp82 = tmp80 / tmp81
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp83 = triton_helpers.maximum(tmp75, tmp79)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp84 = tmp83 - tmp81
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp85 = tmp84 / tmp83
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp86 = tmp82 - tmp85
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp87 = -tmp86
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp88 = tmp87 * tmp77
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp89 = tmp78 + tmp88
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp89, xmask)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] ''', device_str='cuda')
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] async_compile.wait(globals())
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] del async_compile
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def call(args):
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     arg0_1, arg1_1 = args
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     args.clear()
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4), (16, 4, 1))
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4), (16, 4, 1))
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         torch.cuda.set_device(0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf0 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [tgt_spans], Original ATen: [aten.cat]
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused_cat_0.run(arg1_1, buf0, 64, grid=grid(64), stream=stream0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         del arg1_1
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [cost_span], Original ATen: [aten._cdist_forward]
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf1 = torch.ops.aten._cdist_forward.default(reinterpret_tensor(arg0_1, (16, 4), (4, 1), 0), buf0, 1.0, None)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf2 = buf1
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         del buf1
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf6 = buf2; del buf2  # reuse
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mul_4, areas2, add_2, right, left, sub_4, inter, union, iou, right_1, left_1, sub_6, enclosing_area, sub_7, truediv_1, sub_8, cost_giou, mul_5, C], Original ATen: [aten.mul, aten.sub, aten.add, aten.minimum, aten.maximum, aten.clamp, aten.div, aten.neg]
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused_add_clamp_div_maximum_minimum_mul_neg_sub_1.run(buf6, arg0_1, buf0, 256, grid=grid(256), stream=stream0)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         del arg0_1
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         del buf0
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     buf7 = empty_strided_cpu((4, 4, 16), (64, 16, 1), torch.float32)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     buf7.copy_(reinterpret_tensor(buf6, (4, 4, 16), (64, 16, 1), 0), False)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     return (buf7, )
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     arg0_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     arg1_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] if __name__ == "__main__":
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:18:31.550000 2780644 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0204 16:18:31.560000 2780644 site-packages/torch/_inductor/graph.py:2053] [1/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/cs/ccsjhk7wcmo7bl3tndhrtdijqfmrbv4m7fk36o6t66xkeqag6frj.py
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] Output code: 
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # AOT ID: ['4_inference']
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import torch
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import math
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import random
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import os
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import tempfile
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from math import inf, nan
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch import device, empty_strided
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     grid,
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     split_scan_grid,
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     grid_combo_kernels,
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     start_graph,
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     end_graph,
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     cooperative_reduction_grid,
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] aten = torch.ops.aten
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] async_compile = AsyncCompile()
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # kernel path: inductor_cache/az/cazq5m6vqq4vldqpzepr5b7cr4btbt4rwgikrclf5wamkaclpm5g.py
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Topologically Sorted Source Nodes: [tgt_spans], Original ATen: [aten.cat]
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Source node to ATen node mapping:
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   tgt_spans => cat
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Graph fragment:
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %cat : [num_users=5] = call_function[target=torch.ops.aten.cat.default](args = ([%select, %select_1, %select_2, %select_3],), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_poi_fused_cat_0 = async_compile.triton('triton_poi_fused_cat_0', '''
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     size_hints={'x': 64}, 
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     filename=__file__,
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     min_elem_per_thread=0
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton.jit
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def triton_poi_fused_cat_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xnumel = 64
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xmask = xindex < xnumel
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x1 = xindex // 4
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x0 = (xindex % 4)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x2 = xindex
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp0 = x1
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp4 = tmp0 < tmp3
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 4*(x1)), tmp4 & xmask, other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp7 = tl.full([1], 8, tl.int64)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp8 = tmp0 < tmp7
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp9 = tmp6 & tmp8
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp10 = tl.load(in_ptr0 + (16 + x0 + 4*((-4) + x1)), tmp9 & xmask, other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp11 = tmp0 >= tmp7
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp12 = tl.full([1], 12, tl.int64)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp13 = tmp0 < tmp12
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp14 = tmp11 & tmp13
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp15 = tl.load(in_ptr0 + (32 + x0 + 4*((-8) + x1)), tmp14 & xmask, other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp16 = tmp0 >= tmp12
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp17 = tl.full([1], 16, tl.int64)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp18 = tmp0 < tmp17
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp19 = tl.load(in_ptr0 + (48 + x0 + 4*((-12) + x1)), tmp16 & xmask, other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp20 = tl.where(tmp14, tmp15, tmp19)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp21 = tl.where(tmp9, tmp10, tmp20)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp22 = tl.where(tmp4, tmp5, tmp21)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp22, xmask)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] ''', device_str='cuda')
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # kernel path: inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Topologically Sorted Source Nodes: [mul_4, areas2, add_2, right, left, sub_4, inter, union, iou, right_1, left_1, sub_6, enclosing_area, sub_7, truediv_1, sub_8, cost_giou, mul_5, C], Original ATen: [aten.mul, aten.sub, aten.add, aten.minimum, aten.maximum, aten.clamp, aten.div, aten.neg]
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Source node to ATen node mapping:
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   C => add_3
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   add_2 => add_2
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   areas2 => sub_3
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   cost_giou => neg
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   enclosing_area => clamp_min_1
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   inter => clamp_min
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   iou => div
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   left => maximum
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   left_1 => minimum_1
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   mul_4 => mul_4
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   mul_5 => mul_5
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   right => minimum
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   right_1 => maximum_1
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   sub_4 => sub_4
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   sub_6 => sub_6
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   sub_7 => sub_7
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   sub_8 => sub_8
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   truediv_1 => div_1
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   union => sub_5
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] # Graph fragment:
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%_cdist_forward, 1), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_14, %select_15), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%unsqueeze_6, %sub_3), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %minimum : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%select_18, %select_19), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %maximum : [num_users=1] = call_function[target=torch.ops.aten.maximum.default](args = (%select_16, %select_17), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%minimum, %maximum), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %clamp_min : [num_users=2] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_4, 0), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub_5 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_2, %clamp_min), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%clamp_min, %sub_5), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %maximum_1 : [num_users=1] = call_function[target=torch.ops.aten.maximum.default](args = (%select_22, %select_23), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %minimum_1 : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%select_20, %select_21), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%maximum_1, %minimum_1), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %clamp_min_1 : [num_users=2] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_6, 0), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_1, %sub_5), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_7, %clamp_min_1), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div, %div_1), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%sub_8,), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%neg, 1), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, %mul_5), kwargs = {})
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_poi_fused_add_clamp_div_maximum_minimum_mul_neg_sub_1 = async_compile.triton('triton_poi_fused_add_clamp_div_maximum_minimum_mul_neg_sub_1', '''
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] import triton.language as tl
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     size_hints={'x': 256}, 
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     filename=__file__,
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_div_maximum_minimum_mul_neg_sub_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 17, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     min_elem_per_thread=0
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] )
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] @triton.jit
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def triton_poi_fused_add_clamp_div_maximum_minimum_mul_neg_sub_1(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xnumel = 256
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     xmask = xindex < xnumel
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x1 = xindex // 16
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x0 = (xindex % 16)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     x2 = xindex
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp76 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp0 = tl.full([1], 1, tl.int64)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp3 = tmp0 < tmp0
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp4 = tl.load(in_ptr0 + (4*x1), tmp3 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp5 = tl.load(in_ptr0 + (1 + 4*x1), tmp3 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp6 = 0.5
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp7 = tmp5 * tmp6
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp8 = tmp4 - tmp7
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp9 = tl.full(tmp8.shape, 0.0, tmp8.dtype)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp10 = tl.where(tmp3, tmp8, tmp9)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp11 = tmp0 >= tmp0
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp12 = tl.full([1], 2, tl.int64)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp13 = tmp0 < tmp12
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp14 = tl.load(in_ptr0 + (4*x1), tmp11 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp15 = tl.load(in_ptr0 + (1 + 4*x1), tmp11 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp16 = 0.5
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp17 = tmp15 * tmp16
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp18 = tmp14 + tmp17
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp19 = tl.full(tmp18.shape, 0.0, tmp18.dtype)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp20 = tl.where(tmp11, tmp18, tmp19)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp21 = tl.where(tmp3, tmp10, tmp20)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp22 = tmp1 >= tmp1
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp23 = tmp1 < tmp0
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp24 = tl.load(in_ptr0 + (4*x1), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp25 = tl.load(in_ptr0 + (1 + 4*x1), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp26 = 0.5
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp27 = tmp25 * tmp26
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp28 = tmp24 - tmp27
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp29 = tl.full(tmp28.shape, 0.0, tmp28.dtype)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp30 = tl.where(tmp23, tmp28, tmp29)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp31 = tmp1 >= tmp0
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp32 = tmp1 < tmp12
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp33 = tl.load(in_ptr0 + (4*x1), tmp31 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp34 = tl.load(in_ptr0 + (1 + 4*x1), tmp31 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp35 = 0.5
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp36 = tmp34 * tmp35
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp37 = tmp33 + tmp36
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp38 = tl.full(tmp37.shape, 0.0, tmp37.dtype)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp39 = tl.where(tmp31, tmp37, tmp38)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp40 = tl.where(tmp23, tmp30, tmp39)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp41 = tmp21 - tmp40
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp42 = tl.load(in_ptr1 + (4*x0), tmp3 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp43 = tl.load(in_ptr1 + (1 + 4*x0), tmp3 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp44 = tmp43 * tmp6
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp45 = tmp42 - tmp44
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp46 = tl.full(tmp45.shape, 0.0, tmp45.dtype)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp47 = tl.where(tmp3, tmp45, tmp46)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp48 = tl.load(in_ptr1 + (4*x0), tmp11 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp49 = tl.load(in_ptr1 + (1 + 4*x0), tmp11 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp50 = tmp49 * tmp16
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp51 = tmp48 + tmp50
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp52 = tl.full(tmp51.shape, 0.0, tmp51.dtype)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp53 = tl.where(tmp11, tmp51, tmp52)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp54 = tl.where(tmp3, tmp47, tmp53)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp55 = tl.load(in_ptr1 + (4*x0), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp56 = tl.load(in_ptr1 + (1 + 4*x0), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp57 = tmp56 * tmp26
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp58 = tmp55 - tmp57
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp59 = tl.full(tmp58.shape, 0.0, tmp58.dtype)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp60 = tl.where(tmp23, tmp58, tmp59)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp61 = tl.load(in_ptr1 + (4*x0), tmp31 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp62 = tl.load(in_ptr1 + (1 + 4*x0), tmp31 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp63 = tmp62 * tmp35
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp64 = tmp61 + tmp63
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp65 = tl.full(tmp64.shape, 0.0, tmp64.dtype)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp66 = tl.where(tmp31, tmp64, tmp65)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp67 = tl.where(tmp23, tmp60, tmp66)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp68 = tmp54 - tmp67
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp69 = tmp41 + tmp68
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp70 = triton_helpers.minimum(tmp21, tmp54)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp71 = triton_helpers.maximum(tmp40, tmp67)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp72 = tmp70 - tmp71
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp73 = triton_helpers.maximum(tmp21, tmp54)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp74 = triton_helpers.minimum(tmp40, tmp67)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp75 = tmp73 - tmp74
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp77 = 1.0
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp78 = tmp76 * tmp77
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp79 = 0.0
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp80 = triton_helpers.maximum(tmp72, tmp79)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp81 = tmp69 - tmp80
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp82 = tmp80 / tmp81
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp83 = triton_helpers.maximum(tmp75, tmp79)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp84 = tmp83 - tmp81
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp85 = tmp84 / tmp83
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp86 = tmp82 - tmp85
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp87 = -tmp86
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp88 = tmp87 * tmp77
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tmp89 = tmp78 + tmp88
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp89, xmask)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] ''', device_str='cuda')
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] async_compile.wait(globals())
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] del async_compile
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def call(args):
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     arg0_1, arg1_1 = args
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     args.clear()
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4), (16, 4, 1))
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4), (16, 4, 1))
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf0 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [tgt_spans], Original ATen: [aten.cat]
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused_cat_0.run(arg1_1, buf0, 64, grid=grid(64), stream=stream0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         del arg1_1
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [cost_span], Original ATen: [aten._cdist_forward]
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf1 = torch.ops.aten._cdist_forward.default(reinterpret_tensor(arg0_1, (16, 4), (4, 1), 0), buf0, 1.0, None)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf2 = buf1
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         del buf1
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         buf6 = buf2; del buf2  # reuse
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mul_4, areas2, add_2, right, left, sub_4, inter, union, iou, right_1, left_1, sub_6, enclosing_area, sub_7, truediv_1, sub_8, cost_giou, mul_5, C], Original ATen: [aten.mul, aten.sub, aten.add, aten.minimum, aten.maximum, aten.clamp, aten.div, aten.neg]
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         triton_poi_fused_add_clamp_div_maximum_minimum_mul_neg_sub_1.run(buf6, arg0_1, buf0, 256, grid=grid(256), stream=stream0)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         del arg0_1
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]         del buf0
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     buf7 = empty_strided_cpu((4, 4, 16), (64, 16, 1), torch.float32)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     buf7.copy_(reinterpret_tensor(buf6, (4, 4, 16), (64, 16, 1), 0), False)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     return (buf7, )
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     arg0_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     arg1_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] if __name__ == "__main__":
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 21:07:24.678000 230987 site-packages/torch/_inductor/graph.py:2045] [1/0_1] [__output_code] 
V0205 21:07:24.683000 230987 site-packages/torch/_inductor/graph.py:2053] [1/0_1] [__output_code] Output code written to: inductor_cache/de/cdej3jguuqc43hob4uiz7i4cg2bpybpv7jy6we4d42yx3f6wwjyy.py
