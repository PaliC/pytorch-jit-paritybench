V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['31_forward']
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dq/cdq3h7u7hbia7enqve2p6q7tnmwfo7ieewqjxqkuspsdo3kpimq7.py
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y3), xmask & ymask)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x2 + 64*y1), tmp0, xmask & ymask)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/br/cbrawcou6jfkcef7j4lqvq5ibgjbtaqoz2lqhl3oe7ik5pqfjuht.py
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.relu]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => relu
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution,), kwargs = {})
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_1 = async_compile.triton('triton_poi_fused_convolution_relu_1', '''
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_1(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), None)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, None)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ak/caktzfbohhd6ltzx7dvzmh6qxm5xfs6wm6by2r2klwv5tldoikds.py
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3, input_4, B, sum_1], Original ATen: [aten.convolution, aten.relu, aten.add, aten.sum]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   B => add
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => convolution_1
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => relu_1
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu, %primals_4, %primals_5, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_1,), kwargs = {})
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%relu_1, 0.001), kwargs = {})
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%add, [1], True), kwargs = {})
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_convolution_relu_sum_2 = async_compile.triton('triton_per_fused_add_convolution_relu_sum_2', '''
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 16},
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_convolution_relu_sum_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_convolution_relu_sum_2(in_out_ptr0, in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (r1), None, eviction_policy='evict_last')
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 0, tl.int32)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.001
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [XBLOCK, RBLOCK])
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(xmask, tmp7, 0)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.sum(tmp9, 1)[:, None]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r1 + 16*x0), tmp2, xmask)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3e/c3ecwei2rataoseyblexmybp46ybodalvyngfnstjm27fe34lihf.py
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_4, B, B_widths_normed], Original ATen: [aten.relu, aten.add, aten.div]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   B => add
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   B_widths_normed => div
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => relu_1
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_1,), kwargs = {})
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%relu_1, 0.001), kwargs = {})
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%add, %sum_1), kwargs = {})
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_relu_3 = async_compile.triton('triton_poi_fused_add_div_relu_3', '''
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_relu_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_relu_3(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 16)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 16
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 16*x2 + 256*y1), xmask & ymask, eviction_policy='evict_last')
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1, 1], 0, tl.int32)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.001
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 / tmp5
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 16*y3), tmp6, xmask & ymask)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4p/c4p2gkn6frilawwsep24x6loh3h35kaaxfijdexjxkzr23fxionn.py
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [B_widths, B_widths_1, B_edges], Original ATen: [aten.mul, aten.constant_pad_nd, aten.cumsum]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   B_edges => cumsum
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   B_widths => mul
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   B_widths_1 => constant_pad_nd
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, 9.999), kwargs = {})
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %constant_pad_nd : [num_users=1] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%mul, [0, 0, 0, 0, 1, 0], 0.001), kwargs = {})
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cumsum : [num_users=2] = call_function[target=torch.ops.aten.cumsum.default](args = (%constant_pad_nd, 1), kwargs = {})
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_constant_pad_nd_cumsum_mul_4 = async_compile.triton('triton_per_fused_constant_pad_nd_cumsum_mul_4', '''
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def _triton_helper_fn_add0(arg0_0, arg1_0):
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = arg0_0 + arg1_0
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return tmp0
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 32},
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_constant_pad_nd_cumsum_mul_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_constant_pad_nd_cumsum_mul_4(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 17
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 32
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + r2
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1, 1], 0, tl.int64)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + ((-16) + x0 + 16*r2 + 256*x1), rmask & tmp2 & xmask, other=0.0)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 9.999
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.full(tmp5.shape, 0.001, tmp5.dtype)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp2, tmp5, tmp6)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.float32)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK, RBLOCK])
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10, = tl.associative_scan((tmp9,), 1, _triton_helper_fn_add0)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 16*r2 + 272*x1), tmp10, rmask & xmask)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hz/chzod2qv3c3htc37u7u6y5je4ag7emdgtnhgipw437rhem4peddk.py
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add_1, B_centers], Original ATen: [aten.add, aten.mul]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   B_centers => mul_1
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%slice_2, %slice_4), kwargs = {})
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, 0.5), kwargs = {})
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_5 = async_compile.triton('triton_poi_fused_add_mul_5', '''
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_5(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 256
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 272*x1), xmask)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (16 + x0 + 272*x1), xmask)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.5
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp4, xmask)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (256, 4, 1, 1), (4, 1, 1, 1))
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (256, ), (1, ))
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (16, 256, 1, 1), (256, 1, 1, 1))
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (16, ), (1, ))
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_3, buf0, 16, 16, grid=grid(16, 16), stream=stream0)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 256, 4, 4), (4096, 1, 1024, 256))
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.relu]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_1.run(buf2, primals_2, 16384, grid=grid(16384), stream=stream0)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(buf2, primals_4, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 16, 4, 4), (256, 1, 64, 16))
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf3; del buf3  # reuse
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 1, 4, 4), (16, 1, 4, 1), torch.float32)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, input_4, B, sum_1], Original ATen: [aten.convolution, aten.relu, aten.add, aten.sum]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_convolution_relu_sum_2.run(buf4, primals_5, buf5, 64, 16, grid=grid(64), stream=stream0)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 16, 4, 4), (256, 16, 4, 1), torch.float32)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4, B, B_widths_normed], Original ATen: [aten.relu, aten.add, aten.div]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_relu_3.run(buf4, buf5, buf6, 64, 16, grid=grid(64, 16), stream=stream0)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 17, 4, 4), (272, 16, 4, 1), torch.float32)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [B_widths, B_widths_1, B_edges], Original ATen: [aten.mul, aten.constant_pad_nd, aten.cumsum]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_constant_pad_nd_cumsum_mul_4.run(buf6, buf7, 64, 17, grid=grid(64), stream=stream0)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 16, 4, 4), (256, 16, 4, 1), torch.float32)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add_1, B_centers], Original ATen: [aten.add, aten.mul]
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_5.run(buf7, buf8, 1024, grid=grid(1024), stream=stream0)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf6, buf8, primals_1, buf0, primals_4, buf2, buf4, buf5, )
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((256, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((16, 256, 1, 1), (256, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:36:22.267000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:36:22.274000 3163268 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/o4/co45shvuv254kr5nj4opjuitwibslryz4mthdvemnpijtlzqmlol.py
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['31_forward']
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/dq/cdq3h7u7hbia7enqve2p6q7tnmwfo7ieewqjxqkuspsdo3kpimq7.py
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y3), xmask & ymask)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x2 + 64*y1), tmp0, xmask & ymask)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/br/cbrawcou6jfkcef7j4lqvq5ibgjbtaqoz2lqhl3oe7ik5pqfjuht.py
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.relu]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => relu
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution,), kwargs = {})
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_1 = async_compile.triton('triton_poi_fused_convolution_relu_1', '''
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_1(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), None)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, None)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ak/caktzfbohhd6ltzx7dvzmh6qxm5xfs6wm6by2r2klwv5tldoikds.py
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3, input_4, B, sum_1], Original ATen: [aten.convolution, aten.relu, aten.add, aten.sum]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   B => add
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => convolution_1
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => relu_1
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu, %primals_4, %primals_5, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_1,), kwargs = {})
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%relu_1, 0.001), kwargs = {})
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%add, [1], True), kwargs = {})
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_convolution_relu_sum_2 = async_compile.triton('triton_per_fused_add_convolution_relu_sum_2', '''
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 16},
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_convolution_relu_sum_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_convolution_relu_sum_2(in_out_ptr0, in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (r1), None, eviction_policy='evict_last')
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 0, tl.int32)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.001
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [XBLOCK, RBLOCK])
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(xmask, tmp7, 0)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.sum(tmp9, 1)[:, None]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r1 + 16*x0), tmp2, xmask)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3e/c3ecwei2rataoseyblexmybp46ybodalvyngfnstjm27fe34lihf.py
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_4, B, B_widths_normed], Original ATen: [aten.relu, aten.add, aten.div]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   B => add
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   B_widths_normed => div
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => relu_1
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_1,), kwargs = {})
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%relu_1, 0.001), kwargs = {})
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%add, %sum_1), kwargs = {})
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_relu_3 = async_compile.triton('triton_poi_fused_add_div_relu_3', '''
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_relu_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_relu_3(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 16)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 16
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 16*x2 + 256*y1), xmask & ymask, eviction_policy='evict_last')
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1, 1], 0, tl.int32)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.001
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 / tmp5
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 16*y3), tmp6, xmask & ymask)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4p/c4p2gkn6frilawwsep24x6loh3h35kaaxfijdexjxkzr23fxionn.py
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [B_widths, B_widths_1, B_edges], Original ATen: [aten.mul, aten.constant_pad_nd, aten.cumsum]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   B_edges => cumsum
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   B_widths => mul
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   B_widths_1 => constant_pad_nd
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, 9.999), kwargs = {})
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %constant_pad_nd : [num_users=1] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%mul, [0, 0, 0, 0, 1, 0], 0.001), kwargs = {})
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cumsum : [num_users=2] = call_function[target=torch.ops.aten.cumsum.default](args = (%constant_pad_nd, 1), kwargs = {})
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_constant_pad_nd_cumsum_mul_4 = async_compile.triton('triton_per_fused_constant_pad_nd_cumsum_mul_4', '''
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def _triton_helper_fn_add0(arg0_0, arg1_0):
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = arg0_0 + arg1_0
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return tmp0
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 32},
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_constant_pad_nd_cumsum_mul_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_constant_pad_nd_cumsum_mul_4(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 17
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 32
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + r2
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1, 1], 0, tl.int64)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + ((-16) + x0 + 16*r2 + 256*x1), rmask & tmp2 & xmask, other=0.0)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 9.999
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.full(tmp5.shape, 0.001, tmp5.dtype)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp2, tmp5, tmp6)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.float32)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK, RBLOCK])
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10, = tl.associative_scan((tmp9,), 1, _triton_helper_fn_add0)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 16*r2 + 272*x1), tmp10, rmask & xmask)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/hz/chzod2qv3c3htc37u7u6y5je4ag7emdgtnhgipw437rhem4peddk.py
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add_1, B_centers], Original ATen: [aten.add, aten.mul]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   B_centers => mul_1
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%slice_2, %slice_4), kwargs = {})
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, 0.5), kwargs = {})
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_5 = async_compile.triton('triton_poi_fused_add_mul_5', '''
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_5(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 256
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 272*x1), xmask)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (16 + x0 + 272*x1), xmask)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.5
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp4, xmask)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (256, 4, 1, 1), (4, 1, 1, 1))
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (256, ), (1, ))
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (16, 256, 1, 1), (256, 1, 1, 1))
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (16, ), (1, ))
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_3, buf0, 16, 16, grid=grid(16, 16), stream=stream0)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 256, 4, 4), (4096, 1, 1024, 256))
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.relu]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_1.run(buf2, primals_2, 16384, grid=grid(16384), stream=stream0)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(buf2, primals_4, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 16, 4, 4), (256, 1, 64, 16))
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf3; del buf3  # reuse
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 1, 4, 4), (16, 1, 4, 1), torch.float32)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, input_4, B, sum_1], Original ATen: [aten.convolution, aten.relu, aten.add, aten.sum]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_convolution_relu_sum_2.run(buf4, primals_5, buf5, 64, 16, grid=grid(64), stream=stream0)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 16, 4, 4), (256, 16, 4, 1), torch.float32)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4, B, B_widths_normed], Original ATen: [aten.relu, aten.add, aten.div]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_relu_3.run(buf4, buf5, buf6, 64, 16, grid=grid(64, 16), stream=stream0)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 17, 4, 4), (272, 16, 4, 1), torch.float32)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [B_widths, B_widths_1, B_edges], Original ATen: [aten.mul, aten.constant_pad_nd, aten.cumsum]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_constant_pad_nd_cumsum_mul_4.run(buf6, buf7, 64, 17, grid=grid(64), stream=stream0)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 16, 4, 4), (256, 16, 4, 1), torch.float32)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add_1, B_centers], Original ATen: [aten.add, aten.mul]
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_5.run(buf7, buf8, 1024, grid=grid(1024), stream=stream0)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf6, buf8, primals_1, buf0, primals_4, buf2, buf4, buf5, )
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((256, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((16, 256, 1, 1), (256, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 21:25:06.420000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:25:06.427000 624249 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/ou/courotrtvdk5og7trv3eopdu734bry3plprqw6q2ebur4okxvq6l.py
