V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_inference']
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/f3/cf3ptqr6irifg4mbd6s4lzl6sohkbm25xaqjl6ezm2lit67cwwus.py
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, mean, setitem, mul_1, mean_1, setitem_1, mul_2, mean_2, setitem_2, mul_3, mean_3, setitem_3], Original ATen: [aten.mul, aten.mean, aten.copy]
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_1 => mean_1
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_2 => mean_2
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_3 => mean_3
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem => copy
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem_1 => copy_1
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem_2 => copy_2
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem_3 => copy_3
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %arg1_1), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul, [1]), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%select, %mean), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%slice_12, %slice_16), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul_1, [1]), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy_1 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_22, %mean_1), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %slice_scatter_default : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%select_int, %copy_1, 2, 1, 9223372036854775807), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%slice_31, %slice_35), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_2 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul_2, [1]), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy_2 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_41, %mean_2), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %slice_scatter_default_1 : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%select_int_1, %copy_2, 2, 2, 9223372036854775807), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%slice_50, %slice_54), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_3 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul_3, [1]), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy_3 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_60, %mean_3), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %slice_scatter_default_2 : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%select_int_2, %copy_3, 2, 3, 9223372036854775807), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_copy_mean_mul_0 = async_compile.triton('triton_poi_fused_copy_mean_mul_0', '''
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_copy_mean_mul_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 32, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_copy_mean_mul_0(in_ptr0, in_ptr1, out_ptr0, out_ptr1, out_ptr2, out_ptr3, xnumel, XBLOCK : tl.constexpr):
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 4)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = ((xindex // 4) % 4)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*x1), xmask)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 64*x1), xmask)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (16 + x0 + 64*x1), xmask)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (16 + x0 + 64*x1), xmask)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr1 + (32 + x0 + 64*x1), xmask)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (48 + x0 + 64*x1), xmask)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (48 + x0 + 64*x1), xmask)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 + tmp5
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 * tmp8
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp6 + tmp9
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp10 + tmp13
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 4.0
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 / tmp15
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = x2
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 1, tl.int64)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 >= tmp18
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (x0 + 64*x1), tmp19 & xmask, other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr1 + ((-1) + x0 + 64*x1), tmp19 & xmask, other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 * tmp21
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (16 + x0 + 64*x1), tmp19 & xmask, other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (15 + x0 + 64*x1), tmp19 & xmask, other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp24
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp22 + tmp25
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (32 + x0 + 64*x1), tmp19 & xmask, other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr1 + (31 + x0 + 64*x1), tmp19 & xmask, other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 * tmp28
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp26 + tmp29
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + (48 + x0 + 64*x1), tmp19 & xmask, other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr1 + (47 + x0 + 64*x1), tmp19 & xmask, other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 * tmp32
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp30 + tmp33
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = 4.0
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 / tmp35
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.full(tmp36.shape, 0.0, tmp36.dtype)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp19, tmp36, tmp37)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.full([1], 1, tl.int32)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.full([1], 0, tl.int32)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 == tmp40
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = 0.0
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.where(tmp41, tmp16, tmp42)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.where(tmp19, tmp38, tmp43)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.full([1], 2, tl.int64)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp17 >= tmp45
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr0 + (x0 + 64*x1), tmp46 & xmask, other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.load(in_ptr1 + ((-2) + x0 + 64*x1), tmp46 & xmask, other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp47 * tmp48
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr0 + (16 + x0 + 64*x1), tmp46 & xmask, other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr1 + (14 + x0 + 64*x1), tmp46 & xmask, other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp50 * tmp51
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp49 + tmp52
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_ptr0 + (32 + x0 + 64*x1), tmp46 & xmask, other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.load(in_ptr1 + (30 + x0 + 64*x1), tmp46 & xmask, other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp54 * tmp55
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp53 + tmp56
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.load(in_ptr0 + (48 + x0 + 64*x1), tmp46 & xmask, other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tl.load(in_ptr1 + (46 + x0 + 64*x1), tmp46 & xmask, other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp58 * tmp59
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp57 + tmp60
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = 4.0
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp61 / tmp62
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.full(tmp63.shape, 0.0, tmp63.dtype)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.where(tmp46, tmp63, tmp64)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.full([1], 2, tl.int32)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp66 == tmp39
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp66 == tmp40
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.where(tmp68, tmp16, tmp42)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tl.where(tmp67, tmp44, tmp69)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.where(tmp46, tmp65, tmp70)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tl.full([1], 3, tl.int64)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp17 >= tmp72
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.load(in_ptr0 + (3 + 4*x3 + 64*x1), tmp73 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tl.load(in_ptr1 + (4*x3 + 64*x1), tmp73 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp74 * tmp75
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.load(in_ptr0 + (19 + 4*x3 + 64*x1), tmp73 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.load(in_ptr1 + (16 + 4*x3 + 64*x1), tmp73 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp77 * tmp78
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp76 + tmp79
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tl.load(in_ptr0 + (35 + 4*x3 + 64*x1), tmp73 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tl.load(in_ptr1 + (32 + 4*x3 + 64*x1), tmp73 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp81 * tmp82
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp80 + tmp83
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tl.load(in_ptr0 + (51 + 4*x3 + 64*x1), tmp73 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tl.load(in_ptr1 + (48 + 4*x3 + 64*x1), tmp73 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp85 * tmp86
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp84 + tmp87
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = 4.0
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp88 / tmp89
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tl.full(tmp90.shape, 0.0, tmp90.dtype)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tl.where(tmp73, tmp90, tmp91)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.full([1], 3, tl.int32)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tmp93 == tmp66
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp93 == tmp39
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp93 == tmp40
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.where(tmp96, tmp16, tmp42)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.where(tmp95, tmp44, tmp97)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tl.where(tmp94, tmp71, tmp98)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tl.where(tmp73, tmp92, tmp99)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp16, xmask)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x4), tmp44, xmask)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x4), tmp71, xmask)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (x4), tmp100, xmask)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bx/cbxt73qxbpifza5geu346xvhhsaopcmbsa4f62cg3jwnnttzewrv.py
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cost_volume, mul, mean, setitem], Original ATen: [aten.new_zeros, aten.mul, aten.mean, aten.copy]
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cost_volume => full_default
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem => copy
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=3] = call_function[target=torch.ops.aten.full.default](args = ([4, 4, 4, 4], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %arg1_1), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul, [1]), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%select, %mean), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %select_scatter_default : [num_users=4] = call_function[target=torch.ops.aten.select_scatter.default](args = (%full_default, %copy, 1, 0), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %select_scatter_default_1 : [num_users=4] = call_function[target=torch.ops.aten.select_scatter.default](args = (%select_scatter_default, %slice_scatter_default, 1, 1), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %select_scatter_default_2 : [num_users=4] = call_function[target=torch.ops.aten.select_scatter.default](args = (%select_scatter_default_1, %slice_scatter_default_1, 1, 2), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %select_scatter_default_3 : [num_users=1] = call_function[target=torch.ops.aten.select_scatter.default](args = (%select_scatter_default_2, %slice_scatter_default_2, 1, 3), kwargs = {})
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_copy_mean_mul_new_zeros_1 = async_compile.triton('triton_poi_fused_copy_mean_mul_new_zeros_1', '''
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_copy_mean_mul_new_zeros_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_copy_mean_mul_new_zeros_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 3, tl.int32)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([1], 2, tl.int32)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 == tmp4
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 == tmp7
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 0, tl.int32)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp0 == tmp10
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 0.0
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp11, tmp12, tmp13)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp8, tmp9, tmp14)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp5, tmp6, tmp15)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.where(tmp2, tmp3, tmp16)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, mean, setitem, mul_1, mean_1, setitem_1, mul_2, mean_2, setitem_2, mul_3, mean_3, setitem_3], Original ATen: [aten.mul, aten.mean, aten.copy]
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_copy_mean_mul_0.run(arg0_1, arg1_1, buf0, buf1, buf2, buf3, 64, grid=grid(64), stream=stream0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cost_volume, mul, mean, setitem], Original ATen: [aten.new_zeros, aten.mul, aten.mean, aten.copy]
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_copy_mean_mul_new_zeros_1.run(buf3, buf2, buf1, buf0, buf4, 256, grid=grid(256), stream=stream0)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf4, )
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:45:15.174000 4112891 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:45:15.179000 4112891 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ke/ckeyqhsplhb75ndwykl6xgmoqkejvzwpj6wvb2zml65pb3jy47a6.py
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_inference']
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/f3/cf3ptqr6irifg4mbd6s4lzl6sohkbm25xaqjl6ezm2lit67cwwus.py
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, mean, setitem, mul_1, mean_1, setitem_1, mul_2, mean_2, setitem_2, mul_3, mean_3, setitem_3], Original ATen: [aten.mul, aten.mean, aten.copy]
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_1 => mean_1
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_2 => mean_2
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_3 => mean_3
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem => copy
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem_1 => copy_1
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem_2 => copy_2
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem_3 => copy_3
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %arg1_1), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul, [1]), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%select, %mean), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%slice_12, %slice_16), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul_1, [1]), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy_1 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_22, %mean_1), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %slice_scatter_default : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%select_int, %copy_1, 2, 1, 9223372036854775807), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%slice_31, %slice_35), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_2 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul_2, [1]), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy_2 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_41, %mean_2), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %slice_scatter_default_1 : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%select_int_1, %copy_2, 2, 2, 9223372036854775807), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%slice_50, %slice_54), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_3 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul_3, [1]), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy_3 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_60, %mean_3), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %slice_scatter_default_2 : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%select_int_2, %copy_3, 2, 3, 9223372036854775807), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_copy_mean_mul_0 = async_compile.triton('triton_poi_fused_copy_mean_mul_0', '''
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_copy_mean_mul_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 32, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_copy_mean_mul_0(in_ptr0, in_ptr1, out_ptr0, out_ptr1, out_ptr2, out_ptr3, xnumel, XBLOCK : tl.constexpr):
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 4)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = ((xindex // 4) % 4)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*x1), xmask)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 64*x1), xmask)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (16 + x0 + 64*x1), xmask)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (16 + x0 + 64*x1), xmask)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr1 + (32 + x0 + 64*x1), xmask)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (48 + x0 + 64*x1), xmask)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (48 + x0 + 64*x1), xmask)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 + tmp5
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 * tmp8
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp6 + tmp9
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp10 + tmp13
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 4.0
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 / tmp15
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = x2
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 1, tl.int64)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 >= tmp18
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (x0 + 64*x1), tmp19 & xmask, other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr1 + ((-1) + x0 + 64*x1), tmp19 & xmask, other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 * tmp21
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (16 + x0 + 64*x1), tmp19 & xmask, other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (15 + x0 + 64*x1), tmp19 & xmask, other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp24
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp22 + tmp25
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (32 + x0 + 64*x1), tmp19 & xmask, other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr1 + (31 + x0 + 64*x1), tmp19 & xmask, other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 * tmp28
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp26 + tmp29
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + (48 + x0 + 64*x1), tmp19 & xmask, other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr1 + (47 + x0 + 64*x1), tmp19 & xmask, other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 * tmp32
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp30 + tmp33
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = 4.0
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 / tmp35
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.full(tmp36.shape, 0.0, tmp36.dtype)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp19, tmp36, tmp37)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.full([1], 1, tl.int32)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.full([1], 0, tl.int32)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 == tmp40
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = 0.0
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.where(tmp41, tmp16, tmp42)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.where(tmp19, tmp38, tmp43)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.full([1], 2, tl.int64)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp17 >= tmp45
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr0 + (x0 + 64*x1), tmp46 & xmask, other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.load(in_ptr1 + ((-2) + x0 + 64*x1), tmp46 & xmask, other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp47 * tmp48
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr0 + (16 + x0 + 64*x1), tmp46 & xmask, other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr1 + (14 + x0 + 64*x1), tmp46 & xmask, other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp50 * tmp51
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp49 + tmp52
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_ptr0 + (32 + x0 + 64*x1), tmp46 & xmask, other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.load(in_ptr1 + (30 + x0 + 64*x1), tmp46 & xmask, other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp54 * tmp55
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp53 + tmp56
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.load(in_ptr0 + (48 + x0 + 64*x1), tmp46 & xmask, other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tl.load(in_ptr1 + (46 + x0 + 64*x1), tmp46 & xmask, other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp58 * tmp59
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp57 + tmp60
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = 4.0
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp61 / tmp62
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.full(tmp63.shape, 0.0, tmp63.dtype)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.where(tmp46, tmp63, tmp64)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.full([1], 2, tl.int32)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp66 == tmp39
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp66 == tmp40
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.where(tmp68, tmp16, tmp42)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tl.where(tmp67, tmp44, tmp69)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.where(tmp46, tmp65, tmp70)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tl.full([1], 3, tl.int64)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp17 >= tmp72
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.load(in_ptr0 + (3 + 4*x3 + 64*x1), tmp73 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tl.load(in_ptr1 + (4*x3 + 64*x1), tmp73 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp74 * tmp75
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.load(in_ptr0 + (19 + 4*x3 + 64*x1), tmp73 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.load(in_ptr1 + (16 + 4*x3 + 64*x1), tmp73 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp77 * tmp78
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp76 + tmp79
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tl.load(in_ptr0 + (35 + 4*x3 + 64*x1), tmp73 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tl.load(in_ptr1 + (32 + 4*x3 + 64*x1), tmp73 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp81 * tmp82
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp80 + tmp83
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tl.load(in_ptr0 + (51 + 4*x3 + 64*x1), tmp73 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tl.load(in_ptr1 + (48 + 4*x3 + 64*x1), tmp73 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp85 * tmp86
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp84 + tmp87
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = 4.0
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp88 / tmp89
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tl.full(tmp90.shape, 0.0, tmp90.dtype)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tl.where(tmp73, tmp90, tmp91)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.full([1], 3, tl.int32)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tmp93 == tmp66
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp93 == tmp39
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp93 == tmp40
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.where(tmp96, tmp16, tmp42)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.where(tmp95, tmp44, tmp97)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tl.where(tmp94, tmp71, tmp98)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tl.where(tmp73, tmp92, tmp99)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp16, xmask)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x4), tmp44, xmask)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x4), tmp71, xmask)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (x4), tmp100, xmask)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/bx/cbxt73qxbpifza5geu346xvhhsaopcmbsa4f62cg3jwnnttzewrv.py
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cost_volume, mul, mean, setitem], Original ATen: [aten.new_zeros, aten.mul, aten.mean, aten.copy]
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cost_volume => full_default
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem => copy
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=3] = call_function[target=torch.ops.aten.full.default](args = ([4, 4, 4, 4], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %arg1_1), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul, [1]), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%select, %mean), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %select_scatter_default : [num_users=4] = call_function[target=torch.ops.aten.select_scatter.default](args = (%full_default, %copy, 1, 0), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %select_scatter_default_1 : [num_users=4] = call_function[target=torch.ops.aten.select_scatter.default](args = (%select_scatter_default, %slice_scatter_default, 1, 1), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %select_scatter_default_2 : [num_users=4] = call_function[target=torch.ops.aten.select_scatter.default](args = (%select_scatter_default_1, %slice_scatter_default_1, 1, 2), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %select_scatter_default_3 : [num_users=1] = call_function[target=torch.ops.aten.select_scatter.default](args = (%select_scatter_default_2, %slice_scatter_default_2, 1, 3), kwargs = {})
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_copy_mean_mul_new_zeros_1 = async_compile.triton('triton_poi_fused_copy_mean_mul_new_zeros_1', '''
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_copy_mean_mul_new_zeros_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_copy_mean_mul_new_zeros_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 3, tl.int32)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([1], 2, tl.int32)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 == tmp4
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 == tmp7
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 0, tl.int32)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp0 == tmp10
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 0.0
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp11, tmp12, tmp13)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp8, tmp9, tmp14)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp5, tmp6, tmp15)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.where(tmp2, tmp3, tmp16)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, mean, setitem, mul_1, mean_1, setitem_1, mul_2, mean_2, setitem_2, mul_3, mean_3, setitem_3], Original ATen: [aten.mul, aten.mean, aten.copy]
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_copy_mean_mul_0.run(arg0_1, arg1_1, buf0, buf1, buf2, buf3, 64, grid=grid(64), stream=stream0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cost_volume, mul, mean, setitem], Original ATen: [aten.new_zeros, aten.mul, aten.mean, aten.copy]
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_copy_mean_mul_new_zeros_1.run(buf3, buf2, buf1, buf0, buf4, 256, grid=grid(256), stream=stream0)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf4, )
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:35:26.014000 2597288 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:35:26.019000 2597288 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/zt/cztf5sxog6deb5m6i2qtd5szc4q4fjolp7hgu7ivwginmrcklmyl.py
