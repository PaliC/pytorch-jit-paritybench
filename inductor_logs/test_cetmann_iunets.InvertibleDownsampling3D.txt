V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['6_forward']
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/md/cmdhzrj5t4vm3baeiqavcnmjo7ilocy3abyelbyuarocit2zeuyb.py
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [skew_symmetric_matrix, autograd_function_apply], Original ATen: [aten.sub, aten.eye, aten.add]
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   autograd_function_apply => add, eq, full_default, full_default_1, iota, sub_1, where
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   skew_symmetric_matrix => sub
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_1, %permute), kwargs = {})
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=2] = call_function[target=torch.ops.prims.iota.default](args = (8,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Tensor](args = (%unsqueeze, %iota), kwargs = {})
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], 1), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%eq, %full_default, %full_default_1), kwargs = {})
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%where, %sub), kwargs = {})
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%where, %sub), kwargs = {})
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_eye_sub_0 = async_compile.triton('triton_poi_fused_add_eye_sub_0', '''
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 32, 'x': 8}, tile_hint=TileHint.DEFAULT,
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_eye_sub_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_eye_sub_0(in_ptr0, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 32
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 8)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 8
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (x2 + 8*y3), xmask & ymask, eviction_policy='evict_last')
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (y0 + 8*x2 + 64*y1), xmask & ymask, eviction_policy='evict_last')
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = y0
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = x2
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 - tmp7
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 + tmp8
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp5 - tmp8
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 8*y3), tmp9, xmask & ymask)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2 + 8*y3), tmp10, xmask & ymask)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/br/cbrraxky35ydr7zop5wgspjd5qeqj5tf5j2xlxny5yxn5mac5ljj.py
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reshape], Original ATen: [aten.clone]
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reshape => clone
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%linalg_lu_solve,), kwargs = {memory_format: torch.contiguous_format})
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_1 = async_compile.triton('triton_poi_fused_clone_1', '''
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 32, 'x': 8}, tile_hint=TileHint.SQUARE,
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 32
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 8)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 8
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 8*x2 + 64*y1), xmask & ymask, eviction_policy='evict_last')
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 8*y3), tmp0, xmask & ymask)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2 = args
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 8, 8), (64, 8, 1))
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 8, 8), (64, 8, 1), torch.float32)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 8, 8), (64, 8, 1), torch.float32)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [skew_symmetric_matrix, autograd_function_apply], Original ATen: [aten.sub, aten.eye, aten.add]
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_eye_sub_0.run(primals_1, buf0, buf5, 32, 8, grid=grid(32, 8), stream=stream0)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [skew_symmetric_matrix, autograd_function_apply], Original ATen: [aten.sub, aten.eye, aten.add, aten.linalg_lu_factor_ex]
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = torch.ops.aten.linalg_lu_factor_ex.default(buf0)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1[0]
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf1[1]
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [autograd_function_apply], Original ATen: [aten.linalg_lu_solve]
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = torch.ops.aten.linalg_lu_solve.default(buf2, buf3, buf5)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf6
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.linalg_lu_solve]
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = torch.ops.aten.linalg_lu_solve.default(buf2, buf3, buf7)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf2, (4, 8, 8), (64, 8, 1), 0); del buf2  # reuse
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reshape], Original ATen: [aten.clone]
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_1.run(buf7, buf8, 32, 8, grid=grid(32, 8), stream=stream0)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = buf10
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv3d], Original ATen: [aten.convolution]
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(reinterpret_tensor(primals_2, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), reinterpret_tensor(buf8, (32, 1, 2, 2, 2), (8, 0, 4, 2, 1), 0), stride=(2, 2, 2), padding=(0, 0, 0), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=4, bias=None)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (1, 32, 2, 2, 2), (256, 8, 4, 2, 1))
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf9, (32, 2, 2, 2), (8, 4, 2, 1), 0), buf5, reinterpret_tensor(buf8, (32, 1, 2, 2, 2), (8, 8, 4, 2, 1), 0), reinterpret_tensor(primals_2, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), buf11, )
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 8, 8), (64, 8, 1), device='cuda:0', dtype=torch.float32)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2])
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:21:09.729000 1456122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:21:09.733000 1456122 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/g3/cg3j4mbv3pogzr26k4o6lqt3bydkjhtztlkequ6gr3ltfzhlqt3f.py
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['6_forward']
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/md/cmdhzrj5t4vm3baeiqavcnmjo7ilocy3abyelbyuarocit2zeuyb.py
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [skew_symmetric_matrix, autograd_function_apply], Original ATen: [aten.sub, aten.eye, aten.add]
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   autograd_function_apply => add, eq, full_default, full_default_1, iota, sub_1, where
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   skew_symmetric_matrix => sub
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_1, %permute), kwargs = {})
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=2] = call_function[target=torch.ops.prims.iota.default](args = (8,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Tensor](args = (%unsqueeze, %iota), kwargs = {})
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], 1), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%eq, %full_default, %full_default_1), kwargs = {})
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%where, %sub), kwargs = {})
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%where, %sub), kwargs = {})
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_eye_sub_0 = async_compile.triton('triton_poi_fused_add_eye_sub_0', '''
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 32, 'x': 8}, tile_hint=TileHint.DEFAULT,
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_eye_sub_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_eye_sub_0(in_ptr0, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 32
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 8)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 8
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (x2 + 8*y3), xmask & ymask, eviction_policy='evict_last')
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (y0 + 8*x2 + 64*y1), xmask & ymask, eviction_policy='evict_last')
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = y0
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = x2
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 - tmp7
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 + tmp8
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp5 - tmp8
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 8*y3), tmp9, xmask & ymask)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2 + 8*y3), tmp10, xmask & ymask)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/br/cbrraxky35ydr7zop5wgspjd5qeqj5tf5j2xlxny5yxn5mac5ljj.py
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [reshape], Original ATen: [aten.clone]
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reshape => clone
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%linalg_lu_solve,), kwargs = {memory_format: torch.contiguous_format})
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_1 = async_compile.triton('triton_poi_fused_clone_1', '''
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 32, 'x': 8}, tile_hint=TileHint.SQUARE,
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 32
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 8)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 8
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 8*x2 + 64*y1), xmask & ymask, eviction_policy='evict_last')
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 8*y3), tmp0, xmask & ymask)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2 = args
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 8, 8), (64, 8, 1))
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 8, 8), (64, 8, 1), torch.float32)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 8, 8), (64, 8, 1), torch.float32)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [skew_symmetric_matrix, autograd_function_apply], Original ATen: [aten.sub, aten.eye, aten.add]
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_eye_sub_0.run(primals_1, buf0, buf5, 32, 8, grid=grid(32, 8), stream=stream0)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [skew_symmetric_matrix, autograd_function_apply], Original ATen: [aten.sub, aten.eye, aten.add, aten.linalg_lu_factor_ex]
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = torch.ops.aten.linalg_lu_factor_ex.default(buf0)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1[0]
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf1[1]
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [autograd_function_apply], Original ATen: [aten.linalg_lu_solve]
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = torch.ops.aten.linalg_lu_solve.default(buf2, buf3, buf5)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf6
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.linalg_lu_solve]
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = torch.ops.aten.linalg_lu_solve.default(buf2, buf3, buf7)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf2, (4, 8, 8), (64, 8, 1), 0); del buf2  # reuse
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [reshape], Original ATen: [aten.clone]
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_1.run(buf7, buf8, 32, 8, grid=grid(32, 8), stream=stream0)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = buf10
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv3d], Original ATen: [aten.convolution]
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(reinterpret_tensor(primals_2, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), reinterpret_tensor(buf8, (32, 1, 2, 2, 2), (8, 0, 4, 2, 1), 0), stride=(2, 2, 2), padding=(0, 0, 0), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=4, bias=None)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (1, 32, 2, 2, 2), (256, 8, 4, 2, 1))
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf9, (32, 2, 2, 2), (8, 4, 2, 1), 0), buf5, reinterpret_tensor(buf8, (32, 1, 2, 2, 2), (8, 8, 4, 2, 1), 0), reinterpret_tensor(primals_2, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1), 0), buf11, )
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 8, 8), (64, 8, 1), device='cuda:0', dtype=torch.float32)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2])
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:10:55.187000 2860658 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:55.191000 2860658 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/ob/cobfyz4rimqwmh6qiy4vvw46wdj4zjm5s5bl44ap3gbkanxq7zmq.py
