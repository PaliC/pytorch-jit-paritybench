V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['6_forward']
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/mo/cmou2w6ypwfesr66qyio6vebwoievyohbautbah3jcobupm6jnhc.py
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [contiguous], Original ATen: [aten.clone]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   contiguous => clone
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_0 = async_compile.triton('triton_poi_fused_clone_0', '''
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_0(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, YBLOCK])
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 + tmp2
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp3, xmask & ymask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zg/czg3gjf5ebpydz5tvbsbkbhsltfcmlxext3agd7my6zujeoad75n.py
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_1 => convolution_1
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_1, %primals_5, %primals_6, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_1 = async_compile.triton('triton_poi_fused_convolution_1', '''
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_1(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (0))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 + tmp2
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp3, xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ka/ckaszpmweykiuduuei53cezianbc6ssovcxkrsniucjzv2z5wddz.py
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [truediv, A1_1, mul, A1_2], Original ATen: [aten.div, aten.tanh, aten.mul, aten.add]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   A1_1 => tanh
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   A1_2 => add
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%bmm, 4), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%div,), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%tanh, %primals_7), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%select, %mul), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_mul_tanh_2 = async_compile.triton('triton_poi_fused_add_div_mul_tanh_2', '''
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_mul_tanh_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_mul_tanh_2(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (0))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.25
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = libdevice.tanh(tmp3)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 * tmp6
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 + tmp7
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dh/cdhi2s74qcfelt3ftqi2imhz7gzabtdbetfjodmv24226m62jfti.py
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [truediv_1, A1_4, mul_1, A1_5], Original ATen: [aten.div, aten.tanh, aten.mul, aten.add]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   A1_4 => tanh_1
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   A1_5 => add_1
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_1 => div_1
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%bmm_2, 4), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh_1 : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%div_1,), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%tanh_1, %primals_7), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%select_1, %mul_1), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_mul_tanh_3 = async_compile.triton('triton_poi_fused_add_div_mul_tanh_3', '''
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_mul_tanh_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_mul_tanh_3(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4 + x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (0))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.25
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = libdevice.tanh(tmp3)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 * tmp6
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 + tmp7
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3g/c3gk3nzccsxvui3c5xnmex7u2zsnel23wk7xo5qkuhwniqzvgwvd.py
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [truediv_2, A1_7, mul_2, A1_8], Original ATen: [aten.div, aten.tanh, aten.mul, aten.add]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   A1_7 => tanh_2
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   A1_8 => add_3
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_2 => div_2
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%bmm_4, 4), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh_2 : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%div_2,), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%tanh_2, %primals_7), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%select_2, %mul_2), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_mul_tanh_4 = async_compile.triton('triton_poi_fused_add_div_mul_tanh_4', '''
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_mul_tanh_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_mul_tanh_4(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (8 + x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (0))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.25
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = libdevice.tanh(tmp3)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 * tmp6
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 + tmp7
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fw/cfwbrpllsnikie6ltoubiw3toof6kkimjmegcc7fxhqji6qawnuz.py
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [z, z_1, y, z_2, y_1, y_2, y_3, y_4], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y => add_2
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_1 => add_4
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_2 => add_6, mul_4, mul_5, sub
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_3 => add_7
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_4 => relu
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   z => convolution_2
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   z_1 => convolution_5
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   z_2 => convolution_8
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%view_9, %primals_8, %primals_9, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_5 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%view_19, %primals_14, %primals_15, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_5, %convolution_2), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_8 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%view_29, %primals_20, %primals_21, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_8, %add_2), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %unsqueeze_1), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_5), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_7), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_6, %primals_1), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=3] = call_function[target=torch.ops.aten.relu.default](args = (%add_7,), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_5 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_5', '''
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 11, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_5(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x3), xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr3 + (x3), xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr6 + (x1), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr7 + (x1), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr8 + (x1), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr9 + (x3), xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 + tmp8
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 + tmp9
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 + tmp26
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.full([1], 0, tl.int32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = triton_helpers.maximum(tmp28, tmp27)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp10, xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp29, xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lc/clcjraomlyt6peg5t6yliguitbnmmqktxz6vhmc5xjgckezt253l.py
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [se], Original ATen: [aten.mean]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   se => mean
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%relu, [-2]), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_6 = async_compile.triton('triton_poi_fused_mean_6', '''
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_6(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 16*x1), xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4 + x0 + 16*x1), xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (8 + x0 + 16*x1), xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (12 + x0 + 16*x1), xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5f/c5f2f2ycxsescrrmns4kl4w7nynmlngvdk22f55xhm2a7wrv6g3a.py
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv1d], Original ATen: [aten.convolution]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv1d => convolution_9
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_9 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%mean, %primals_26, %primals_27, [1], [1], [1], False, [0], 1), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_7 = async_compile.triton('triton_poi_fused_convolution_7', '''
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_7(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (0))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 + tmp2
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp3, xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sy/csyvr2asnny4lioslav2z34iu4m4l5g5y3iyi4apgqddnmxeu43z.py
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_3, y_5], Original ATen: [aten.mul, aten.add]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_6
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_5 => add_8
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%relu, %unsqueeze_8), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_6, %relu), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_8 = async_compile.triton('triton_poi_fused_add_mul_8', '''
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_8', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_8(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0 + 4*x2), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.sigmoid(tmp1)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 * tmp2
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp4, xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zt/czt5o6sqvrrbarrrm643h2c3xypfjgonfqqxtompysdzg6r2bwx4.py
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [se_1], Original ATen: [aten.mean]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   se_1 => mean_1
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%add_8, [-1]), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_9 = async_compile.triton('triton_poi_fused_mean_9', '''
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_9(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp8, xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dj/cdjmelsqpvdud7535abopzehr24erawpj7y2aeknutuzgqgan6tt.py
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_4, y_6], Original ATen: [aten.mul, aten.add]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_7
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_6 => add_9
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_8, %unsqueeze_9), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_7, %add_8), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_10 = async_compile.triton('triton_poi_fused_add_mul_10', '''
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_10(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x4), xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1 + 4*x3), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.sigmoid(tmp1)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 * tmp2
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp4, xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tz/ctzhw2ufum7lpp7zw66iqfiktkaoru35hzifwqbeuly5mdhmdkq6.py
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mean_2, se_2], Original ATen: [aten.mean]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_2 => mean_2
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   se_2 => mean_3
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_2 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%add_9, [-1]), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_3 : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%mean_2, [-1]), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_11 = async_compile.triton('triton_poi_fused_mean_11', '''
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_11(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (4 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (5 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (6 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (7 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (8 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (9 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (10 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (11 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (12 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (13 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr0 + (14 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (15 + 16*x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 / tmp7
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 + tmp16
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 + tmp23
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 / tmp7
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp17 + tmp25
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 + tmp28
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 + tmp30
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 / tmp7
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp26 + tmp34
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 / tmp7
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp36, xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/i6/ci6elgnoqgyqmrneqwvmsyupvzj4kscpafsnycetouomscsuiuyy.py
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [linear, se1_2], Original ATen: [aten.addmm, aten.relu]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear => add_tensor
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   se1_2 => relu_1
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default, %primals_31), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_tensor,), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_addmm_relu_12 = async_compile.triton('triton_poi_fused_addmm_relu_12', '''
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8}, 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_relu_12', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_addmm_relu_12(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 2)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/cf/ccfdmyi4onvx3j6xnoyfr2yismez2x5a47rjitodlcwlldz4rhun.py
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_5, y_7], Original ATen: [aten.mul, aten.add]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_5 => mul_8
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_7 => add_10
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_9, %unsqueeze_11), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %add_9), kwargs = {})
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_13 = async_compile.triton('triton_poi_fused_add_mul_13', '''
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_13', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_13(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.sigmoid(tmp1)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 * tmp2
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp0
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp4, xmask)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33 = args
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (1, 4, 1, 1), (4, 1, 1, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, ), (1, ))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (1, 4, 1, 1), (4, 1, 1, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (1, ), (1, ))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (1, ), (1, ))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (1, 4, 1, 1), (4, 1, 1, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (1, ), (1, ))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (1, 4, 1, 1), (4, 1, 1, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (1, ), (1, ))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (1, 4, 1, 1), (4, 1, 1, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (1, ), (1, ))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (1, 4, 1, 1), (4, 1, 1, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (1, ), (1, ))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (4, ), (1, ))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (4, ), (1, ))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (4, ), (1, ))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (4, ), (1, ))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (4, ), (1, ))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (1, 4, 3), (12, 3, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (1, ), (1, ))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (1, 4, 9), (36, 9, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (1, ), (1, ))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (2, 4), (4, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (2, ), (1, ))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (4, 2), (2, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (4, ), (1, ))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_1, primals_3, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(primals_1, primals_5, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 1, 4), (16, 4, 4, 1), torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [contiguous], Original ATen: [aten.clone]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_0.run(buf0, primals_4, buf2, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = reinterpret_tensor(buf1, (4, 1, 4, 4), (16, 1, 4, 1), 0); del buf1  # reuse
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_1.run(buf3, primals_6, 64, grid=grid(64), stream=stream0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = reinterpret_tensor(buf0, (4, 4, 4), (16, 4, 1), 0); del buf0  # reuse
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul], Original ATen: [aten.bmm]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf2, (4, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf3, (4, 4, 4), (16, 4, 1), 0), out=buf4)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv, A1_1, mul, A1_2], Original ATen: [aten.div, aten.tanh, aten.mul, aten.add]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_mul_tanh_2.run(primals_2, buf4, primals_7, buf5, 64, grid=grid(64), stream=stream0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 16, 4), (64, 4, 1), torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv, A1_1, mul, A1_2, matmul_1], Original ATen: [aten.div, aten.tanh, aten.mul, aten.add, aten.bmm]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(primals_1, (4, 16, 4), (64, 4, 1), 0), buf5, out=buf6)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [z], Original ATen: [aten.convolution]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(reinterpret_tensor(buf6, (4, 4, 4, 4), (64, 16, 4, 1), 0), primals_8, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3], Original ATen: [aten.convolution]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(primals_1, primals_10, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_4], Original ATen: [aten.convolution]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(primals_1, primals_12, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf5, (4, 4, 1, 4), (16, 4, 4, 1), 0); del buf5  # reuse
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [contiguous_1], Original ATen: [aten.clone]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_0.run(buf8, primals_11, buf10, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf9, (4, 1, 4, 4), (16, 1, 4, 1), 0); del buf9  # reuse
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_4], Original ATen: [aten.convolution]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_1.run(buf11, primals_13, 64, grid=grid(64), stream=stream0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf8, (4, 4, 4), (16, 4, 1), 0); del buf8  # reuse
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_2], Original ATen: [aten.bmm]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf10, (4, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf11, (4, 4, 4), (16, 4, 1), 0), out=buf12)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv_1, A1_4, mul_1, A1_5], Original ATen: [aten.div, aten.tanh, aten.mul, aten.add]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_mul_tanh_3.run(primals_2, buf12, primals_7, buf13, 64, grid=grid(64), stream=stream0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 16, 4), (64, 4, 1), torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv_1, A1_4, mul_1, A1_5, matmul_3], Original ATen: [aten.div, aten.tanh, aten.mul, aten.add, aten.bmm]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(primals_1, (4, 16, 4), (64, 4, 1), 0), buf13, out=buf14)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [z_1], Original ATen: [aten.convolution]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = extern_kernels.convolution(reinterpret_tensor(buf14, (4, 4, 4, 4), (64, 16, 4, 1), 0), primals_14, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf15, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_6], Original ATen: [aten.convolution]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = extern_kernels.convolution(primals_1, primals_16, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf16, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_7], Original ATen: [aten.convolution]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = extern_kernels.convolution(primals_1, primals_18, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf17, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = reinterpret_tensor(buf13, (4, 4, 1, 4), (16, 4, 4, 1), 0); del buf13  # reuse
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [contiguous_2], Original ATen: [aten.clone]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_0.run(buf16, primals_17, buf18, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = reinterpret_tensor(buf17, (4, 1, 4, 4), (16, 1, 4, 1), 0); del buf17  # reuse
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_7], Original ATen: [aten.convolution]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_1.run(buf19, primals_19, 64, grid=grid(64), stream=stream0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_19
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = reinterpret_tensor(buf16, (4, 4, 4), (16, 4, 1), 0); del buf16  # reuse
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_4], Original ATen: [aten.bmm]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf18, (4, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf19, (4, 4, 4), (16, 4, 1), 0), out=buf20)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv_2, A1_7, mul_2, A1_8], Original ATen: [aten.div, aten.tanh, aten.mul, aten.add]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_mul_tanh_4.run(primals_2, buf20, primals_7, buf21, 64, grid=grid(64), stream=stream0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 16, 4), (64, 4, 1), torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv_2, A1_7, mul_2, A1_8, matmul_5], Original ATen: [aten.div, aten.tanh, aten.mul, aten.add, aten.bmm]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(primals_1, (4, 16, 4), (64, 4, 1), 0), buf21, out=buf22)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [z_2], Original ATen: [aten.convolution]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = extern_kernels.convolution(reinterpret_tensor(buf22, (4, 4, 4, 4), (64, 16, 4, 1), 0), primals_20, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf23, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = buf23; del buf23  # reuse
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [z, z_1, y, z_2, y_1, y_2, y_3, y_4], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_5.run(buf24, primals_21, buf15, primals_15, buf7, primals_9, primals_22, primals_23, primals_24, primals_25, primals_1, buf25, 256, grid=grid(256), stream=stream0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_21
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = buf21; del buf21  # reuse
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [se], Original ATen: [aten.mean]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_6.run(buf25, buf26, 64, grid=grid(64), stream=stream0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv1d], Original ATen: [aten.convolution]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = extern_kernels.convolution(buf26, primals_26, stride=(1,), padding=(1,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf27, (4, 1, 4), (4, 4, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = buf27; del buf27  # reuse
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv1d], Original ATen: [aten.convolution]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_7.run(buf28, primals_27, 16, grid=grid(16), stream=stream0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_27
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = buf25; del buf25  # reuse
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_3, y_5], Original ATen: [aten.mul, aten.add]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_8.run(buf29, buf28, 256, grid=grid(256), stream=stream0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [se_1], Original ATen: [aten.mean]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_9.run(buf29, buf30, 64, grid=grid(64), stream=stream0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv1d_1], Original ATen: [aten.convolution]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = extern_kernels.convolution(buf30, primals_28, stride=(1,), padding=(4,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf31, (4, 1, 4), (4, 4, 1))
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = buf31; del buf31  # reuse
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv1d_1], Original ATen: [aten.convolution]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_7.run(buf32, primals_29, 16, grid=grid(16), stream=stream0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_29
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = buf7; del buf7  # reuse
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_4, y_6], Original ATen: [aten.mul, aten.add]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_10.run(buf29, buf32, buf33, 256, grid=grid(256), stream=stream0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mean_2, se_2], Original ATen: [aten.mean]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_11.run(buf33, buf34, 16, grid=grid(16), stream=stream0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = empty_strided_cuda((4, 2), (2, 1), torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.addmm]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf34, reinterpret_tensor(primals_30, (4, 2), (1, 4), 0), out=buf35)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = buf35; del buf35  # reuse
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear, se1_2], Original ATen: [aten.addmm, aten.relu]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_relu_12.run(buf36, primals_31, 8, grid=grid(8), stream=stream0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_31
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_1], Original ATen: [aten.addmm]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_33, buf36, reinterpret_tensor(primals_32, (2, 4), (1, 2), 0), alpha=1, beta=1, out=buf37)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_33
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf38 = buf15; del buf15  # reuse
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_5, y_7], Original ATen: [aten.mul, aten.add]
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_13.run(buf33, buf37, buf38, 256, grid=grid(256), stream=stream0)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf38, primals_1, primals_3, primals_5, primals_7, primals_8, primals_10, primals_12, primals_14, primals_16, primals_18, primals_20, primals_22, primals_23, primals_24, primals_25, primals_26, primals_28, buf4, reinterpret_tensor(buf6, (4, 4, 4, 4), (64, 16, 4, 1), 0), buf12, reinterpret_tensor(buf14, (4, 4, 4, 4), (64, 16, 4, 1), 0), buf20, reinterpret_tensor(buf22, (4, 4, 4, 4), (64, 16, 4, 1), 0), buf24, buf26, buf28, buf29, buf30, buf32, buf33, buf34, buf36, buf37, primals_32, primals_30, reinterpret_tensor(buf18, (4, 4, 4), (16, 1, 4), 0), reinterpret_tensor(buf19, (4, 4, 4), (16, 1, 4), 0), reinterpret_tensor(buf10, (4, 4, 4), (16, 1, 4), 0), reinterpret_tensor(buf11, (4, 4, 4), (16, 1, 4), 0), reinterpret_tensor(buf2, (4, 4, 4), (16, 1, 4), 0), reinterpret_tensor(buf3, (4, 4, 4), (16, 1, 4), 0), )
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((1, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((1, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((1, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((1, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((1, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((1, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((1, 4, 3), (12, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((1, 4, 9), (36, 9, 1), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((2, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((4, 2), (2, 1), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33])
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:08:12.037000 1153647 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:08:12.056000 1153647 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/lh/clher7lui6ppqkmuwfpt3lqoa5uhcnxd6cwrp3js2qz2tjvhqnoj.py
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['6_forward']
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/mo/cmou2w6ypwfesr66qyio6vebwoievyohbautbah3jcobupm6jnhc.py
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [contiguous], Original ATen: [aten.clone]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   contiguous => clone
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_0 = async_compile.triton('triton_poi_fused_clone_0', '''
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_0(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, YBLOCK])
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 + tmp2
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp3, xmask & ymask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/zg/czg3gjf5ebpydz5tvbsbkbhsltfcmlxext3agd7my6zujeoad75n.py
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_1 => convolution_1
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_1, %primals_5, %primals_6, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_1 = async_compile.triton('triton_poi_fused_convolution_1', '''
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_1(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (0))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 + tmp2
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp3, xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ka/ckaszpmweykiuduuei53cezianbc6ssovcxkrsniucjzv2z5wddz.py
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [truediv, A1_1, mul, A1_2], Original ATen: [aten.div, aten.tanh, aten.mul, aten.add]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   A1_1 => tanh
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   A1_2 => add
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%bmm, 4), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%div,), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%tanh, %primals_7), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%select, %mul), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_mul_tanh_2 = async_compile.triton('triton_poi_fused_add_div_mul_tanh_2', '''
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_mul_tanh_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_mul_tanh_2(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (0))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.25
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = libdevice.tanh(tmp3)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 * tmp6
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 + tmp7
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/dh/cdhi2s74qcfelt3ftqi2imhz7gzabtdbetfjodmv24226m62jfti.py
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [truediv_1, A1_4, mul_1, A1_5], Original ATen: [aten.div, aten.tanh, aten.mul, aten.add]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   A1_4 => tanh_1
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   A1_5 => add_1
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_1 => div_1
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%bmm_2, 4), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh_1 : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%div_1,), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%tanh_1, %primals_7), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%select_1, %mul_1), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_mul_tanh_3 = async_compile.triton('triton_poi_fused_add_div_mul_tanh_3', '''
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_mul_tanh_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_mul_tanh_3(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4 + x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (0))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.25
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = libdevice.tanh(tmp3)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 * tmp6
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 + tmp7
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3g/c3gk3nzccsxvui3c5xnmex7u2zsnel23wk7xo5qkuhwniqzvgwvd.py
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [truediv_2, A1_7, mul_2, A1_8], Original ATen: [aten.div, aten.tanh, aten.mul, aten.add]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   A1_7 => tanh_2
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   A1_8 => add_3
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_2 => div_2
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%bmm_4, 4), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh_2 : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%div_2,), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%tanh_2, %primals_7), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%select_2, %mul_2), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_mul_tanh_4 = async_compile.triton('triton_poi_fused_add_div_mul_tanh_4', '''
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_mul_tanh_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_mul_tanh_4(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (8 + x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (0))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.25
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = libdevice.tanh(tmp3)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 * tmp6
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 + tmp7
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fw/cfwbrpllsnikie6ltoubiw3toof6kkimjmegcc7fxhqji6qawnuz.py
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [z, z_1, y, z_2, y_1, y_2, y_3, y_4], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y => add_2
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_1 => add_4
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_2 => add_6, mul_4, mul_5, sub
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_3 => add_7
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_4 => relu
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   z => convolution_2
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   z_1 => convolution_5
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   z_2 => convolution_8
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%view_9, %primals_8, %primals_9, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_5 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%view_19, %primals_14, %primals_15, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_5, %convolution_2), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_8 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%view_29, %primals_20, %primals_21, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_8, %add_2), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %unsqueeze_1), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_5), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_7), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_6, %primals_1), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=3] = call_function[target=torch.ops.aten.relu.default](args = (%add_7,), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_5 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_5', '''
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 11, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_5(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x3), xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr3 + (x3), xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr6 + (x1), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr7 + (x1), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr8 + (x1), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr9 + (x3), xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 + tmp8
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 + tmp9
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 + tmp26
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.full([1], 0, tl.int32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = triton_helpers.maximum(tmp28, tmp27)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp10, xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp29, xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/lc/clcjraomlyt6peg5t6yliguitbnmmqktxz6vhmc5xjgckezt253l.py
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [se], Original ATen: [aten.mean]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   se => mean
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%relu, [-2]), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_6 = async_compile.triton('triton_poi_fused_mean_6', '''
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_6(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 16*x1), xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4 + x0 + 16*x1), xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (8 + x0 + 16*x1), xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (12 + x0 + 16*x1), xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5f/c5f2f2ycxsescrrmns4kl4w7nynmlngvdk22f55xhm2a7wrv6g3a.py
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv1d], Original ATen: [aten.convolution]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv1d => convolution_9
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_9 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%mean, %primals_26, %primals_27, [1], [1], [1], False, [0], 1), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_7 = async_compile.triton('triton_poi_fused_convolution_7', '''
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_7(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (0))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 + tmp2
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp3, xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sy/csyvr2asnny4lioslav2z34iu4m4l5g5y3iyi4apgqddnmxeu43z.py
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_3, y_5], Original ATen: [aten.mul, aten.add]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_6
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_5 => add_8
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%relu, %unsqueeze_8), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_6, %relu), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_8 = async_compile.triton('triton_poi_fused_add_mul_8', '''
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_8', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_8(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0 + 4*x2), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.sigmoid(tmp1)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 * tmp2
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp4, xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/zt/czt5o6sqvrrbarrrm643h2c3xypfjgonfqqxtompysdzg6r2bwx4.py
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [se_1], Original ATen: [aten.mean]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   se_1 => mean_1
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%add_8, [-1]), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_9 = async_compile.triton('triton_poi_fused_mean_9', '''
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_9(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp8, xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/dj/cdjmelsqpvdud7535abopzehr24erawpj7y2aeknutuzgqgan6tt.py
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_4, y_6], Original ATen: [aten.mul, aten.add]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_7
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_6 => add_9
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_8, %unsqueeze_9), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_7, %add_8), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_10 = async_compile.triton('triton_poi_fused_add_mul_10', '''
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_10(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x4), xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1 + 4*x3), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.sigmoid(tmp1)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 * tmp2
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp4, xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/tz/ctzhw2ufum7lpp7zw66iqfiktkaoru35hzifwqbeuly5mdhmdkq6.py
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mean_2, se_2], Original ATen: [aten.mean]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_2 => mean_2
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   se_2 => mean_3
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_2 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%add_9, [-1]), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_3 : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%mean_2, [-1]), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_11 = async_compile.triton('triton_poi_fused_mean_11', '''
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_11(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (4 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (5 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (6 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (7 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (8 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (9 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (10 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (11 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (12 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (13 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr0 + (14 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (15 + 16*x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 / tmp7
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 + tmp16
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 + tmp23
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 / tmp7
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp17 + tmp25
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 + tmp28
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 + tmp30
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 / tmp7
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp26 + tmp34
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 / tmp7
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp36, xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/i6/ci6elgnoqgyqmrneqwvmsyupvzj4kscpafsnycetouomscsuiuyy.py
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [linear, se1_2], Original ATen: [aten.addmm, aten.relu]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear => add_tensor
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   se1_2 => relu_1
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default, %primals_31), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_tensor,), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_addmm_relu_12 = async_compile.triton('triton_poi_fused_addmm_relu_12', '''
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8}, 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_relu_12', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_addmm_relu_12(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 2)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/cf/ccfdmyi4onvx3j6xnoyfr2yismez2x5a47rjitodlcwlldz4rhun.py
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_5, y_7], Original ATen: [aten.mul, aten.add]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_5 => mul_8
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_7 => add_10
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_9, %unsqueeze_11), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %add_9), kwargs = {})
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_13 = async_compile.triton('triton_poi_fused_add_mul_13', '''
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_13', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_13(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.sigmoid(tmp1)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 * tmp2
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp0
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp4, xmask)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33 = args
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (1, 4, 1, 1), (4, 1, 1, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, ), (1, ))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (1, 4, 1, 1), (4, 1, 1, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (1, ), (1, ))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (1, ), (1, ))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (1, 4, 1, 1), (4, 1, 1, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (1, ), (1, ))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (1, 4, 1, 1), (4, 1, 1, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (1, ), (1, ))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (1, 4, 1, 1), (4, 1, 1, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (1, ), (1, ))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (1, 4, 1, 1), (4, 1, 1, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (1, ), (1, ))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (4, ), (1, ))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (4, ), (1, ))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (4, ), (1, ))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (4, ), (1, ))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (4, ), (1, ))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (1, 4, 3), (12, 3, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (1, ), (1, ))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (1, 4, 9), (36, 9, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (1, ), (1, ))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (2, 4), (4, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (2, ), (1, ))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (4, 2), (2, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (4, ), (1, ))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_1, primals_3, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(primals_1, primals_5, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 1, 4), (16, 4, 4, 1), torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [contiguous], Original ATen: [aten.clone]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_0.run(buf0, primals_4, buf2, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = reinterpret_tensor(buf1, (4, 1, 4, 4), (16, 1, 4, 1), 0); del buf1  # reuse
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_1.run(buf3, primals_6, 64, grid=grid(64), stream=stream0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = reinterpret_tensor(buf0, (4, 4, 4), (16, 4, 1), 0); del buf0  # reuse
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul], Original ATen: [aten.bmm]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf2, (4, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf3, (4, 4, 4), (16, 4, 1), 0), out=buf4)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv, A1_1, mul, A1_2], Original ATen: [aten.div, aten.tanh, aten.mul, aten.add]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_mul_tanh_2.run(primals_2, buf4, primals_7, buf5, 64, grid=grid(64), stream=stream0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 16, 4), (64, 4, 1), torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv, A1_1, mul, A1_2, matmul_1], Original ATen: [aten.div, aten.tanh, aten.mul, aten.add, aten.bmm]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(primals_1, (4, 16, 4), (64, 4, 1), 0), buf5, out=buf6)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [z], Original ATen: [aten.convolution]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(reinterpret_tensor(buf6, (4, 4, 4, 4), (64, 16, 4, 1), 0), primals_8, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3], Original ATen: [aten.convolution]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(primals_1, primals_10, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_4], Original ATen: [aten.convolution]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(primals_1, primals_12, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf5, (4, 4, 1, 4), (16, 4, 4, 1), 0); del buf5  # reuse
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [contiguous_1], Original ATen: [aten.clone]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_0.run(buf8, primals_11, buf10, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf9, (4, 1, 4, 4), (16, 1, 4, 1), 0); del buf9  # reuse
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_4], Original ATen: [aten.convolution]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_1.run(buf11, primals_13, 64, grid=grid(64), stream=stream0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf8, (4, 4, 4), (16, 4, 1), 0); del buf8  # reuse
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_2], Original ATen: [aten.bmm]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf10, (4, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf11, (4, 4, 4), (16, 4, 1), 0), out=buf12)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv_1, A1_4, mul_1, A1_5], Original ATen: [aten.div, aten.tanh, aten.mul, aten.add]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_mul_tanh_3.run(primals_2, buf12, primals_7, buf13, 64, grid=grid(64), stream=stream0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 16, 4), (64, 4, 1), torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv_1, A1_4, mul_1, A1_5, matmul_3], Original ATen: [aten.div, aten.tanh, aten.mul, aten.add, aten.bmm]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(primals_1, (4, 16, 4), (64, 4, 1), 0), buf13, out=buf14)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [z_1], Original ATen: [aten.convolution]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = extern_kernels.convolution(reinterpret_tensor(buf14, (4, 4, 4, 4), (64, 16, 4, 1), 0), primals_14, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf15, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_6], Original ATen: [aten.convolution]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = extern_kernels.convolution(primals_1, primals_16, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf16, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_7], Original ATen: [aten.convolution]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = extern_kernels.convolution(primals_1, primals_18, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf17, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = reinterpret_tensor(buf13, (4, 4, 1, 4), (16, 4, 4, 1), 0); del buf13  # reuse
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [contiguous_2], Original ATen: [aten.clone]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_0.run(buf16, primals_17, buf18, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = reinterpret_tensor(buf17, (4, 1, 4, 4), (16, 1, 4, 1), 0); del buf17  # reuse
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_7], Original ATen: [aten.convolution]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_1.run(buf19, primals_19, 64, grid=grid(64), stream=stream0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_19
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = reinterpret_tensor(buf16, (4, 4, 4), (16, 4, 1), 0); del buf16  # reuse
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_4], Original ATen: [aten.bmm]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf18, (4, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf19, (4, 4, 4), (16, 4, 1), 0), out=buf20)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv_2, A1_7, mul_2, A1_8], Original ATen: [aten.div, aten.tanh, aten.mul, aten.add]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_mul_tanh_4.run(primals_2, buf20, primals_7, buf21, 64, grid=grid(64), stream=stream0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 16, 4), (64, 4, 1), torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv_2, A1_7, mul_2, A1_8, matmul_5], Original ATen: [aten.div, aten.tanh, aten.mul, aten.add, aten.bmm]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(primals_1, (4, 16, 4), (64, 4, 1), 0), buf21, out=buf22)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [z_2], Original ATen: [aten.convolution]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = extern_kernels.convolution(reinterpret_tensor(buf22, (4, 4, 4, 4), (64, 16, 4, 1), 0), primals_20, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf23, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = buf23; del buf23  # reuse
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [z, z_1, y, z_2, y_1, y_2, y_3, y_4], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_5.run(buf24, primals_21, buf15, primals_15, buf7, primals_9, primals_22, primals_23, primals_24, primals_25, primals_1, buf25, 256, grid=grid(256), stream=stream0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_21
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = buf21; del buf21  # reuse
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [se], Original ATen: [aten.mean]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_6.run(buf25, buf26, 64, grid=grid(64), stream=stream0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv1d], Original ATen: [aten.convolution]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = extern_kernels.convolution(buf26, primals_26, stride=(1,), padding=(1,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf27, (4, 1, 4), (4, 4, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = buf27; del buf27  # reuse
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv1d], Original ATen: [aten.convolution]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_7.run(buf28, primals_27, 16, grid=grid(16), stream=stream0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_27
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = buf25; del buf25  # reuse
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_3, y_5], Original ATen: [aten.mul, aten.add]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_8.run(buf29, buf28, 256, grid=grid(256), stream=stream0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [se_1], Original ATen: [aten.mean]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_9.run(buf29, buf30, 64, grid=grid(64), stream=stream0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv1d_1], Original ATen: [aten.convolution]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = extern_kernels.convolution(buf30, primals_28, stride=(1,), padding=(4,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf31, (4, 1, 4), (4, 4, 1))
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = buf31; del buf31  # reuse
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv1d_1], Original ATen: [aten.convolution]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_7.run(buf32, primals_29, 16, grid=grid(16), stream=stream0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_29
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = buf7; del buf7  # reuse
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_4, y_6], Original ATen: [aten.mul, aten.add]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_10.run(buf29, buf32, buf33, 256, grid=grid(256), stream=stream0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mean_2, se_2], Original ATen: [aten.mean]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_11.run(buf33, buf34, 16, grid=grid(16), stream=stream0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = empty_strided_cuda((4, 2), (2, 1), torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.addmm]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf34, reinterpret_tensor(primals_30, (4, 2), (1, 4), 0), out=buf35)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = buf35; del buf35  # reuse
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear, se1_2], Original ATen: [aten.addmm, aten.relu]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_relu_12.run(buf36, primals_31, 8, grid=grid(8), stream=stream0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_31
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_1], Original ATen: [aten.addmm]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_33, buf36, reinterpret_tensor(primals_32, (2, 4), (1, 2), 0), alpha=1, beta=1, out=buf37)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_33
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf38 = buf15; del buf15  # reuse
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_5, y_7], Original ATen: [aten.mul, aten.add]
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_13.run(buf33, buf37, buf38, 256, grid=grid(256), stream=stream0)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf38, primals_1, primals_3, primals_5, primals_7, primals_8, primals_10, primals_12, primals_14, primals_16, primals_18, primals_20, primals_22, primals_23, primals_24, primals_25, primals_26, primals_28, buf4, reinterpret_tensor(buf6, (4, 4, 4, 4), (64, 16, 4, 1), 0), buf12, reinterpret_tensor(buf14, (4, 4, 4, 4), (64, 16, 4, 1), 0), buf20, reinterpret_tensor(buf22, (4, 4, 4, 4), (64, 16, 4, 1), 0), buf24, buf26, buf28, buf29, buf30, buf32, buf33, buf34, buf36, buf37, primals_32, primals_30, reinterpret_tensor(buf18, (4, 4, 4), (16, 1, 4), 0), reinterpret_tensor(buf19, (4, 4, 4), (16, 1, 4), 0), reinterpret_tensor(buf10, (4, 4, 4), (16, 1, 4), 0), reinterpret_tensor(buf11, (4, 4, 4), (16, 1, 4), 0), reinterpret_tensor(buf2, (4, 4, 4), (16, 1, 4), 0), reinterpret_tensor(buf3, (4, 4, 4), (16, 1, 4), 0), )
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((1, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((1, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((1, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((1, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((1, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((1, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((1, 4, 3), (12, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((1, 4, 9), (36, 9, 1), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((2, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((4, 2), (2, 1), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33])
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:57:33.026000 2466676 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:57:33.056000 2466676 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/az/cazoa4yw73puyww245a4my7dbkyfpuhm55nswai2e6ncg44gx3x4.py
