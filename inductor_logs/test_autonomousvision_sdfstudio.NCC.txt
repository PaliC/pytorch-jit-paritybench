V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_inference']
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qv/cqvimr6vhtvhqxmux6zmhe3elyght36ulzep6vaayga4zdxcqw6z.py
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_mean, x_normalized, y, y_mean, y_normalized, mul, norm, square, sum_2, square_1, sum_3, var, add, denom, add_1, ncc, square_2, sum_4, square_3, sum_5, setitem, clip, score], Original ATen: [aten.mean, aten.sub, aten.mul, aten.sum, aten.pow, aten.add, aten.sqrt, aten.div, aten.lift_fresh, aten.index_put, aten.clamp, aten.rsub]
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clip => clamp_max, clamp_min
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   denom => sqrt
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ncc => div
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm => sum_1
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   score => sub_2
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem => full_default, index_put
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   square => pow_1
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   square_1 => pow_2
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   square_2 => pow_3
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   square_3 => pow_4
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_3 => sum_3
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_4 => sum_4
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_5 => sum_5
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   var => mul_1
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => mean
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_mean => mean_2
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_normalized => sub
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y => mean_1
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_mean => mean_3
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_normalized => sub_1
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%arg0_1, [1]), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_2 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mean, [1, 2], True), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=3] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mean, %mean_2), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%arg1_1, [1]), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_3 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mean_1, [1, 2], True), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=3] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mean_1, %mean_3), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %sub_1), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [1, 2]), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub, 2), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1, 2]), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_1, 2), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_2, [1, 2]), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_2, %sum_3), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, 1e-06), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%add,), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sqrt, 1e-06), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_1, %add_1), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub, 2), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, [1, 2]), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_1, 2), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_4, [1, 2]), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 1.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cpu, pin_memory: False})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_put : [num_users=1] = call_function[target=torch.ops.aten.index_put_.default](args = (%div, [%bitwise_or], %full_default), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%index_put, -1.0), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 1.0), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %clamp_max), kwargs = {})
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_clamp_div_index_put_lift_fresh_mean_mul_pow_rsub_sqrt_sub_sum_0 = async_compile.triton('triton_per_fused_add_clamp_div_index_put_lift_fresh_mean_mul_pow_rsub_sqrt_sub_sum_0', '''
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_clamp_div_index_put_lift_fresh_mean_mul_pow_rsub_sqrt_sub_sum_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 7, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_clamp_div_index_put_lift_fresh_mean_mul_pow_rsub_sqrt_sub_sum_0(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 64*x0), xmask, other=0.0)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (16 + r1 + 64*x0), xmask, other=0.0)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (32 + r1 + 64*x0), xmask, other=0.0)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (48 + r1 + 64*x0), xmask, other=0.0)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr1 + (r1 + 64*x0), xmask, other=0.0)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr1 + (16 + r1 + 64*x0), xmask, other=0.0)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr1 + (32 + r1 + 64*x0), xmask, other=0.0)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr1 + (48 + r1 + 64*x0), xmask, other=0.0)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK, RBLOCK])
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.where(xmask, tmp9, 0)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.sum(tmp11, 1)[:, None]
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 16.0
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 / tmp13
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp8 - tmp14
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 + tmp17
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 / tmp7
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.broadcast_to(tmp23, [XBLOCK, RBLOCK])
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(xmask, tmp24, 0)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.sum(tmp26, 1)[:, None]
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 / tmp13
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp23 - tmp28
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp15 * tmp29
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.broadcast_to(tmp30, [XBLOCK, RBLOCK])
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(xmask, tmp31, 0)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.sum(tmp33, 1)[:, None]
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp15 * tmp15
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.broadcast_to(tmp35, [XBLOCK, RBLOCK])
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(xmask, tmp36, 0)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.sum(tmp38, 1)[:, None]
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp29 * tmp29
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.broadcast_to(tmp40, [XBLOCK, RBLOCK])
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.where(xmask, tmp41, 0)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.sum(tmp43, 1)[:, None]
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = 0.01
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp39 < tmp45
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp44 < tmp45
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 | tmp47
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp39 * tmp44
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = 1e-06
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp49 + tmp50
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = libdevice.sqrt(tmp51)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52 + tmp50
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp34 / tmp53
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = 1.0
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.where(tmp48, tmp55, tmp54)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = -1.0
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = triton_helpers.maximum(tmp56, tmp57)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = triton_helpers.minimum(tmp58, tmp55)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp55 - tmp59
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp60, xmask)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf7; del buf7  # reuse
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf9; del buf9  # reuse
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_mean, x_normalized, y, y_mean, y_normalized, mul, norm, square, sum_2, square_1, sum_3, var, add, denom, add_1, ncc, square_2, sum_4, square_3, sum_5, setitem, clip, score], Original ATen: [aten.mean, aten.sub, aten.mul, aten.sum, aten.pow, aten.add, aten.sqrt, aten.div, aten.lift_fresh, aten.index_put, aten.clamp, aten.rsub]
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_clamp_div_index_put_lift_fresh_mean_mul_pow_rsub_sqrt_sub_sum_0.run(buf10, arg0_1, arg1_1, 4, 16, grid=grid(4), stream=stream0)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf10, (4, 1, 1, 1), (1, 1, 1, 1), 0), )
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:02:51.203000 1022209 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:02:51.206000 1022209 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/jx/cjx6u6q4xwcj4k54ydx4h6kodeirbo2u56ei54mq6fm65nn2saik.py
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_inference']
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qv/cqvimr6vhtvhqxmux6zmhe3elyght36ulzep6vaayga4zdxcqw6z.py
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_mean, x_normalized, y, y_mean, y_normalized, mul, norm, square, sum_2, square_1, sum_3, var, add, denom, add_1, ncc, square_2, sum_4, square_3, sum_5, setitem, clip, score], Original ATen: [aten.mean, aten.sub, aten.mul, aten.sum, aten.pow, aten.add, aten.sqrt, aten.div, aten.lift_fresh, aten.index_put, aten.clamp, aten.rsub]
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clip => clamp_max, clamp_min
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   denom => sqrt
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ncc => div
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm => sum_1
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   score => sub_2
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem => full_default, index_put
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   square => pow_1
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   square_1 => pow_2
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   square_2 => pow_3
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   square_3 => pow_4
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_3 => sum_3
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_4 => sum_4
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_5 => sum_5
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   var => mul_1
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => mean
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_mean => mean_2
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_normalized => sub
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y => mean_1
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_mean => mean_3
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_normalized => sub_1
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%arg0_1, [1]), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_2 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mean, [1, 2], True), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=3] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mean, %mean_2), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%arg1_1, [1]), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_3 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mean_1, [1, 2], True), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=3] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mean_1, %mean_3), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %sub_1), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [1, 2]), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub, 2), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1, 2]), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_1, 2), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_2, [1, 2]), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_2, %sum_3), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, 1e-06), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%add,), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sqrt, 1e-06), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_1, %add_1), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub, 2), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, [1, 2]), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_1, 2), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_4, [1, 2]), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 1.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cpu, pin_memory: False})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_put : [num_users=1] = call_function[target=torch.ops.aten.index_put_.default](args = (%div, [%bitwise_or], %full_default), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%index_put, -1.0), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 1.0), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %clamp_max), kwargs = {})
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_clamp_div_index_put_lift_fresh_mean_mul_pow_rsub_sqrt_sub_sum_0 = async_compile.triton('triton_per_fused_add_clamp_div_index_put_lift_fresh_mean_mul_pow_rsub_sqrt_sub_sum_0', '''
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_clamp_div_index_put_lift_fresh_mean_mul_pow_rsub_sqrt_sub_sum_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 7, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_clamp_div_index_put_lift_fresh_mean_mul_pow_rsub_sqrt_sub_sum_0(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 64*x0), xmask, other=0.0)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (16 + r1 + 64*x0), xmask, other=0.0)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (32 + r1 + 64*x0), xmask, other=0.0)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (48 + r1 + 64*x0), xmask, other=0.0)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr1 + (r1 + 64*x0), xmask, other=0.0)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr1 + (16 + r1 + 64*x0), xmask, other=0.0)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr1 + (32 + r1 + 64*x0), xmask, other=0.0)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr1 + (48 + r1 + 64*x0), xmask, other=0.0)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK, RBLOCK])
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.where(xmask, tmp9, 0)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.sum(tmp11, 1)[:, None]
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 16.0
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 / tmp13
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp8 - tmp14
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 + tmp17
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 / tmp7
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.broadcast_to(tmp23, [XBLOCK, RBLOCK])
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(xmask, tmp24, 0)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.sum(tmp26, 1)[:, None]
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 / tmp13
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp23 - tmp28
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp15 * tmp29
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.broadcast_to(tmp30, [XBLOCK, RBLOCK])
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(xmask, tmp31, 0)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.sum(tmp33, 1)[:, None]
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp15 * tmp15
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.broadcast_to(tmp35, [XBLOCK, RBLOCK])
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(xmask, tmp36, 0)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.sum(tmp38, 1)[:, None]
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp29 * tmp29
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.broadcast_to(tmp40, [XBLOCK, RBLOCK])
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.where(xmask, tmp41, 0)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.sum(tmp43, 1)[:, None]
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = 0.01
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp39 < tmp45
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp44 < tmp45
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 | tmp47
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp39 * tmp44
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = 1e-06
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp49 + tmp50
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = libdevice.sqrt(tmp51)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52 + tmp50
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp34 / tmp53
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = 1.0
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.where(tmp48, tmp55, tmp54)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = -1.0
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = triton_helpers.maximum(tmp56, tmp57)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = triton_helpers.minimum(tmp58, tmp55)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp55 - tmp59
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp60, xmask)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf7; del buf7  # reuse
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf9; del buf9  # reuse
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_mean, x_normalized, y, y_mean, y_normalized, mul, norm, square, sum_2, square_1, sum_3, var, add, denom, add_1, ncc, square_2, sum_4, square_3, sum_5, setitem, clip, score], Original ATen: [aten.mean, aten.sub, aten.mul, aten.sum, aten.pow, aten.add, aten.sqrt, aten.div, aten.lift_fresh, aten.index_put, aten.clamp, aten.rsub]
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_clamp_div_index_put_lift_fresh_mean_mul_pow_rsub_sqrt_sub_sum_0.run(buf10, arg0_1, arg1_1, 4, 16, grid=grid(4), stream=stream0)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf10, (4, 1, 1, 1), (1, 1, 1, 1), 0), )
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:52:03.598000 2332793 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:52:03.602000 2332793 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/ht/cht6x27ztfvmprrdz7yfxoq2itlqvla3gd3km7zv6cggc7r7hbzf.py
