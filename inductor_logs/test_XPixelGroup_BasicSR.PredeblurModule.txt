V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['22_forward']
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nn/cnnmqqrdsrk6yrwuuw2rci23ao6qaqsp2zmbcttwyo2slvja5agk.py
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d, feat_l1], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d => convolution
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l1 => gt, mul, where
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution, 0), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 0.1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=4] = call_function[target=torch.ops.aten.where.self](args = (%gt, %convolution, %mul), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_0 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_0', '''
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ed/cedwafzleuptb3g5krco4lr3qp4b4elovyv4aanve64gzt5q27gl.py
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_1, feat_l2], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_1 => convolution_1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l2 => gt_1, mul_1, where_1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%where, %primals_4, %primals_5, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_1 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_1, 0), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_1, 0.1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=4] = call_function[target=torch.ops.aten.where.self](args = (%gt_1, %convolution_1, %mul_1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_1 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_1', '''
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_1(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 1024) % 64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/mv/cmvhnjkq2bvzu7m7wd2cz6boqnikvprq36izrngyxxnip2aduh3o.py
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_2, feat_l3], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_2 => convolution_2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l3 => gt_2, mul_2, where_2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%where_1, %primals_6, %primals_7, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_2 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_2, 0), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_2, 0.1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_2 : [num_users=3] = call_function[target=torch.ops.aten.where.self](args = (%gt_2, %convolution_2, %mul_2), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_2 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_2', '''
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_2(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 65536
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 256) % 64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wj/cwjtsvusjqw7upwh5k532n2mvzkuaef4fdnsowdq72tbzay2hqkc.py
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_3, relu], Original ATen: [aten.convolution, aten.relu]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_3 => convolution_3
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   relu => relu
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%where_2, %primals_8, %primals_9, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_3,), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_3 = async_compile.triton('triton_poi_fused_convolution_relu_3', '''
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_3(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 65536
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 256) % 64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp4, None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bx/cbxyjpiflaovjccxwmcim6mp7in7wktxppqyqbzj6kuhdjgfiuye.py
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feat_l3_1], Original ATen: [aten._to_copy]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l3_1 => convert_element_type_1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_4 = async_compile.triton('triton_poi_fused__to_copy_4', '''
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32}, 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_4(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 - tmp2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.int32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp8, xmask)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/na/cnafovzlzomn6mfea2vw6x4avvdeh3uqdq4f3tk7mqrp6r3ouok6.py
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feat_l3_1], Original ATen: [aten.add, aten.clamp]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l3_1 => add_2, clamp_max
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_1, 1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%add_2, 15), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_5 = async_compile.triton('triton_poi_fused_add_clamp_5', '''
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32}, 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_5(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 - tmp2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.int32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 15, tl.int64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.minimum(tmp10, tmp11)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp12, xmask)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hk/chkrydkbgaw3qxqtv4q3n2iztbvq7xgjtt6ykso6wvqvf47y7zrp.py
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feat_l3_1], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l3_1 => add_1, clamp_max_2, clamp_min, clamp_min_2, convert_element_type, iota, mul_4, sub, sub_2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (32,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type, 0.5), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, 0.5), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_4, 0.5), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_3), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_2, 0.0), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6 = async_compile.triton('triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6', '''
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32}, 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 - tmp2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.int32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 - tmp9
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp10, tmp6)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 1.0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.minimum(tmp11, tmp12)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ot/cot6vcsquspjtzy7lxntn6lgtnpm2fshebqpzwzjtmeyiwig2yd3.py
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_5, relu_1], Original ATen: [aten.convolution, aten.relu]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_5 => convolution_5
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   relu_1 => relu_1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_5 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%where_1, %primals_12, %primals_13, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_5,), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_7 = async_compile.triton('triton_poi_fused_convolution_relu_7', '''
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_7(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 1024) % 64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp4, None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pj/cpjxtjxo3pvis2cu4nwj7uq37nuw3ooc2qde2el6c4ctiefzrbci.py
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out, mul, add, feat_l3_1, out_1, mul_1, add_1, feat_l2_1], Original ATen: [aten.convolution, aten.mul, aten.add, aten._unsafe_index, aten.sub]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_8
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l2_1 => add_9
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l3_1 => _unsafe_index, _unsafe_index_1, _unsafe_index_2, _unsafe_index_3, add_5, add_6, add_7, mul_6, mul_7, mul_8, sub_3, sub_4, sub_6
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_3
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_9
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => convolution_4
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => convolution_6
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_4 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu, %primals_10, %primals_11, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_4, 1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%where_2, %mul_3), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %clamp_max_2), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_6), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_3, %_unsafe_index_2), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %clamp_max_2), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, %mul_7), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_6, %add_5), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %clamp_max_3), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_5, %mul_8), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_6 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_1, %primals_14, %primals_15, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_6, 1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%where_1, %mul_9), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_8, %add_7), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_convolution_mul_sub_8 = async_compile.triton('triton_poi_fused__unsafe_index_add_convolution_mul_sub_8', '''
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr2': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*i64', 'in_ptr6': '*i64', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_convolution_mul_sub_8', 'mutated_arg_names': ['in_out_ptr2'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_convolution_mul_sub_8(in_out_ptr2, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, xnumel, XBLOCK : tl.constexpr):
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 32) % 32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 1024
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 1024) % 64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x6 = xindex
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr4 + (x2), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x1), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr7 + (x0), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr8 + (x1), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr9 + (x6), None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_out_ptr2 + (x6), None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr10 + (x2), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 16, tl.int32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (tmp8 + 16*tmp4 + 256*x5), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (tmp8 + 16*tmp4 + 256*x5), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1.0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp9 + tmp14
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 < 0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp18, tmp17, tmp16)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr2 + (tmp8 + 16*tmp19 + 256*x5), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr3 + (tmp8 + 16*tmp19 + 256*x5), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp11
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 * tmp13
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 + tmp23
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 + tmp1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 < 0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp27, tmp26, tmp25)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr2 + (tmp28 + 16*tmp19 + 256*x5), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr3 + (tmp28 + 16*tmp19 + 256*x5), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 + tmp11
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 * tmp13
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 + tmp32
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 - tmp24
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 * tmp35
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp24 + tmp36
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr2 + (tmp28 + 16*tmp4 + 256*x5), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr3 + (tmp28 + 16*tmp4 + 256*x5), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 + tmp11
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 * tmp13
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp38 + tmp41
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 - tmp15
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 * tmp35
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp15 + tmp44
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 - tmp37
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 * tmp47
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp50 + tmp51
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52 * tmp13
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp49 + tmp53
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp37 + tmp48
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp54 + tmp55
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr2 + (x6), tmp56, None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/db/cdbwn5e7uhtwidm43xwylc7zlxv2bkqd7ig5us6onssalacsqbbo.py
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feat_l2_2], Original ATen: [aten._to_copy]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l2_2 => convert_element_type_5
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_5 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_2, torch.int64), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_9 = async_compile.triton('triton_poi_fused__to_copy_9', '''
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_9(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 - tmp2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.int32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp8, xmask)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/np/cnpqucy5c6y423rv6t4yeni3kji7q7vhd5vi5xztzvffsv2u37du.py
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feat_l2_2], Original ATen: [aten.add, aten.clamp]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l2_2 => add_12, clamp_max_4
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_5, 1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_4 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%add_12, 31), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_10 = async_compile.triton('triton_poi_fused_add_clamp_10', '''
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_10(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 - tmp2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.int32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 31, tl.int64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.minimum(tmp10, tmp11)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp12, xmask)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/j6/cj6s6wxlmnn6tpffbgflincrwwzqpyaoepj4b47uxswdxsx7nfu7.py
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feat_l2_2], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l2_2 => add_11, clamp_max_6, clamp_min_4, clamp_min_6, convert_element_type_4, iota_2, mul_11, sub_7, sub_9
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota_2 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (64,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_4 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_2, torch.float32), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_4, 0.5), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_11, 0.5), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_11, 0.5), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_4 : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_7, 0.0), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_4, %convert_element_type_7), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_6 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_9, 0.0), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_6 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_6, 1.0), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_add_arange_clamp_mul_sub_11 = async_compile.triton('triton_poi_fused__to_copy_add_arange_clamp_mul_sub_11', '''
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_arange_clamp_mul_sub_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_add_arange_clamp_mul_sub_11(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 - tmp2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.int32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 - tmp9
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp10, tmp6)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 1.0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.minimum(tmp11, tmp12)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xz/cxz5k7gfmpgndwufjjncqks4or3iexksvysm6a7uaq2ae4hegv4m.py
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_9, relu_3], Original ATen: [aten.convolution, aten.relu]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_9 => convolution_9
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   relu_3 => relu_3
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_9 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%where, %primals_20, %primals_21, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_3 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_9,), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_12 = async_compile.triton('triton_poi_fused_convolution_relu_12', '''
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_12', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_12(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp4, None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pf/cpfhqll36plhjx4svedgy56ynopyapaisra5iqdzfy5322yb22t2.py
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_3, mul_3, feat_l1_1], Original ATen: [aten.convolution, aten.mul, aten.add]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l1_1 => add_18
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_16
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_3 => convolution_10
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_10 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_3, %primals_22, %primals_23, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_10, 1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_18 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%where, %mul_16), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_convolution_mul_13 = async_compile.triton('triton_poi_fused_add_convolution_mul_13', '''
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_mul_13', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_convolution_mul_13(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_out_ptr0 + (x3), None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1.0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 + tmp5
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp6, None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vm/cvmnzdqsbe5xxt2u4eyxvx57sccymhsq4s6eu7fsmxdyheabmjor.py
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_2, mul_2, add_3, feat_l2_2, out_4, mul_4, feat_l1_2, feat_l1_3], Original ATen: [aten.convolution, aten.mul, aten.add, aten._unsafe_index, aten.sub]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_10
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l1_2 => add_19
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l1_3 => add_20
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l2_2 => _unsafe_index_4, _unsafe_index_5, _unsafe_index_6, _unsafe_index_7, add_15, add_16, add_17, mul_13, mul_14, mul_15, sub_10, sub_11, sub_13
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_10
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_17
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => convolution_8
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_4 => convolution_12
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_8 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_2, %primals_18, %primals_19, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_8, 1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_9, %mul_10), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_4 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_10, [None, None, %convert_element_type_5, %convert_element_type_7]), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_5 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_10, [None, None, %convert_element_type_5, %clamp_max_5]), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_6 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_10, [None, None, %clamp_max_4, %convert_element_type_7]), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_7 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_10, [None, None, %clamp_max_4, %clamp_max_5]), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_5, %_unsafe_index_4), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_10, %clamp_max_6), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_15 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_4, %mul_13), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_7, %_unsafe_index_6), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %clamp_max_6), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_16 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_6, %mul_14), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_13 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_16, %add_15), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_13, %clamp_max_7), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_17 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_15, %mul_15), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_12 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_4, %primals_26, %primals_27, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_12, 1), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_19 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_18, %mul_17), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_20 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_19, %add_17), kwargs = {})
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_convolution_mul_sub_14 = async_compile.triton('triton_poi_fused__unsafe_index_add_convolution_mul_sub_14', '''
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr2': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*i64', 'in_ptr6': '*i64', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_convolution_mul_sub_14', 'mutated_arg_names': ['in_out_ptr2'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_convolution_mul_sub_14(in_out_ptr2, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, xnumel, XBLOCK : tl.constexpr):
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 4096
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 4096) % 64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x6 = xindex
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr4 + (x2), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x1), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr7 + (x0), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr8 + (x1), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr9 + (x6), None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_out_ptr2 + (x6), None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr10 + (x2), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 32, tl.int32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (tmp8 + 32*tmp4 + 1024*x5), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (tmp8 + 32*tmp4 + 1024*x5), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1.0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp9 + tmp14
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 < 0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp18, tmp17, tmp16)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr2 + (tmp8 + 32*tmp19 + 1024*x5), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr3 + (tmp8 + 32*tmp19 + 1024*x5), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp11
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 * tmp13
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 + tmp23
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 + tmp1
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 < 0
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp27, tmp26, tmp25)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr2 + (tmp28 + 32*tmp19 + 1024*x5), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr3 + (tmp28 + 32*tmp19 + 1024*x5), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 + tmp11
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 * tmp13
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 + tmp32
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 - tmp24
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 * tmp35
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp24 + tmp36
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr2 + (tmp28 + 32*tmp4 + 1024*x5), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr3 + (tmp28 + 32*tmp4 + 1024*x5), None, eviction_policy='evict_last')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 + tmp11
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 * tmp13
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp38 + tmp41
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 - tmp15
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 * tmp35
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp15 + tmp44
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 - tmp37
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 * tmp47
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp50 + tmp51
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52 * tmp13
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp49 + tmp53
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp37 + tmp48
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp54 + tmp55
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr2 + (x6), tmp56, None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39 = args
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (64, 3, 3, 3), (27, 9, 3, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (64, ), (1, ))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 3, 64, 64), (12288, 4096, 64, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (64, ), (1, ))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (64, ), (1, ))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (64, ), (1, ))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (64, ), (1, ))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (64, ), (1, ))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (64, ), (1, ))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (64, ), (1, ))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (64, ), (1, ))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (64, ), (1, ))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (64, ), (1, ))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (64, ), (1, ))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (64, ), (1, ))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (64, ), (1, ))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (64, ), (1, ))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (64, ), (1, ))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (64, ), (1, ))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (64, ), (1, ))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (64, ), (1, ))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_3, primals_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d, feat_l1], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_0.run(buf1, primals_2, 1048576, grid=grid(1048576), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, primals_4, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 64, 32, 32), (65536, 1024, 32, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1, feat_l2], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_1.run(buf3, primals_5, 262144, grid=grid(262144), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_2], Original ATen: [aten.convolution]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf3, primals_6, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 64, 16, 16), (16384, 256, 16, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_2, feat_l3], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_2.run(buf5, primals_7, 65536, grid=grid(65536), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3], Original ATen: [aten.convolution]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf5, primals_8, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 64, 16, 16), (16384, 256, 16, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf6; del buf6  # reuse
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3, relu], Original ATen: [aten.convolution, aten.relu]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_3.run(buf7, primals_9, 65536, grid=grid(65536), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.convolution]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf7, primals_10, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 64, 16, 16), (16384, 256, 16, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((32, 1), (1, 1), torch.int64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l3_1], Original ATen: [aten._to_copy]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_4.run(buf9, 32, grid=grid(32), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((32, 1), (1, 1), torch.int64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l3_1], Original ATen: [aten.add, aten.clamp]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_5.run(buf10, 32, grid=grid(32), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((32, ), (1, ), torch.int64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l3_1], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_4.run(buf11, 32, grid=grid(32), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((32, ), (1, ), torch.int64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l3_1], Original ATen: [aten.add, aten.clamp]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_5.run(buf12, 32, grid=grid(32), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((32, ), (1, ), torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l3_1], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6.run(buf15, 32, grid=grid(32), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((32, 1), (1, 1), torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l3_1], Original ATen: [aten.sub, aten.clamp]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6.run(buf17, 32, grid=grid(32), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_5], Original ATen: [aten.convolution]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = extern_kernels.convolution(buf3, primals_12, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf19, (4, 64, 32, 32), (65536, 1024, 32, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = buf19; del buf19  # reuse
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_5, relu_1], Original ATen: [aten.convolution, aten.relu]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_7.run(buf20, primals_13, 262144, grid=grid(262144), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.convolution]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = extern_kernels.convolution(buf20, primals_14, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf21, (4, 64, 32, 32), (65536, 1024, 32, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = buf21; del buf21  # reuse
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out, mul, add, feat_l3_1, out_1, mul_1, add_1, feat_l2_1], Original ATen: [aten.convolution, aten.mul, aten.add, aten._unsafe_index, aten.sub]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_convolution_mul_sub_8.run(buf22, buf10, buf11, buf5, buf8, primals_11, buf9, buf12, buf15, buf17, buf3, primals_15, 262144, grid=grid(262144), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_7], Original ATen: [aten.convolution]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = extern_kernels.convolution(buf22, primals_16, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf23, (4, 64, 32, 32), (65536, 1024, 32, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = buf23; del buf23  # reuse
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_7, relu_2], Original ATen: [aten.convolution, aten.relu]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_7.run(buf24, primals_17, 262144, grid=grid(262144), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.convolution]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = extern_kernels.convolution(buf24, primals_18, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf25, (4, 64, 32, 32), (65536, 1024, 32, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((64, 1), (1, 1), torch.int64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l2_2], Original ATen: [aten._to_copy]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_9.run(buf26, 64, grid=grid(64), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = empty_strided_cuda((64, 1), (1, 1), torch.int64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l2_2], Original ATen: [aten.add, aten.clamp]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_10.run(buf27, 64, grid=grid(64), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = empty_strided_cuda((64, ), (1, ), torch.int64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l2_2], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_9.run(buf28, 64, grid=grid(64), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = empty_strided_cuda((64, ), (1, ), torch.int64)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l2_2], Original ATen: [aten.add, aten.clamp]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_10.run(buf29, 64, grid=grid(64), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l2_2], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_11.run(buf32, 64, grid=grid(64), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = empty_strided_cuda((64, 1), (1, 1), torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l2_2], Original ATen: [aten.sub, aten.clamp]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_11.run(buf34, 64, grid=grid(64), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_9], Original ATen: [aten.convolution]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = extern_kernels.convolution(buf1, primals_20, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf36, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = buf36; del buf36  # reuse
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_9, relu_3], Original ATen: [aten.convolution, aten.relu]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_12.run(buf37, primals_21, 1048576, grid=grid(1048576), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_21
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_3], Original ATen: [aten.convolution]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf38 = extern_kernels.convolution(buf37, primals_22, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf38, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf39 = buf38; del buf38  # reuse
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_3, mul_3, feat_l1_1], Original ATen: [aten.convolution, aten.mul, aten.add]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_convolution_mul_13.run(buf39, buf1, primals_23, 1048576, grid=grid(1048576), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_23
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_11], Original ATen: [aten.convolution]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf40 = extern_kernels.convolution(buf39, primals_24, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf40, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf41 = buf40; del buf40  # reuse
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_11, relu_4], Original ATen: [aten.convolution, aten.relu]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_12.run(buf41, primals_25, 1048576, grid=grid(1048576), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_25
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.convolution]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf42 = extern_kernels.convolution(buf41, primals_26, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf42, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf43 = buf42; del buf42  # reuse
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2, mul_2, add_3, feat_l2_2, out_4, mul_4, feat_l1_2, feat_l1_3], Original ATen: [aten.convolution, aten.mul, aten.add, aten._unsafe_index, aten.sub]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_convolution_mul_sub_14.run(buf43, buf27, buf28, buf22, buf25, primals_19, buf26, buf29, buf32, buf34, buf39, primals_27, 1048576, grid=grid(1048576), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf25
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_19
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_27
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_13], Original ATen: [aten.convolution]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf44 = extern_kernels.convolution(buf43, primals_28, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf44, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf45 = buf44; del buf44  # reuse
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_13, relu_5], Original ATen: [aten.convolution, aten.relu]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_12.run(buf45, primals_29, 1048576, grid=grid(1048576), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_29
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_5], Original ATen: [aten.convolution]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf46 = extern_kernels.convolution(buf45, primals_30, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf46, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf47 = buf46; del buf46  # reuse
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_5, mul_5, feat_l1_4], Original ATen: [aten.convolution, aten.mul, aten.add]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_convolution_mul_13.run(buf47, buf43, primals_31, 1048576, grid=grid(1048576), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_31
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_15], Original ATen: [aten.convolution]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf48 = extern_kernels.convolution(buf47, primals_32, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf48, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf49 = buf48; del buf48  # reuse
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_15, relu_6], Original ATen: [aten.convolution, aten.relu]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_12.run(buf49, primals_33, 1048576, grid=grid(1048576), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_33
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_6], Original ATen: [aten.convolution]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf50 = extern_kernels.convolution(buf49, primals_34, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf50, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf51 = buf50; del buf50  # reuse
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_6, mul_6, feat_l1_5], Original ATen: [aten.convolution, aten.mul, aten.add]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_convolution_mul_13.run(buf51, buf47, primals_35, 1048576, grid=grid(1048576), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_35
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_17], Original ATen: [aten.convolution]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf52 = extern_kernels.convolution(buf51, primals_36, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf52, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf53 = buf52; del buf52  # reuse
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_17, relu_7], Original ATen: [aten.convolution, aten.relu]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_12.run(buf53, primals_37, 1048576, grid=grid(1048576), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_37
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_7], Original ATen: [aten.convolution]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf54 = extern_kernels.convolution(buf53, primals_38, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf54, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf55 = buf54; del buf54  # reuse
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_7, mul_7, feat_l1_6], Original ATen: [aten.convolution, aten.mul, aten.add]
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_convolution_mul_13.run(buf55, buf51, primals_39, 1048576, grid=grid(1048576), stream=stream0)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_39
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf55, primals_1, primals_3, primals_4, primals_6, primals_8, primals_10, primals_12, primals_14, primals_16, primals_18, primals_20, primals_22, primals_24, primals_26, primals_28, primals_30, primals_32, primals_34, primals_36, primals_38, buf1, buf3, buf5, buf7, buf9, buf10, buf11, buf12, buf15, buf17, buf20, buf22, buf24, buf26, buf27, buf28, buf29, buf32, buf34, buf37, buf39, buf41, buf43, buf45, buf47, buf49, buf51, buf53, )
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((64, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39])
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:32:36.711000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:36.735000 18345 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/7z/c7z4ymjzngoyxuj3eky5pmuqate2nsnurefaba33nrqujz6gltta.py
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['22_forward']
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/nn/cnnmqqrdsrk6yrwuuw2rci23ao6qaqsp2zmbcttwyo2slvja5agk.py
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d, feat_l1], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d => convolution
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l1 => gt, mul, where
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution, 0), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 0.1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=4] = call_function[target=torch.ops.aten.where.self](args = (%gt, %convolution, %mul), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_0 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_0', '''
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ed/cedwafzleuptb3g5krco4lr3qp4b4elovyv4aanve64gzt5q27gl.py
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_1, feat_l2], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_1 => convolution_1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l2 => gt_1, mul_1, where_1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%where, %primals_4, %primals_5, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_1 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_1, 0), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_1, 0.1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=4] = call_function[target=torch.ops.aten.where.self](args = (%gt_1, %convolution_1, %mul_1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_1 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_1', '''
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_1(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 1024) % 64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/mv/cmvhnjkq2bvzu7m7wd2cz6boqnikvprq36izrngyxxnip2aduh3o.py
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_2, feat_l3], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_2 => convolution_2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l3 => gt_2, mul_2, where_2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%where_1, %primals_6, %primals_7, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_2 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_2, 0), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_2, 0.1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_2 : [num_users=3] = call_function[target=torch.ops.aten.where.self](args = (%gt_2, %convolution_2, %mul_2), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_2 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_2', '''
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_2(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 65536
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 256) % 64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/wj/cwjtsvusjqw7upwh5k532n2mvzkuaef4fdnsowdq72tbzay2hqkc.py
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_3, relu], Original ATen: [aten.convolution, aten.relu]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_3 => convolution_3
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   relu => relu
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%where_2, %primals_8, %primals_9, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_3,), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_3 = async_compile.triton('triton_poi_fused_convolution_relu_3', '''
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_3(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 65536
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 256) % 64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp4, None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/bx/cbxyjpiflaovjccxwmcim6mp7in7wktxppqyqbzj6kuhdjgfiuye.py
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feat_l3_1], Original ATen: [aten._to_copy]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l3_1 => convert_element_type_1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_4 = async_compile.triton('triton_poi_fused__to_copy_4', '''
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32}, 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_4(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 - tmp2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.int32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp8, xmask)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/na/cnafovzlzomn6mfea2vw6x4avvdeh3uqdq4f3tk7mqrp6r3ouok6.py
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feat_l3_1], Original ATen: [aten.add, aten.clamp]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l3_1 => add_2, clamp_max
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_1, 1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%add_2, 15), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_5 = async_compile.triton('triton_poi_fused_add_clamp_5', '''
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32}, 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_5(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 - tmp2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.int32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 15, tl.int64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.minimum(tmp10, tmp11)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp12, xmask)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/hk/chkrydkbgaw3qxqtv4q3n2iztbvq7xgjtt6ykso6wvqvf47y7zrp.py
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feat_l3_1], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l3_1 => add_1, clamp_max_2, clamp_min, clamp_min_2, convert_element_type, iota, mul_4, sub, sub_2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (32,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type, 0.5), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, 0.5), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_4, 0.5), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_3), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_2, 0.0), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6 = async_compile.triton('triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6', '''
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32}, 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 - tmp2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.int32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 - tmp9
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp10, tmp6)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 1.0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.minimum(tmp11, tmp12)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ot/cot6vcsquspjtzy7lxntn6lgtnpm2fshebqpzwzjtmeyiwig2yd3.py
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_5, relu_1], Original ATen: [aten.convolution, aten.relu]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_5 => convolution_5
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   relu_1 => relu_1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_5 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%where_1, %primals_12, %primals_13, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_5,), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_7 = async_compile.triton('triton_poi_fused_convolution_relu_7', '''
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_7(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 1024) % 64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp4, None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pj/cpjxtjxo3pvis2cu4nwj7uq37nuw3ooc2qde2el6c4ctiefzrbci.py
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out, mul, add, feat_l3_1, out_1, mul_1, add_1, feat_l2_1], Original ATen: [aten.convolution, aten.mul, aten.add, aten._unsafe_index, aten.sub]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_8
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l2_1 => add_9
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l3_1 => _unsafe_index, _unsafe_index_1, _unsafe_index_2, _unsafe_index_3, add_5, add_6, add_7, mul_6, mul_7, mul_8, sub_3, sub_4, sub_6
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_3
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_9
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => convolution_4
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => convolution_6
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_4 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu, %primals_10, %primals_11, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_4, 1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%where_2, %mul_3), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %clamp_max_2), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_6), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_3, %_unsafe_index_2), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %clamp_max_2), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, %mul_7), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_6, %add_5), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %clamp_max_3), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_5, %mul_8), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_6 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_1, %primals_14, %primals_15, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_6, 1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%where_1, %mul_9), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_8, %add_7), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_convolution_mul_sub_8 = async_compile.triton('triton_poi_fused__unsafe_index_add_convolution_mul_sub_8', '''
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr2': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*i64', 'in_ptr6': '*i64', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_convolution_mul_sub_8', 'mutated_arg_names': ['in_out_ptr2'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_convolution_mul_sub_8(in_out_ptr2, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, xnumel, XBLOCK : tl.constexpr):
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 32) % 32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 1024
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 1024) % 64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x6 = xindex
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr4 + (x2), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x1), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr7 + (x0), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr8 + (x1), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr9 + (x6), None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_out_ptr2 + (x6), None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr10 + (x2), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 16, tl.int32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (tmp8 + 16*tmp4 + 256*x5), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (tmp8 + 16*tmp4 + 256*x5), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1.0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp9 + tmp14
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 < 0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp18, tmp17, tmp16)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr2 + (tmp8 + 16*tmp19 + 256*x5), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr3 + (tmp8 + 16*tmp19 + 256*x5), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp11
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 * tmp13
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 + tmp23
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 + tmp1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 < 0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp27, tmp26, tmp25)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr2 + (tmp28 + 16*tmp19 + 256*x5), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr3 + (tmp28 + 16*tmp19 + 256*x5), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 + tmp11
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 * tmp13
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 + tmp32
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 - tmp24
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 * tmp35
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp24 + tmp36
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr2 + (tmp28 + 16*tmp4 + 256*x5), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr3 + (tmp28 + 16*tmp4 + 256*x5), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 + tmp11
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 * tmp13
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp38 + tmp41
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 - tmp15
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 * tmp35
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp15 + tmp44
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 - tmp37
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 * tmp47
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp50 + tmp51
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52 * tmp13
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp49 + tmp53
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp37 + tmp48
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp54 + tmp55
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr2 + (x6), tmp56, None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/db/cdbwn5e7uhtwidm43xwylc7zlxv2bkqd7ig5us6onssalacsqbbo.py
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feat_l2_2], Original ATen: [aten._to_copy]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l2_2 => convert_element_type_5
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_5 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_2, torch.int64), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_9 = async_compile.triton('triton_poi_fused__to_copy_9', '''
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_9(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 - tmp2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.int32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp8, xmask)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/np/cnpqucy5c6y423rv6t4yeni3kji7q7vhd5vi5xztzvffsv2u37du.py
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feat_l2_2], Original ATen: [aten.add, aten.clamp]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l2_2 => add_12, clamp_max_4
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_5, 1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_4 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%add_12, 31), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_10 = async_compile.triton('triton_poi_fused_add_clamp_10', '''
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_10(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 - tmp2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.int32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 31, tl.int64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.minimum(tmp10, tmp11)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp12, xmask)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/j6/cj6s6wxlmnn6tpffbgflincrwwzqpyaoepj4b47uxswdxsx7nfu7.py
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feat_l2_2], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l2_2 => add_11, clamp_max_6, clamp_min_4, clamp_min_6, convert_element_type_4, iota_2, mul_11, sub_7, sub_9
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota_2 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (64,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_4 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_2, torch.float32), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_4, 0.5), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_11, 0.5), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_11, 0.5), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_4 : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_7, 0.0), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_4, %convert_element_type_7), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_6 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_9, 0.0), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_6 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_6, 1.0), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_add_arange_clamp_mul_sub_11 = async_compile.triton('triton_poi_fused__to_copy_add_arange_clamp_mul_sub_11', '''
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_arange_clamp_mul_sub_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_add_arange_clamp_mul_sub_11(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 - tmp2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.int32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 - tmp9
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp10, tmp6)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 1.0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.minimum(tmp11, tmp12)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/xz/cxz5k7gfmpgndwufjjncqks4or3iexksvysm6a7uaq2ae4hegv4m.py
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_9, relu_3], Original ATen: [aten.convolution, aten.relu]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d_9 => convolution_9
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   relu_3 => relu_3
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_9 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%where, %primals_20, %primals_21, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_3 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_9,), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_12 = async_compile.triton('triton_poi_fused_convolution_relu_12', '''
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_12', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_12(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp4, None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pf/cpfhqll36plhjx4svedgy56ynopyapaisra5iqdzfy5322yb22t2.py
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_3, mul_3, feat_l1_1], Original ATen: [aten.convolution, aten.mul, aten.add]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l1_1 => add_18
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_16
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_3 => convolution_10
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_10 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_3, %primals_22, %primals_23, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_10, 1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_18 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%where, %mul_16), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_convolution_mul_13 = async_compile.triton('triton_poi_fused_add_convolution_mul_13', '''
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_mul_13', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_convolution_mul_13(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_out_ptr0 + (x3), None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1.0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 + tmp5
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp6, None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vm/cvmnzdqsbe5xxt2u4eyxvx57sccymhsq4s6eu7fsmxdyheabmjor.py
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_2, mul_2, add_3, feat_l2_2, out_4, mul_4, feat_l1_2, feat_l1_3], Original ATen: [aten.convolution, aten.mul, aten.add, aten._unsafe_index, aten.sub]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_10
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l1_2 => add_19
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l1_3 => add_20
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_l2_2 => _unsafe_index_4, _unsafe_index_5, _unsafe_index_6, _unsafe_index_7, add_15, add_16, add_17, mul_13, mul_14, mul_15, sub_10, sub_11, sub_13
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_10
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_17
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => convolution_8
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_4 => convolution_12
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_8 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_2, %primals_18, %primals_19, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_8, 1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_9, %mul_10), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_4 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_10, [None, None, %convert_element_type_5, %convert_element_type_7]), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_5 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_10, [None, None, %convert_element_type_5, %clamp_max_5]), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_6 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_10, [None, None, %clamp_max_4, %convert_element_type_7]), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_7 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_10, [None, None, %clamp_max_4, %clamp_max_5]), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_5, %_unsafe_index_4), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_10, %clamp_max_6), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_15 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_4, %mul_13), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_7, %_unsafe_index_6), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %clamp_max_6), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_16 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_6, %mul_14), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_13 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_16, %add_15), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_13, %clamp_max_7), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_17 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_15, %mul_15), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_12 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_4, %primals_26, %primals_27, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_12, 1), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_19 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_18, %mul_17), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_20 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_19, %add_17), kwargs = {})
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_convolution_mul_sub_14 = async_compile.triton('triton_poi_fused__unsafe_index_add_convolution_mul_sub_14', '''
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr2': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*i64', 'in_ptr6': '*i64', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_convolution_mul_sub_14', 'mutated_arg_names': ['in_out_ptr2'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_convolution_mul_sub_14(in_out_ptr2, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, xnumel, XBLOCK : tl.constexpr):
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 4096
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 4096) % 64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x6 = xindex
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr4 + (x2), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x1), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr7 + (x0), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr8 + (x1), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr9 + (x6), None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_out_ptr2 + (x6), None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr10 + (x2), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 32, tl.int32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (tmp8 + 32*tmp4 + 1024*x5), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (tmp8 + 32*tmp4 + 1024*x5), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1.0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp9 + tmp14
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 < 0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp18, tmp17, tmp16)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr2 + (tmp8 + 32*tmp19 + 1024*x5), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr3 + (tmp8 + 32*tmp19 + 1024*x5), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp11
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 * tmp13
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 + tmp23
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 + tmp1
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 < 0
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp27, tmp26, tmp25)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr2 + (tmp28 + 32*tmp19 + 1024*x5), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr3 + (tmp28 + 32*tmp19 + 1024*x5), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 + tmp11
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 * tmp13
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 + tmp32
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 - tmp24
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 * tmp35
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp24 + tmp36
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr2 + (tmp28 + 32*tmp4 + 1024*x5), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr3 + (tmp28 + 32*tmp4 + 1024*x5), None, eviction_policy='evict_last')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 + tmp11
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 * tmp13
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp38 + tmp41
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 - tmp15
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 * tmp35
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp15 + tmp44
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 - tmp37
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 * tmp47
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp50 + tmp51
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52 * tmp13
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp49 + tmp53
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp37 + tmp48
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp54 + tmp55
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr2 + (x6), tmp56, None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39 = args
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (64, 3, 3, 3), (27, 9, 3, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (64, ), (1, ))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 3, 64, 64), (12288, 4096, 64, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (64, ), (1, ))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (64, ), (1, ))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (64, ), (1, ))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (64, ), (1, ))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (64, ), (1, ))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (64, ), (1, ))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (64, ), (1, ))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (64, ), (1, ))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (64, ), (1, ))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (64, ), (1, ))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (64, ), (1, ))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (64, ), (1, ))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (64, ), (1, ))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (64, ), (1, ))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (64, ), (1, ))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (64, ), (1, ))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (64, ), (1, ))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (64, ), (1, ))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_3, primals_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d, feat_l1], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_0.run(buf1, primals_2, 1048576, grid=grid(1048576), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, primals_4, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 64, 32, 32), (65536, 1024, 32, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1, feat_l2], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_1.run(buf3, primals_5, 262144, grid=grid(262144), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_2], Original ATen: [aten.convolution]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf3, primals_6, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 64, 16, 16), (16384, 256, 16, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_2, feat_l3], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_2.run(buf5, primals_7, 65536, grid=grid(65536), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3], Original ATen: [aten.convolution]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf5, primals_8, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 64, 16, 16), (16384, 256, 16, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf6; del buf6  # reuse
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3, relu], Original ATen: [aten.convolution, aten.relu]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_3.run(buf7, primals_9, 65536, grid=grid(65536), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.convolution]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf7, primals_10, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 64, 16, 16), (16384, 256, 16, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((32, 1), (1, 1), torch.int64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l3_1], Original ATen: [aten._to_copy]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_4.run(buf9, 32, grid=grid(32), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((32, 1), (1, 1), torch.int64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l3_1], Original ATen: [aten.add, aten.clamp]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_5.run(buf10, 32, grid=grid(32), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((32, ), (1, ), torch.int64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l3_1], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_4.run(buf11, 32, grid=grid(32), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((32, ), (1, ), torch.int64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l3_1], Original ATen: [aten.add, aten.clamp]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_5.run(buf12, 32, grid=grid(32), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((32, ), (1, ), torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l3_1], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6.run(buf15, 32, grid=grid(32), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((32, 1), (1, 1), torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l3_1], Original ATen: [aten.sub, aten.clamp]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6.run(buf17, 32, grid=grid(32), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_5], Original ATen: [aten.convolution]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = extern_kernels.convolution(buf3, primals_12, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf19, (4, 64, 32, 32), (65536, 1024, 32, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = buf19; del buf19  # reuse
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_5, relu_1], Original ATen: [aten.convolution, aten.relu]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_7.run(buf20, primals_13, 262144, grid=grid(262144), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.convolution]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = extern_kernels.convolution(buf20, primals_14, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf21, (4, 64, 32, 32), (65536, 1024, 32, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = buf21; del buf21  # reuse
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out, mul, add, feat_l3_1, out_1, mul_1, add_1, feat_l2_1], Original ATen: [aten.convolution, aten.mul, aten.add, aten._unsafe_index, aten.sub]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_convolution_mul_sub_8.run(buf22, buf10, buf11, buf5, buf8, primals_11, buf9, buf12, buf15, buf17, buf3, primals_15, 262144, grid=grid(262144), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_7], Original ATen: [aten.convolution]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = extern_kernels.convolution(buf22, primals_16, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf23, (4, 64, 32, 32), (65536, 1024, 32, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = buf23; del buf23  # reuse
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_7, relu_2], Original ATen: [aten.convolution, aten.relu]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_7.run(buf24, primals_17, 262144, grid=grid(262144), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.convolution]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = extern_kernels.convolution(buf24, primals_18, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf25, (4, 64, 32, 32), (65536, 1024, 32, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((64, 1), (1, 1), torch.int64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l2_2], Original ATen: [aten._to_copy]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_9.run(buf26, 64, grid=grid(64), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = empty_strided_cuda((64, 1), (1, 1), torch.int64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l2_2], Original ATen: [aten.add, aten.clamp]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_10.run(buf27, 64, grid=grid(64), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = empty_strided_cuda((64, ), (1, ), torch.int64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l2_2], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_9.run(buf28, 64, grid=grid(64), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = empty_strided_cuda((64, ), (1, ), torch.int64)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l2_2], Original ATen: [aten.add, aten.clamp]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_10.run(buf29, 64, grid=grid(64), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l2_2], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_11.run(buf32, 64, grid=grid(64), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = empty_strided_cuda((64, 1), (1, 1), torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_l2_2], Original ATen: [aten.sub, aten.clamp]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_11.run(buf34, 64, grid=grid(64), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_9], Original ATen: [aten.convolution]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = extern_kernels.convolution(buf1, primals_20, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf36, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = buf36; del buf36  # reuse
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_9, relu_3], Original ATen: [aten.convolution, aten.relu]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_12.run(buf37, primals_21, 1048576, grid=grid(1048576), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_21
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_3], Original ATen: [aten.convolution]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf38 = extern_kernels.convolution(buf37, primals_22, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf38, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf39 = buf38; del buf38  # reuse
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_3, mul_3, feat_l1_1], Original ATen: [aten.convolution, aten.mul, aten.add]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_convolution_mul_13.run(buf39, buf1, primals_23, 1048576, grid=grid(1048576), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_23
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_11], Original ATen: [aten.convolution]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf40 = extern_kernels.convolution(buf39, primals_24, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf40, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf41 = buf40; del buf40  # reuse
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_11, relu_4], Original ATen: [aten.convolution, aten.relu]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_12.run(buf41, primals_25, 1048576, grid=grid(1048576), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_25
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.convolution]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf42 = extern_kernels.convolution(buf41, primals_26, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf42, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf43 = buf42; del buf42  # reuse
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2, mul_2, add_3, feat_l2_2, out_4, mul_4, feat_l1_2, feat_l1_3], Original ATen: [aten.convolution, aten.mul, aten.add, aten._unsafe_index, aten.sub]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_convolution_mul_sub_14.run(buf43, buf27, buf28, buf22, buf25, primals_19, buf26, buf29, buf32, buf34, buf39, primals_27, 1048576, grid=grid(1048576), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf25
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_19
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_27
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_13], Original ATen: [aten.convolution]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf44 = extern_kernels.convolution(buf43, primals_28, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf44, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf45 = buf44; del buf44  # reuse
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_13, relu_5], Original ATen: [aten.convolution, aten.relu]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_12.run(buf45, primals_29, 1048576, grid=grid(1048576), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_29
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_5], Original ATen: [aten.convolution]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf46 = extern_kernels.convolution(buf45, primals_30, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf46, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf47 = buf46; del buf46  # reuse
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_5, mul_5, feat_l1_4], Original ATen: [aten.convolution, aten.mul, aten.add]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_convolution_mul_13.run(buf47, buf43, primals_31, 1048576, grid=grid(1048576), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_31
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_15], Original ATen: [aten.convolution]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf48 = extern_kernels.convolution(buf47, primals_32, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf48, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf49 = buf48; del buf48  # reuse
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_15, relu_6], Original ATen: [aten.convolution, aten.relu]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_12.run(buf49, primals_33, 1048576, grid=grid(1048576), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_33
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_6], Original ATen: [aten.convolution]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf50 = extern_kernels.convolution(buf49, primals_34, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf50, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf51 = buf50; del buf50  # reuse
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_6, mul_6, feat_l1_5], Original ATen: [aten.convolution, aten.mul, aten.add]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_convolution_mul_13.run(buf51, buf47, primals_35, 1048576, grid=grid(1048576), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_35
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_17], Original ATen: [aten.convolution]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf52 = extern_kernels.convolution(buf51, primals_36, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf52, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf53 = buf52; del buf52  # reuse
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_17, relu_7], Original ATen: [aten.convolution, aten.relu]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_12.run(buf53, primals_37, 1048576, grid=grid(1048576), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_37
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_7], Original ATen: [aten.convolution]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf54 = extern_kernels.convolution(buf53, primals_38, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf54, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf55 = buf54; del buf54  # reuse
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_7, mul_7, feat_l1_6], Original ATen: [aten.convolution, aten.mul, aten.add]
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_convolution_mul_13.run(buf55, buf51, primals_39, 1048576, grid=grid(1048576), stream=stream0)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_39
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf55, primals_1, primals_3, primals_4, primals_6, primals_8, primals_10, primals_12, primals_14, primals_16, primals_18, primals_20, primals_22, primals_24, primals_26, primals_28, primals_30, primals_32, primals_34, primals_36, primals_38, buf1, buf3, buf5, buf7, buf9, buf10, buf11, buf12, buf15, buf17, buf20, buf22, buf24, buf26, buf27, buf28, buf29, buf32, buf34, buf37, buf39, buf41, buf43, buf45, buf47, buf49, buf51, buf53, )
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((64, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39])
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:21:23.659000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:23.691000 1409051 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/tz/ctzetxvctddiwxs4cz5lsfcqhgvi25inpcl2iseioelbzpy5rjby.py
