V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['19_forward']
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/d5/cd5ykn3s3odecuy7vfhoqpmlpwemf6ry5w6m7o3hi34uw6ssrois.py
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten._unsafe_index, aten.sub, aten.add]
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate => _unsafe_index, _unsafe_index_1, _unsafe_index_2, _unsafe_index_3, add_2, add_3, add_4, clamp_max_2, clamp_max_3, clamp_min, clamp_min_2, clamp_min_3, convert_element_type, convert_element_type_1, convert_element_type_3, iota, mul, mul_2, mul_3, mul_4, sub, sub_1, sub_2, sub_3, sub_4
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, 21.0), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul, 0.0), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=6] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_3 : [num_users=6] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%clamp_min, torch.int64), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_2, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_2, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_2, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_2, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_3), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=4] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %clamp_max_2), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_2), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_3, %_unsafe_index_2), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %clamp_max_2), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, %mul_3), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %convert_element_type_1), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_3, 0.0), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_3 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_3, 1.0), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_3, %add_2), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %clamp_max_3), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_2, %mul_4), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0 = async_compile.triton('triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0', '''
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 2048, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0(in_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 2048
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 4
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = (xindex % 4)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = (yindex % 512)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex // 512
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x2
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 21.0
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1, 1], 1, tl.int64)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1, 1], 63, tl.int64)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.minimum(tmp8, tmp9)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = x1
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 * tmp2
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp13, tmp4)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14.to(tl.int32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (tmp15 + 64*tmp10 + 4096*y0), xmask, eviction_policy='evict_last')
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp7
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = triton_helpers.minimum(tmp17, tmp9)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (tmp18 + 64*tmp10 + 4096*y0), xmask, eviction_policy='evict_last')
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 - tmp16
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp15.to(tl.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp14 - tmp21
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp22, tmp4)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 1.0
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.minimum(tmp23, tmp24)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp20 * tmp25
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp16 + tmp26
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (tmp15 + 64*tmp6 + 4096*y0), xmask, eviction_policy='evict_last')
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (tmp18 + 64*tmp6 + 4096*y0), xmask, eviction_policy='evict_last')
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 - tmp28
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 * tmp25
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp28 + tmp31
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp27 - tmp32
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp6.to(tl.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp5 - tmp34
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = triton_helpers.maximum(tmp35, tmp4)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = triton_helpers.minimum(tmp36, tmp24)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp33 * tmp37
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp32 + tmp38
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y3 + 512*x5 + 8192*y4), tmp39, xmask)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3c/c3crdcdgdov6kjqpp46ttv27suhspg7uaiopqs7vrbxiwzhuznub.py
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [interpolate, interpolate_1], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub, aten._unsafe_index, aten.add]
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate => clamp_max_2, clamp_max_3, clamp_min, clamp_min_2, clamp_min_3, convert_element_type, convert_element_type_1, convert_element_type_3, iota, mul, sub, sub_3
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate_1 => _unsafe_index_4, _unsafe_index_5, _unsafe_index_6, _unsafe_index_7, add_10, add_11, add_9, mul_10, mul_11, mul_12, sub_10, sub_7, sub_8
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, 21.0), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul, 0.0), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=6] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_3 : [num_users=6] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%clamp_min, torch.int64), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_3), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=4] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %convert_element_type_1), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_3, 0.0), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_3 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_3, 1.0), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_4 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_8, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_5 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_8, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_6 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_8, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_7 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_8, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_5, %_unsafe_index_4), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_7, %clamp_max_2), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_4, %mul_10), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_7, %_unsafe_index_6), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %clamp_max_2), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_6, %mul_11), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_10, %add_9), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_10, %clamp_max_3), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_9, %mul_12), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_1 = async_compile.triton('triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_1', '''
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4096, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_1(in_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 4096
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 4
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = (xindex % 4)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = (yindex % 1024)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex // 1024
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x2
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 21.0
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1, 1], 1, tl.int64)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1, 1], 63, tl.int64)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.minimum(tmp8, tmp9)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = x1
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 * tmp2
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp13, tmp4)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14.to(tl.int32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (tmp15 + 64*tmp10 + 4096*y0), xmask, eviction_policy='evict_last')
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp7
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = triton_helpers.minimum(tmp17, tmp9)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (tmp18 + 64*tmp10 + 4096*y0), xmask, eviction_policy='evict_last')
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 - tmp16
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp15.to(tl.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp14 - tmp21
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp22, tmp4)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 1.0
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.minimum(tmp23, tmp24)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp20 * tmp25
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp16 + tmp26
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (tmp15 + 64*tmp6 + 4096*y0), xmask, eviction_policy='evict_last')
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (tmp18 + 64*tmp6 + 4096*y0), xmask, eviction_policy='evict_last')
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 - tmp28
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 * tmp25
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp28 + tmp31
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp27 - tmp32
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp6.to(tl.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp5 - tmp34
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = triton_helpers.maximum(tmp35, tmp4)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = triton_helpers.minimum(tmp36, tmp24)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp33 * tmp37
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp32 + tmp38
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y3 + 1024*x5 + 16384*y4), tmp39, xmask)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/w7/cw7gjzirul6kar6rdb3jqoanjwlnvn7pwxfmmaprsic7x3qfaqxy.py
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [fused_feature], Original ATen: [aten.cat]
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fused_feature => cat
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_1, %relu_1, %relu], 1), kwargs = {})
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 11, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 6400
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 100)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 1600
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*(x1) + 64*x2), tmp4 & xmask, other=0.0)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 52, tl.int64)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (48*x0 + 768*x2 + ((-4) + x1)), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + ((-4) + x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + ((-4) + x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + ((-4) + x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + ((-4) + x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp25)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.full(tmp27.shape, 0.0, tmp27.dtype)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.where(tmp9, tmp27, tmp28)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp0 >= tmp7
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.full([1], 100, tl.int64)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp0 < tmp31
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr6 + (48*x0 + 768*x2 + ((-52) + x1)), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr7 + ((-52) + x1), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 - tmp34
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.load(in_ptr8 + ((-52) + x1), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = 1e-05
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 + tmp37
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = libdevice.sqrt(tmp38)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.full([1], 1, tl.int32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 / tmp39
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = 1.0
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp41 * tmp42
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp35 * tmp43
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr9 + ((-52) + x1), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp44 * tmp45
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr10 + ((-52) + x1), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 + tmp47
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.full([1], 0, tl.int32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = triton_helpers.maximum(tmp49, tmp48)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.full(tmp50.shape, 0.0, tmp50.dtype)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.where(tmp30, tmp50, tmp51)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.where(tmp9, tmp29, tmp52)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.where(tmp4, tmp5, tmp53)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp54, xmask)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13 = args
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 512, 64, 64), (2097152, 4096, 64, 1))
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (48, 512, 1, 1), (512, 1, 1, 1))
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (48, ), (1, ))
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (48, ), (1, ))
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (48, ), (1, ))
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (48, ), (1, ))
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 1024, 64, 64), (4194304, 4096, 64, 1))
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (48, 1024, 1, 1), (1024, 1, 1, 1))
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (48, ), (1, ))
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (48, ), (1, ))
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (48, ), (1, ))
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (48, ), (1, ))
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 512, 4, 4), (8192, 1, 2048, 512), torch.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten._unsafe_index, aten.sub, aten.add]
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0.run(primals_2, buf1, 2048, 16, grid=grid(2048, 16), stream=stream0)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 1024, 4, 4), (16384, 1, 4096, 1024), torch.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [interpolate, interpolate_1], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub, aten._unsafe_index, aten.add]
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_1.run(primals_8, buf4, 4096, 16, grid=grid(4096, 16), stream=stream0)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, primals_3, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 48, 4, 4), (768, 1, 192, 48))
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, primals_9, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 48, 4, 4), (768, 1, 192, 48))
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 100, 4, 4), (1600, 16, 4, 1), torch.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [fused_feature], Original ATen: [aten.cat]
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(primals_1, buf5, primals_10, primals_11, primals_12, primals_13, buf2, primals_4, primals_5, primals_6, primals_7, buf6, 6400, grid=grid(6400), stream=stream0)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf6, primals_3, primals_4, primals_5, primals_6, primals_7, primals_9, primals_10, primals_11, primals_12, primals_13, buf1, buf2, buf4, buf5, )
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 512, 64, 64), (2097152, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((48, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((48, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((48, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((48, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((48, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 1024, 64, 64), (4194304, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((48, 1024, 1, 1), (1024, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((48, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((48, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((48, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((48, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13])
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:13:28.515000 3347018 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:13:28.522000 3347018 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/bh/cbh5mx27evn4nvoc6ebw2jml7bkadmiljwh5ib2f4jmnacp5leuh.py
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['19_forward']
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/d5/cd5ykn3s3odecuy7vfhoqpmlpwemf6ry5w6m7o3hi34uw6ssrois.py
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten._unsafe_index, aten.sub, aten.add]
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate => _unsafe_index, _unsafe_index_1, _unsafe_index_2, _unsafe_index_3, add_2, add_3, add_4, clamp_max_2, clamp_max_3, clamp_min, clamp_min_2, clamp_min_3, convert_element_type, convert_element_type_1, convert_element_type_3, iota, mul, mul_2, mul_3, mul_4, sub, sub_1, sub_2, sub_3, sub_4
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, 21.0), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul, 0.0), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=6] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_3 : [num_users=6] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%clamp_min, torch.int64), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_2, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_2, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_2, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_2, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_3), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=4] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %clamp_max_2), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_2), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_3, %_unsafe_index_2), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %clamp_max_2), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, %mul_3), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %convert_element_type_1), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_3, 0.0), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_3 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_3, 1.0), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_3, %add_2), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %clamp_max_3), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_2, %mul_4), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0 = async_compile.triton('triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0', '''
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 2048, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0(in_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 2048
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 4
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = (xindex % 4)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = (yindex % 512)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex // 512
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x2
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 21.0
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1, 1], 1, tl.int64)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1, 1], 63, tl.int64)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.minimum(tmp8, tmp9)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = x1
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 * tmp2
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp13, tmp4)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14.to(tl.int32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (tmp15 + 64*tmp10 + 4096*y0), xmask, eviction_policy='evict_last')
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp7
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = triton_helpers.minimum(tmp17, tmp9)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (tmp18 + 64*tmp10 + 4096*y0), xmask, eviction_policy='evict_last')
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 - tmp16
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp15.to(tl.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp14 - tmp21
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp22, tmp4)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 1.0
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.minimum(tmp23, tmp24)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp20 * tmp25
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp16 + tmp26
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (tmp15 + 64*tmp6 + 4096*y0), xmask, eviction_policy='evict_last')
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (tmp18 + 64*tmp6 + 4096*y0), xmask, eviction_policy='evict_last')
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 - tmp28
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 * tmp25
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp28 + tmp31
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp27 - tmp32
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp6.to(tl.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp5 - tmp34
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = triton_helpers.maximum(tmp35, tmp4)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = triton_helpers.minimum(tmp36, tmp24)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp33 * tmp37
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp32 + tmp38
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y3 + 512*x5 + 8192*y4), tmp39, xmask)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3c/c3crdcdgdov6kjqpp46ttv27suhspg7uaiopqs7vrbxiwzhuznub.py
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [interpolate, interpolate_1], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub, aten._unsafe_index, aten.add]
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate => clamp_max_2, clamp_max_3, clamp_min, clamp_min_2, clamp_min_3, convert_element_type, convert_element_type_1, convert_element_type_3, iota, mul, sub, sub_3
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate_1 => _unsafe_index_4, _unsafe_index_5, _unsafe_index_6, _unsafe_index_7, add_10, add_11, add_9, mul_10, mul_11, mul_12, sub_10, sub_7, sub_8
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, 21.0), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul, 0.0), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=6] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_3 : [num_users=6] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%clamp_min, torch.int64), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_3), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=4] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %convert_element_type_1), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_3, 0.0), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_3 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_3, 1.0), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_4 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_8, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_5 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_8, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_6 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_8, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_7 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%primals_8, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_5, %_unsafe_index_4), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_7, %clamp_max_2), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_4, %mul_10), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_7, %_unsafe_index_6), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %clamp_max_2), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_6, %mul_11), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_10, %add_9), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_10, %clamp_max_3), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_9, %mul_12), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_1 = async_compile.triton('triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_1', '''
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4096, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_1(in_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 4096
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 4
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = (xindex % 4)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = (yindex % 1024)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex // 1024
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x2
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 21.0
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1, 1], 1, tl.int64)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1, 1], 63, tl.int64)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.minimum(tmp8, tmp9)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = x1
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 * tmp2
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp13, tmp4)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14.to(tl.int32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (tmp15 + 64*tmp10 + 4096*y0), xmask, eviction_policy='evict_last')
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp7
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = triton_helpers.minimum(tmp17, tmp9)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (tmp18 + 64*tmp10 + 4096*y0), xmask, eviction_policy='evict_last')
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 - tmp16
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp15.to(tl.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp14 - tmp21
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp22, tmp4)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 1.0
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.minimum(tmp23, tmp24)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp20 * tmp25
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp16 + tmp26
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (tmp15 + 64*tmp6 + 4096*y0), xmask, eviction_policy='evict_last')
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (tmp18 + 64*tmp6 + 4096*y0), xmask, eviction_policy='evict_last')
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 - tmp28
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 * tmp25
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp28 + tmp31
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp27 - tmp32
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp6.to(tl.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp5 - tmp34
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = triton_helpers.maximum(tmp35, tmp4)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = triton_helpers.minimum(tmp36, tmp24)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp33 * tmp37
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp32 + tmp38
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y3 + 1024*x5 + 16384*y4), tmp39, xmask)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/w7/cw7gjzirul6kar6rdb3jqoanjwlnvn7pwxfmmaprsic7x3qfaqxy.py
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [fused_feature], Original ATen: [aten.cat]
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fused_feature => cat
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_1, %relu_1, %relu], 1), kwargs = {})
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 11, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 6400
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 100)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 1600
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*(x1) + 64*x2), tmp4 & xmask, other=0.0)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 52, tl.int64)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (48*x0 + 768*x2 + ((-4) + x1)), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + ((-4) + x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 - tmp11
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + ((-4) + x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1e-05
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([1], 1, tl.int32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 / tmp16
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1.0
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp12 * tmp20
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + ((-4) + x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + ((-4) + x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp25)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.full(tmp27.shape, 0.0, tmp27.dtype)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.where(tmp9, tmp27, tmp28)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp0 >= tmp7
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.full([1], 100, tl.int64)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp0 < tmp31
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr6 + (48*x0 + 768*x2 + ((-52) + x1)), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr7 + ((-52) + x1), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 - tmp34
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.load(in_ptr8 + ((-52) + x1), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = 1e-05
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 + tmp37
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = libdevice.sqrt(tmp38)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.full([1], 1, tl.int32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 / tmp39
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = 1.0
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp41 * tmp42
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp35 * tmp43
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr9 + ((-52) + x1), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp44 * tmp45
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr10 + ((-52) + x1), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 + tmp47
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.full([1], 0, tl.int32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = triton_helpers.maximum(tmp49, tmp48)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.full(tmp50.shape, 0.0, tmp50.dtype)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.where(tmp30, tmp50, tmp51)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.where(tmp9, tmp29, tmp52)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.where(tmp4, tmp5, tmp53)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp54, xmask)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13 = args
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 512, 64, 64), (2097152, 4096, 64, 1))
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (48, 512, 1, 1), (512, 1, 1, 1))
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (48, ), (1, ))
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (48, ), (1, ))
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (48, ), (1, ))
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (48, ), (1, ))
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 1024, 64, 64), (4194304, 4096, 64, 1))
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (48, 1024, 1, 1), (1024, 1, 1, 1))
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (48, ), (1, ))
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (48, ), (1, ))
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (48, ), (1, ))
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (48, ), (1, ))
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 512, 4, 4), (8192, 1, 2048, 512), torch.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten._unsafe_index, aten.sub, aten.add]
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0.run(primals_2, buf1, 2048, 16, grid=grid(2048, 16), stream=stream0)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 1024, 4, 4), (16384, 1, 4096, 1024), torch.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [interpolate, interpolate_1], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub, aten._unsafe_index, aten.add]
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_1.run(primals_8, buf4, 4096, 16, grid=grid(4096, 16), stream=stream0)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, primals_3, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 48, 4, 4), (768, 1, 192, 48))
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, primals_9, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 48, 4, 4), (768, 1, 192, 48))
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 100, 4, 4), (1600, 16, 4, 1), torch.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [fused_feature], Original ATen: [aten.cat]
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(primals_1, buf5, primals_10, primals_11, primals_12, primals_13, buf2, primals_4, primals_5, primals_6, primals_7, buf6, 6400, grid=grid(6400), stream=stream0)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf6, primals_3, primals_4, primals_5, primals_6, primals_7, primals_9, primals_10, primals_11, primals_12, primals_13, buf1, buf2, buf4, buf5, )
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 512, 64, 64), (2097152, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((48, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((48, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((48, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((48, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((48, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 1024, 64, 64), (4194304, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((48, 1024, 1, 1), (1024, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((48, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((48, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((48, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((48, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13])
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:02:44.921000 906920 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:02:44.933000 906920 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/jn/cjnqpguyihlfa5enoqhezcnhpwsmki4uuach5r3d5fdpl3imw3rf.py
