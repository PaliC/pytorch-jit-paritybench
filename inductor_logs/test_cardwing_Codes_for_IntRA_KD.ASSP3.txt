V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['1_forward']
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dq/cdq3h7u7hbia7enqve2p6q7tnmwfo7ieewqjxqkuspsdo3kpimq7.py
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y3), xmask & ymask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x2 + 64*y1), tmp0, xmask & ymask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qd/cqdxuzklrnbuutpliylqfcmgaic72a3bog2v3txlq57gq2ny5mvw.py
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x2 + 36*y1), tmp0, xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ac/cachg72pkfydushlpqm2eldp56q5vfs2yv774bgkdsmyfwqzivbh.py
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [avg_pool2d], Original ATen: [aten.avg_pool2d]
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   avg_pool2d => avg_pool2d
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d : [num_users=1] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%primals_1, [4, 4]), kwargs = {})
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_2 = async_compile.triton('triton_poi_fused_avg_pool2d_2', '''
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*x1), xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4 + x0 + 64*x1), xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (8 + x0 + 64*x1), xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (12 + x0 + 64*x1), xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (16 + x0 + 64*x1), xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (20 + x0 + 64*x1), xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (24 + x0 + 64*x1), xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (28 + x0 + 64*x1), xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (36 + x0 + 64*x1), xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (40 + x0 + 64*x1), xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (44 + x0 + 64*x1), xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (48 + x0 + 64*x1), xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (52 + x0 + 64*x1), xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (56 + x0 + 64*x1), xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (60 + x0 + 64*x1), xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 + tmp0
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp2
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp4
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 + tmp6
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 + tmp8
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp10
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 + tmp12
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 + tmp14
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp16
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp18
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp20
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 + tmp22
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 + tmp24
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 + tmp26
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 + tmp28
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = 0.0625
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 * tmp31
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp32, xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ov/covm44wpd5kukkbwqhrlv3nntopqjov4awdnfv73xvtpefnxdez2.py
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out], Original ATen: [aten.cat]
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => cat
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%relu, %relu_1, %relu_2, %relu_3, %_unsafe_index], 1), kwargs = {})
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_3 = async_compile.triton('triton_poi_fused_cat_3', '''
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'in_ptr12': '*fp32', 'in_ptr13': '*fp32', 'in_ptr14': '*fp32', 'in_ptr15': '*fp32', 'in_ptr16': '*fp32', 'in_ptr17': '*fp32', 'in_ptr18': '*fp32', 'in_ptr19': '*fp32', 'in_ptr20': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 21, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, in_ptr13, in_ptr14, in_ptr15, in_ptr16, in_ptr17, in_ptr18, in_ptr19, in_ptr20, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 65792
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 1028)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 1028
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 4112) % 4)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 1028) % 4)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 16448
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x6 = xindex
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 256, tl.int64)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (256*x4 + (x0)), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x0), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 - tmp6
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr2 + (x0), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1e-05
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.sqrt(tmp10)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 1, tl.int32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 / tmp11
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1.0
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp7 * tmp15
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr3 + (x0), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr4 + (x0), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 0, tl.int32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp20)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.full(tmp22.shape, 0.0, tmp22.dtype)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.where(tmp4, tmp22, tmp23)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp0 >= tmp3
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 512, tl.int64)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp0 < tmp26
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr5 + (256*x4 + ((-256) + x0)), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr6 + ((-256) + x0), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 - tmp30
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr7 + ((-256) + x0), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = 1e-05
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 + tmp33
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = libdevice.sqrt(tmp34)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.full([1], 1, tl.int32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 / tmp35
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = 1.0
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 * tmp38
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp31 * tmp39
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr8 + ((-256) + x0), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 * tmp41
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr9 + ((-256) + x0), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp42 + tmp43
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.full([1], 0, tl.int32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = triton_helpers.maximum(tmp45, tmp44)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.full(tmp46.shape, 0.0, tmp46.dtype)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.where(tmp28, tmp46, tmp47)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp0 >= tmp26
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.full([1], 768, tl.int64)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp0 < tmp50
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp49 & tmp51
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.load(in_ptr10 + (256*x4 + ((-512) + x0)), tmp52 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_ptr11 + ((-512) + x0), tmp52 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp53 - tmp54
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.load(in_ptr12 + ((-512) + x0), tmp52 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = 1e-05
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp56 + tmp57
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = libdevice.sqrt(tmp58)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.full([1], 1, tl.int32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp60 / tmp59
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = 1.0
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp61 * tmp62
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp55 * tmp63
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.load(in_ptr13 + ((-512) + x0), tmp52 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp64 * tmp65
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tl.load(in_ptr14 + ((-512) + x0), tmp52 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp66 + tmp67
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.full([1], 0, tl.int32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = triton_helpers.maximum(tmp69, tmp68)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.full(tmp70.shape, 0.0, tmp70.dtype)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tl.where(tmp52, tmp70, tmp71)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp0 >= tmp50
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.full([1], 1024, tl.int64)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp0 < tmp74
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp73 & tmp75
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.load(in_ptr15 + (256*x4 + ((-768) + x0)), tmp76 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.load(in_ptr16 + ((-768) + x0), tmp76 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp77 - tmp78
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl.load(in_ptr17 + ((-768) + x0), tmp76 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = 1e-05
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp80 + tmp81
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = libdevice.sqrt(tmp82)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tl.full([1], 1, tl.int32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp84 / tmp83
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = 1.0
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp85 * tmp86
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp79 * tmp87
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tl.load(in_ptr18 + ((-768) + x0), tmp76 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp88 * tmp89
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tl.load(in_ptr19 + ((-768) + x0), tmp76 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tmp90 + tmp91
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.full([1], 0, tl.int32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = triton_helpers.maximum(tmp93, tmp92)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tl.full(tmp94.shape, 0.0, tmp94.dtype)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tl.where(tmp76, tmp94, tmp95)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tmp0 >= tmp74
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.full([1], 1028, tl.int64)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tmp0 < tmp98
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = x2
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tmp100.to(tl.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = 0.25
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = tmp101 * tmp102
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = tmp103.to(tl.int32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = x1
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = tmp105.to(tl.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = tmp106 * tmp102
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = tmp107.to(tl.int32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tl.load(in_ptr20 + (4*x3 + ((-1024) + x0)), tmp97 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = tl.where(tmp76, tmp96, tmp109)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = tl.where(tmp52, tmp72, tmp110)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp112 = tl.where(tmp28, tmp48, tmp111)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp113 = tl.where(tmp4, tmp24, tmp112)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x6), tmp113, xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fj/cfjl43mgjp2doctmwxxxj3tkh2dtauollz5zyenxcba7kc7dps2g.py
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_2, out_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.threshold_backward]
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => add_13, mul_17, mul_18, sub_4
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_3 => relu_4
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_4, %unsqueeze_34), kwargs = {})
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_36), kwargs = {})
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_18 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_17, %unsqueeze_38), kwargs = {})
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_13 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_18, %unsqueeze_40), kwargs = {})
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_13,), kwargs = {})
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_4, 0), kwargs = {})
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_4 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_4', '''
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_4(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 256*x2 + 4096*y1), xmask, eviction_policy='evict_last')
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), None, eviction_policy='evict_last')
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (y0), None, eviction_policy='evict_last')
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (y0), None, eviction_policy='evict_last')
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (y0), None, eviction_policy='evict_last')
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1, 1], 1, tl.int32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1, 1], 0, tl.int32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.0
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 <= tmp18
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 16*y3), tmp17, xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 256*x2 + 4096*y1), tmp19, xmask)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26 = args
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (256, 4, 1, 1), (4, 1, 1, 1))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (256, 4, 3, 3), (36, 9, 3, 1))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (256, 4, 3, 3), (36, 9, 3, 1))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (256, 4, 3, 3), (36, 9, 3, 1))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (256, 1028, 1, 1), (1028, 1, 1, 1))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (256, ), (1, ))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_1, buf0, 16, 16, grid=grid(16, 16), stream=stream0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((256, 4, 3, 3), (36, 1, 12, 4), torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_7, buf1, 1024, 9, grid=grid(1024, 9), stream=stream0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((256, 4, 3, 3), (36, 1, 12, 4), torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_12, buf2, 1024, 9, grid=grid(1024, 9), stream=stream0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((256, 4, 3, 3), (36, 1, 12, 4), torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_17, buf3, 1024, 9, grid=grid(1024, 9), stream=stream0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf0, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 256, 4, 4), (4096, 1, 1024, 256))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf0, buf1, stride=(1, 1), padding=(6, 6), dilation=(6, 6), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 256, 4, 4), (4096, 1, 1024, 256))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_2], Original ATen: [aten.convolution]
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf0, buf2, stride=(1, 1), padding=(12, 12), dilation=(12, 12), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 256, 4, 4), (4096, 1, 1024, 256))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3], Original ATen: [aten.convolution]
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf0, buf3, stride=(1, 1), padding=(18, 18), dilation=(18, 18), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 256, 4, 4), (4096, 1, 1024, 256))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 16, 16), torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [avg_pool2d], Original ATen: [aten.avg_pool2d]
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_2.run(buf0, buf8, 16, grid=grid(16), stream=stream0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 1028, 4, 4), (16448, 1, 4112, 1028), torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.cat]
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_3.run(buf4, primals_3, primals_4, primals_5, primals_6, buf5, primals_8, primals_9, primals_10, primals_11, buf6, primals_13, primals_14, primals_15, primals_16, buf7, primals_18, primals_19, primals_20, primals_21, buf8, buf9, 65792, grid=grid(65792), stream=stream0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.convolution]
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf9, primals_22, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 256, 4, 4), (4096, 1, 1024, 256))
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 256, 4, 4), (4096, 16, 4, 1), torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 256, 4, 4), (4096, 1, 1024, 256), torch.bool)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2, out_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.threshold_backward]
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_4.run(buf10, primals_23, primals_24, primals_25, primals_26, buf11, buf12, 1024, 16, grid=grid(1024, 16), stream=stream0)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_26
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf11, buf0, primals_2, primals_3, primals_4, primals_5, primals_6, buf1, primals_8, primals_9, primals_10, primals_11, buf2, primals_13, primals_14, primals_15, primals_16, buf3, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, buf4, buf5, buf6, buf7, buf9, buf10, buf12, )
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((256, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((256, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((256, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((256, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((256, 1028, 1, 1), (1028, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26])
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:18:56.581000 1397741 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:18:56.591000 1397741 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/4i/c4iv7c3ri2ddmqcrhu2ek3wp5sumezfvqhykergi4z3u3lircqjk.py
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['1_forward']
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/dq/cdq3h7u7hbia7enqve2p6q7tnmwfo7ieewqjxqkuspsdo3kpimq7.py
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y3), xmask & ymask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x2 + 64*y1), tmp0, xmask & ymask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qd/cqdxuzklrnbuutpliylqfcmgaic72a3bog2v3txlq57gq2ny5mvw.py
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x2 + 36*y1), tmp0, xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ac/cachg72pkfydushlpqm2eldp56q5vfs2yv774bgkdsmyfwqzivbh.py
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [avg_pool2d], Original ATen: [aten.avg_pool2d]
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   avg_pool2d => avg_pool2d
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d : [num_users=1] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%primals_1, [4, 4]), kwargs = {})
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_2 = async_compile.triton('triton_poi_fused_avg_pool2d_2', '''
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*x1), xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4 + x0 + 64*x1), xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (8 + x0 + 64*x1), xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (12 + x0 + 64*x1), xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (16 + x0 + 64*x1), xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (20 + x0 + 64*x1), xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (24 + x0 + 64*x1), xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (28 + x0 + 64*x1), xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (36 + x0 + 64*x1), xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (40 + x0 + 64*x1), xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (44 + x0 + 64*x1), xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (48 + x0 + 64*x1), xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (52 + x0 + 64*x1), xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (56 + x0 + 64*x1), xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (60 + x0 + 64*x1), xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 + tmp0
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp2
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp4
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 + tmp6
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 + tmp8
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp10
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 + tmp12
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 + tmp14
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp16
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp18
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp20
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 + tmp22
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 + tmp24
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 + tmp26
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 + tmp28
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = 0.0625
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 * tmp31
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp32, xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ov/covm44wpd5kukkbwqhrlv3nntopqjov4awdnfv73xvtpefnxdez2.py
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out], Original ATen: [aten.cat]
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => cat
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%relu, %relu_1, %relu_2, %relu_3, %_unsafe_index], 1), kwargs = {})
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_3 = async_compile.triton('triton_poi_fused_cat_3', '''
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'in_ptr12': '*fp32', 'in_ptr13': '*fp32', 'in_ptr14': '*fp32', 'in_ptr15': '*fp32', 'in_ptr16': '*fp32', 'in_ptr17': '*fp32', 'in_ptr18': '*fp32', 'in_ptr19': '*fp32', 'in_ptr20': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 21, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, in_ptr13, in_ptr14, in_ptr15, in_ptr16, in_ptr17, in_ptr18, in_ptr19, in_ptr20, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 65792
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 1028)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 1028
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 4112) % 4)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 1028) % 4)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 16448
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x6 = xindex
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 256, tl.int64)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (256*x4 + (x0)), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x0), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 - tmp6
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr2 + (x0), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1e-05
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.sqrt(tmp10)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 1, tl.int32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 / tmp11
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 1.0
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp7 * tmp15
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr3 + (x0), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr4 + (x0), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 0, tl.int32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp20)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.full(tmp22.shape, 0.0, tmp22.dtype)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.where(tmp4, tmp22, tmp23)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp0 >= tmp3
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 512, tl.int64)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp0 < tmp26
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr5 + (256*x4 + ((-256) + x0)), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr6 + ((-256) + x0), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 - tmp30
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr7 + ((-256) + x0), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = 1e-05
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 + tmp33
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = libdevice.sqrt(tmp34)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.full([1], 1, tl.int32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 / tmp35
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = 1.0
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 * tmp38
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp31 * tmp39
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr8 + ((-256) + x0), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 * tmp41
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr9 + ((-256) + x0), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp42 + tmp43
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.full([1], 0, tl.int32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = triton_helpers.maximum(tmp45, tmp44)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.full(tmp46.shape, 0.0, tmp46.dtype)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.where(tmp28, tmp46, tmp47)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp0 >= tmp26
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.full([1], 768, tl.int64)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp0 < tmp50
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp49 & tmp51
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.load(in_ptr10 + (256*x4 + ((-512) + x0)), tmp52 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_ptr11 + ((-512) + x0), tmp52 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp53 - tmp54
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.load(in_ptr12 + ((-512) + x0), tmp52 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = 1e-05
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp56 + tmp57
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = libdevice.sqrt(tmp58)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.full([1], 1, tl.int32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp60 / tmp59
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = 1.0
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp61 * tmp62
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp55 * tmp63
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.load(in_ptr13 + ((-512) + x0), tmp52 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp64 * tmp65
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tl.load(in_ptr14 + ((-512) + x0), tmp52 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp66 + tmp67
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.full([1], 0, tl.int32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = triton_helpers.maximum(tmp69, tmp68)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.full(tmp70.shape, 0.0, tmp70.dtype)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tl.where(tmp52, tmp70, tmp71)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp0 >= tmp50
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.full([1], 1024, tl.int64)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp0 < tmp74
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp73 & tmp75
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.load(in_ptr15 + (256*x4 + ((-768) + x0)), tmp76 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.load(in_ptr16 + ((-768) + x0), tmp76 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp77 - tmp78
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl.load(in_ptr17 + ((-768) + x0), tmp76 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = 1e-05
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp80 + tmp81
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = libdevice.sqrt(tmp82)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tl.full([1], 1, tl.int32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp84 / tmp83
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = 1.0
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp85 * tmp86
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp79 * tmp87
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tl.load(in_ptr18 + ((-768) + x0), tmp76 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp88 * tmp89
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tl.load(in_ptr19 + ((-768) + x0), tmp76 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tmp90 + tmp91
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.full([1], 0, tl.int32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = triton_helpers.maximum(tmp93, tmp92)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tl.full(tmp94.shape, 0.0, tmp94.dtype)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tl.where(tmp76, tmp94, tmp95)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tmp0 >= tmp74
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.full([1], 1028, tl.int64)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tmp0 < tmp98
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = x2
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tmp100.to(tl.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = 0.25
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = tmp101 * tmp102
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = tmp103.to(tl.int32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = x1
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = tmp105.to(tl.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = tmp106 * tmp102
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = tmp107.to(tl.int32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tl.load(in_ptr20 + (4*x3 + ((-1024) + x0)), tmp97 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = tl.where(tmp76, tmp96, tmp109)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = tl.where(tmp52, tmp72, tmp110)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp112 = tl.where(tmp28, tmp48, tmp111)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp113 = tl.where(tmp4, tmp24, tmp112)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x6), tmp113, xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fj/cfjl43mgjp2doctmwxxxj3tkh2dtauollz5zyenxcba7kc7dps2g.py
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_2, out_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.threshold_backward]
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_2 => add_13, mul_17, mul_18, sub_4
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_3 => relu_4
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_4, %unsqueeze_34), kwargs = {})
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_36), kwargs = {})
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_18 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_17, %unsqueeze_38), kwargs = {})
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_13 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_18, %unsqueeze_40), kwargs = {})
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_13,), kwargs = {})
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_4, 0), kwargs = {})
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_4 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_4', '''
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_4(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 256*x2 + 4096*y1), xmask, eviction_policy='evict_last')
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), None, eviction_policy='evict_last')
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (y0), None, eviction_policy='evict_last')
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (y0), None, eviction_policy='evict_last')
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (y0), None, eviction_policy='evict_last')
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1, 1], 1, tl.int32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1, 1], 0, tl.int32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.0
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 <= tmp18
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 16*y3), tmp17, xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 256*x2 + 4096*y1), tmp19, xmask)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26 = args
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (256, 4, 1, 1), (4, 1, 1, 1))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (256, 4, 3, 3), (36, 9, 3, 1))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (256, 4, 3, 3), (36, 9, 3, 1))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (256, 4, 3, 3), (36, 9, 3, 1))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (256, 1028, 1, 1), (1028, 1, 1, 1))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (256, ), (1, ))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_1, buf0, 16, 16, grid=grid(16, 16), stream=stream0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((256, 4, 3, 3), (36, 1, 12, 4), torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_7, buf1, 1024, 9, grid=grid(1024, 9), stream=stream0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((256, 4, 3, 3), (36, 1, 12, 4), torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_12, buf2, 1024, 9, grid=grid(1024, 9), stream=stream0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((256, 4, 3, 3), (36, 1, 12, 4), torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_17, buf3, 1024, 9, grid=grid(1024, 9), stream=stream0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf0, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 256, 4, 4), (4096, 1, 1024, 256))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf0, buf1, stride=(1, 1), padding=(6, 6), dilation=(6, 6), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 256, 4, 4), (4096, 1, 1024, 256))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_2], Original ATen: [aten.convolution]
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf0, buf2, stride=(1, 1), padding=(12, 12), dilation=(12, 12), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 256, 4, 4), (4096, 1, 1024, 256))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3], Original ATen: [aten.convolution]
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf0, buf3, stride=(1, 1), padding=(18, 18), dilation=(18, 18), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 256, 4, 4), (4096, 1, 1024, 256))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 16, 16), torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [avg_pool2d], Original ATen: [aten.avg_pool2d]
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_2.run(buf0, buf8, 16, grid=grid(16), stream=stream0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 1028, 4, 4), (16448, 1, 4112, 1028), torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.cat]
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_3.run(buf4, primals_3, primals_4, primals_5, primals_6, buf5, primals_8, primals_9, primals_10, primals_11, buf6, primals_13, primals_14, primals_15, primals_16, buf7, primals_18, primals_19, primals_20, primals_21, buf8, buf9, 65792, grid=grid(65792), stream=stream0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.convolution]
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf9, primals_22, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 256, 4, 4), (4096, 1, 1024, 256))
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 256, 4, 4), (4096, 16, 4, 1), torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 256, 4, 4), (4096, 1, 1024, 256), torch.bool)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2, out_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.threshold_backward]
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_4.run(buf10, primals_23, primals_24, primals_25, primals_26, buf11, buf12, 1024, 16, grid=grid(1024, 16), stream=stream0)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_26
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf11, buf0, primals_2, primals_3, primals_4, primals_5, primals_6, buf1, primals_8, primals_9, primals_10, primals_11, buf2, primals_13, primals_14, primals_15, primals_16, buf3, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, buf4, buf5, buf6, buf7, buf9, buf10, buf12, )
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((256, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((256, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((256, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((256, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((256, 1028, 1, 1), (1028, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26])
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:08:38.522000 2764029 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:08:38.536000 2764029 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/kw/ckwxk3arivdflp2iiai65b52hk6ben7dlq35hqgx27mj7bthhxz7.py
