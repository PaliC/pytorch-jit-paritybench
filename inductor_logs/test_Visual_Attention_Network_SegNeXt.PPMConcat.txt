V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['8_inference']
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xg/cxg6olv7egaabbsiujtbpmyunfohm4x3vfjo4urfc2gqy5srb2uy.py
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ppm_out, concat_outs], Original ATen: [aten.mean, aten.cat]
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   concat_outs => cat
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ppm_out => mean
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%arg0_1, [-1, -2], True), kwargs = {})
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%view, %view_1, %view_2, %view_3], 2), kwargs = {})
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_cat_mean_0 = async_compile.triton('triton_per_fused_cat_mean_0', '''
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 16},
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_cat_mean_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_cat_mean_0(in_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 16.0
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 / tmp5
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (110*x0), tmp6, xmask)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/kc/ckcqvtktfgyljyhpfcrdh7l4u3zka4fqxm6pq62h2b3z7ntcjcsm.py
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ppm_out_1, concat_outs], Original ATen: [aten._adaptive_avg_pool2d, aten.cat]
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   concat_outs => cat
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ppm_out_1 => _adaptive_avg_pool2d
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_adaptive_avg_pool2d : [num_users=1] = call_function[target=torch.ops.aten._adaptive_avg_pool2d.default](args = (%arg0_1, [3, 3]), kwargs = {})
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%view, %view_1, %view_2, %view_3], 2), kwargs = {})
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__adaptive_avg_pool2d_cat_1 = async_compile.triton('triton_poi_fused__adaptive_avg_pool2d_cat_1', '''
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__adaptive_avg_pool2d_cat_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__adaptive_avg_pool2d_cat_1(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 144
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 3) % 3)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 3)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 9
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 9)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (4*x1) // 3
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 2 + ((4*x1) // 3)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = (4*x0) // 3
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 2 + ((4*x0) // 3)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 < tmp4
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 & tmp5
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4*((4*x1) // 3) + 16*x2 + ((4*x0) // 3)), tmp6 & xmask, other=0.0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1 + ((4*x0) // 3)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 < tmp4
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 & tmp9
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (1 + 4*((4*x1) // 3) + 16*x2 + ((4*x0) // 3)), tmp10 & xmask, other=0.0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp7
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1 + ((4*x1) // 3)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 < tmp1
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 & tmp5
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (4 + 4*((4*x1) // 3) + 16*x2 + ((4*x0) // 3)), tmp15 & xmask, other=0.0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp12
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp14 & tmp9
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (5 + 4*((4*x1) // 3) + 16*x2 + ((4*x0) // 3)), tmp18 & xmask, other=0.0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp17
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1.0
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full(tmp21.shape, 0.0, tmp21.dtype)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp6, tmp21, tmp22)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 1.0
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full(tmp24.shape, 0.0, tmp24.dtype)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp10, tmp24, tmp25)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 + tmp23
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 1.0
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.full(tmp28.shape, 0.0, tmp28.dtype)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp15, tmp28, tmp29)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 + tmp27
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 1.0
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.full(tmp32.shape, 0.0, tmp32.dtype)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.where(tmp18, tmp32, tmp33)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp31
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp20 / tmp35
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3 + 110*x2), tmp36, xmask)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gh/cghaasgtdlx5m2bo7jfnvvzltmrc5r3p5jxpssqhadds3h3cnzga.py
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ppm_out_2, concat_outs], Original ATen: [aten._adaptive_avg_pool2d, aten.cat]
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   concat_outs => cat
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ppm_out_2 => _adaptive_avg_pool2d_1
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_adaptive_avg_pool2d_1 : [num_users=1] = call_function[target=torch.ops.aten._adaptive_avg_pool2d.default](args = (%arg0_1, [6, 6]), kwargs = {})
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%view, %view_1, %view_2, %view_3], 2), kwargs = {})
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__adaptive_avg_pool2d_cat_2 = async_compile.triton('triton_poi_fused__adaptive_avg_pool2d_cat_2', '''
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__adaptive_avg_pool2d_cat_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__adaptive_avg_pool2d_cat_2(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 576
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 6) % 6)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 36
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 36)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (2*x1) // 3
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = (9 + 4*x1) // 6
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = (2*x0) // 3
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = (9 + 4*x0) // 6
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 < tmp4
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 & tmp5
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4*((2*x1) // 3) + 16*x2 + ((2*x0) // 3)), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1 + ((2*x0) // 3)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 < tmp4
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 & tmp9
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (1 + 4*((2*x1) // 3) + 16*x2 + ((2*x0) // 3)), tmp10 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp7
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1 + ((2*x1) // 3)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 < tmp1
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 & tmp5
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (4 + 4*((2*x1) // 3) + 16*x2 + ((2*x0) // 3)), tmp15 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp12
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp14 & tmp9
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (5 + 4*((2*x1) // 3) + 16*x2 + ((2*x0) // 3)), tmp18 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp17
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1.0
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full(tmp21.shape, 0.0, tmp21.dtype)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp6, tmp21, tmp22)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 1.0
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full(tmp24.shape, 0.0, tmp24.dtype)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp10, tmp24, tmp25)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 + tmp23
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 1.0
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.full(tmp28.shape, 0.0, tmp28.dtype)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp15, tmp28, tmp29)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 + tmp27
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 1.0
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.full(tmp32.shape, 0.0, tmp32.dtype)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.where(tmp18, tmp32, tmp33)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp31
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp20 / tmp35
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3 + 110*x2), tmp36, xmask)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nq/cnqt5t65aadhnkxckudje5bjhav3xxw4vvji7sys34lgtddlzvb3.py
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ppm_out_3, concat_outs], Original ATen: [aten._adaptive_avg_pool2d, aten.cat]
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   concat_outs => cat
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ppm_out_3 => _adaptive_avg_pool2d_2
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_adaptive_avg_pool2d_2 : [num_users=1] = call_function[target=torch.ops.aten._adaptive_avg_pool2d.default](args = (%arg0_1, [8, 8]), kwargs = {})
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%view, %view_1, %view_2, %view_3], 2), kwargs = {})
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__adaptive_avg_pool2d_cat_3 = async_compile.triton('triton_poi_fused__adaptive_avg_pool2d_cat_3', '''
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__adaptive_avg_pool2d_cat_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__adaptive_avg_pool2d_cat_3(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 8) % 8)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 8)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 64)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1 // 2
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = (11 + 4*x1) // 8
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = x0 // 2
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = (11 + 4*x0) // 8
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 < tmp4
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 & tmp5
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4*(x1 // 2) + 16*x2 + (x0 // 2)), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1 + (x0 // 2)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 < tmp4
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 & tmp9
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (1 + 4*(x1 // 2) + 16*x2 + (x0 // 2)), tmp10 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp7
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1 + (x1 // 2)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 < tmp1
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 & tmp5
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (4 + 4*(x1 // 2) + 16*x2 + (x0 // 2)), tmp15 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp12
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp14 & tmp9
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (5 + 4*(x1 // 2) + 16*x2 + (x0 // 2)), tmp18 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp17
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1.0
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full(tmp21.shape, 0.0, tmp21.dtype)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp6, tmp21, tmp22)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 1.0
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full(tmp24.shape, 0.0, tmp24.dtype)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp10, tmp24, tmp25)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 + tmp23
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 1.0
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.full(tmp28.shape, 0.0, tmp28.dtype)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp15, tmp28, tmp29)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 + tmp27
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 1.0
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.full(tmp32.shape, 0.0, tmp32.dtype)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.where(tmp18, tmp32, tmp33)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp31
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp20 / tmp35
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3 + 110*x2), tmp36, xmask)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 110), (440, 110, 1), torch.float32)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = reinterpret_tensor(buf8, (4, 4, 1), (440, 110, 1), 0)  # alias
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ppm_out, concat_outs], Original ATen: [aten.mean, aten.cat]
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_cat_mean_0.run(arg0_1, buf4, 16, 16, grid=grid(16), stream=stream0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = reinterpret_tensor(buf8, (4, 4, 9), (440, 110, 1), 1)  # alias
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ppm_out_1, concat_outs], Original ATen: [aten._adaptive_avg_pool2d, aten.cat]
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__adaptive_avg_pool2d_cat_1.run(arg0_1, buf5, 144, grid=grid(144), stream=stream0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf8, (4, 4, 36), (440, 110, 1), 10)  # alias
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ppm_out_2, concat_outs], Original ATen: [aten._adaptive_avg_pool2d, aten.cat]
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__adaptive_avg_pool2d_cat_2.run(arg0_1, buf6, 576, grid=grid(576), stream=stream0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf8, (4, 4, 64), (440, 110, 1), 46)  # alias
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ppm_out_3, concat_outs], Original ATen: [aten._adaptive_avg_pool2d, aten.cat]
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__adaptive_avg_pool2d_cat_3.run(arg0_1, buf7, 1024, grid=grid(1024), stream=stream0)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf8, )
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:21:46.598000 3849122 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:21:46.604000 3849122 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/j7/cj7jqz23hbctptb3h64x6oeejohbajczy74z7iunqwelu3n2pgke.py
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['8_inference']
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/xg/cxg6olv7egaabbsiujtbpmyunfohm4x3vfjo4urfc2gqy5srb2uy.py
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ppm_out, concat_outs], Original ATen: [aten.mean, aten.cat]
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   concat_outs => cat
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ppm_out => mean
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%arg0_1, [-1, -2], True), kwargs = {})
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%view, %view_1, %view_2, %view_3], 2), kwargs = {})
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_cat_mean_0 = async_compile.triton('triton_per_fused_cat_mean_0', '''
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 16},
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_cat_mean_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_cat_mean_0(in_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 16.0
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 / tmp5
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (110*x0), tmp6, xmask)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/kc/ckcqvtktfgyljyhpfcrdh7l4u3zka4fqxm6pq62h2b3z7ntcjcsm.py
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ppm_out_1, concat_outs], Original ATen: [aten._adaptive_avg_pool2d, aten.cat]
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   concat_outs => cat
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ppm_out_1 => _adaptive_avg_pool2d
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_adaptive_avg_pool2d : [num_users=1] = call_function[target=torch.ops.aten._adaptive_avg_pool2d.default](args = (%arg0_1, [3, 3]), kwargs = {})
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%view, %view_1, %view_2, %view_3], 2), kwargs = {})
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__adaptive_avg_pool2d_cat_1 = async_compile.triton('triton_poi_fused__adaptive_avg_pool2d_cat_1', '''
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__adaptive_avg_pool2d_cat_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__adaptive_avg_pool2d_cat_1(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 144
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 3) % 3)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 3)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 9
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 9)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (4*x1) // 3
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 2 + ((4*x1) // 3)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = (4*x0) // 3
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 2 + ((4*x0) // 3)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 < tmp4
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 & tmp5
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4*((4*x1) // 3) + 16*x2 + ((4*x0) // 3)), tmp6 & xmask, other=0.0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1 + ((4*x0) // 3)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 < tmp4
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 & tmp9
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (1 + 4*((4*x1) // 3) + 16*x2 + ((4*x0) // 3)), tmp10 & xmask, other=0.0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp7
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1 + ((4*x1) // 3)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 < tmp1
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 & tmp5
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (4 + 4*((4*x1) // 3) + 16*x2 + ((4*x0) // 3)), tmp15 & xmask, other=0.0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp12
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp14 & tmp9
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (5 + 4*((4*x1) // 3) + 16*x2 + ((4*x0) // 3)), tmp18 & xmask, other=0.0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp17
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1.0
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full(tmp21.shape, 0.0, tmp21.dtype)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp6, tmp21, tmp22)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 1.0
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full(tmp24.shape, 0.0, tmp24.dtype)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp10, tmp24, tmp25)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 + tmp23
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 1.0
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.full(tmp28.shape, 0.0, tmp28.dtype)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp15, tmp28, tmp29)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 + tmp27
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 1.0
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.full(tmp32.shape, 0.0, tmp32.dtype)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.where(tmp18, tmp32, tmp33)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp31
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp20 / tmp35
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3 + 110*x2), tmp36, xmask)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/gh/cghaasgtdlx5m2bo7jfnvvzltmrc5r3p5jxpssqhadds3h3cnzga.py
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ppm_out_2, concat_outs], Original ATen: [aten._adaptive_avg_pool2d, aten.cat]
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   concat_outs => cat
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ppm_out_2 => _adaptive_avg_pool2d_1
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_adaptive_avg_pool2d_1 : [num_users=1] = call_function[target=torch.ops.aten._adaptive_avg_pool2d.default](args = (%arg0_1, [6, 6]), kwargs = {})
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%view, %view_1, %view_2, %view_3], 2), kwargs = {})
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__adaptive_avg_pool2d_cat_2 = async_compile.triton('triton_poi_fused__adaptive_avg_pool2d_cat_2', '''
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__adaptive_avg_pool2d_cat_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__adaptive_avg_pool2d_cat_2(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 576
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 6) % 6)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 36
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 36)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (2*x1) // 3
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = (9 + 4*x1) // 6
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = (2*x0) // 3
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = (9 + 4*x0) // 6
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 < tmp4
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 & tmp5
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4*((2*x1) // 3) + 16*x2 + ((2*x0) // 3)), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1 + ((2*x0) // 3)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 < tmp4
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 & tmp9
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (1 + 4*((2*x1) // 3) + 16*x2 + ((2*x0) // 3)), tmp10 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp7
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1 + ((2*x1) // 3)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 < tmp1
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 & tmp5
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (4 + 4*((2*x1) // 3) + 16*x2 + ((2*x0) // 3)), tmp15 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp12
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp14 & tmp9
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (5 + 4*((2*x1) // 3) + 16*x2 + ((2*x0) // 3)), tmp18 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp17
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1.0
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full(tmp21.shape, 0.0, tmp21.dtype)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp6, tmp21, tmp22)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 1.0
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full(tmp24.shape, 0.0, tmp24.dtype)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp10, tmp24, tmp25)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 + tmp23
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 1.0
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.full(tmp28.shape, 0.0, tmp28.dtype)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp15, tmp28, tmp29)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 + tmp27
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 1.0
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.full(tmp32.shape, 0.0, tmp32.dtype)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.where(tmp18, tmp32, tmp33)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp31
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp20 / tmp35
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3 + 110*x2), tmp36, xmask)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/nq/cnqt5t65aadhnkxckudje5bjhav3xxw4vvji7sys34lgtddlzvb3.py
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ppm_out_3, concat_outs], Original ATen: [aten._adaptive_avg_pool2d, aten.cat]
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   concat_outs => cat
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ppm_out_3 => _adaptive_avg_pool2d_2
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_adaptive_avg_pool2d_2 : [num_users=1] = call_function[target=torch.ops.aten._adaptive_avg_pool2d.default](args = (%arg0_1, [8, 8]), kwargs = {})
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%view, %view_1, %view_2, %view_3], 2), kwargs = {})
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__adaptive_avg_pool2d_cat_3 = async_compile.triton('triton_poi_fused__adaptive_avg_pool2d_cat_3', '''
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__adaptive_avg_pool2d_cat_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__adaptive_avg_pool2d_cat_3(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 8) % 8)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 8)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 64)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1 // 2
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = (11 + 4*x1) // 8
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = x0 // 2
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = (11 + 4*x0) // 8
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 < tmp4
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 & tmp5
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4*(x1 // 2) + 16*x2 + (x0 // 2)), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1 + (x0 // 2)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 < tmp4
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 & tmp9
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (1 + 4*(x1 // 2) + 16*x2 + (x0 // 2)), tmp10 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp7
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1 + (x1 // 2)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 < tmp1
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 & tmp5
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (4 + 4*(x1 // 2) + 16*x2 + (x0 // 2)), tmp15 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp12
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp14 & tmp9
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (5 + 4*(x1 // 2) + 16*x2 + (x0 // 2)), tmp18 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp17
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1.0
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full(tmp21.shape, 0.0, tmp21.dtype)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp6, tmp21, tmp22)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 1.0
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full(tmp24.shape, 0.0, tmp24.dtype)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp10, tmp24, tmp25)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 + tmp23
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 1.0
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.full(tmp28.shape, 0.0, tmp28.dtype)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp15, tmp28, tmp29)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 + tmp27
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 1.0
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.full(tmp32.shape, 0.0, tmp32.dtype)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.where(tmp18, tmp32, tmp33)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp31
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp20 / tmp35
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3 + 110*x2), tmp36, xmask)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 110), (440, 110, 1), torch.float32)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = reinterpret_tensor(buf8, (4, 4, 1), (440, 110, 1), 0)  # alias
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ppm_out, concat_outs], Original ATen: [aten.mean, aten.cat]
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_cat_mean_0.run(arg0_1, buf4, 16, 16, grid=grid(16), stream=stream0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = reinterpret_tensor(buf8, (4, 4, 9), (440, 110, 1), 1)  # alias
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ppm_out_1, concat_outs], Original ATen: [aten._adaptive_avg_pool2d, aten.cat]
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__adaptive_avg_pool2d_cat_1.run(arg0_1, buf5, 144, grid=grid(144), stream=stream0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf8, (4, 4, 36), (440, 110, 1), 10)  # alias
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ppm_out_2, concat_outs], Original ATen: [aten._adaptive_avg_pool2d, aten.cat]
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__adaptive_avg_pool2d_cat_2.run(arg0_1, buf6, 576, grid=grid(576), stream=stream0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf8, (4, 4, 64), (440, 110, 1), 46)  # alias
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ppm_out_3, concat_outs], Original ATen: [aten._adaptive_avg_pool2d, aten.cat]
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__adaptive_avg_pool2d_cat_3.run(arg0_1, buf7, 1024, grid=grid(1024), stream=stream0)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf8, )
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:10:38.730000 1144464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:10:38.737000 1144464 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/kp/ckpn7f5kzjzere6kvgcqbsfpjrrtfwrxpcumeemxqi4acxwl3pjj.py
