V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub, pow_1, reconstr, binary_cross_entropy_with_logits, cat_reconstr, reconstr_1], Original ATen: [aten.sub, aten.pow, aten.sum, aten.binary_cross_entropy_with_logits, aten.add]
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   binary_cross_entropy_with_logits => abs_1, exp, full_default, log1p, minimum, mul, neg, sub_1, sub_2, sub_3
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat_reconstr => sum_2
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reconstr => sum_1
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reconstr_1 => add
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%slice_2, %slice_4), kwargs = {})
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub, 2), kwargs = {})
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [-1]), kwargs = {})
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %slice_8), kwargs = {})
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %slice_6), kwargs = {})
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %minimum : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%full_default, %slice_6), kwargs = {})
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%slice_6,), kwargs = {})
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%abs_1,), kwargs = {})
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg,), kwargs = {})
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log1p : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp,), kwargs = {})
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%minimum, %log1p), kwargs = {})
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul, %sub_2), kwargs = {})
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%sub_3, [-1]), kwargs = {})
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, %sum_2), kwargs = {})
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_binary_cross_entropy_with_logits_pow_sub_sum_0 = async_compile.triton('triton_poi_fused_add_binary_cross_entropy_with_logits_pow_sub_sum_0', '''
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_binary_cross_entropy_with_logits_pow_sub_sum_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_binary_cross_entropy_with_logits_pow_sub_sum_0(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 - tmp0
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.minimum(tmp5, tmp3)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl_math.abs(tmp3)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = -tmp7
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = libdevice.log1p(tmp9)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp6 - tmp10
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp4 - tmp11
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp1 - tmp13
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.minimum(tmp5, tmp15)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl_math.abs(tmp15)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = -tmp18
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl_math.exp(tmp19)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = libdevice.log1p(tmp20)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp17 - tmp21
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp16 - tmp22
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp12 + tmp23
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp1 - tmp25
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 * tmp27
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = triton_helpers.minimum(tmp5, tmp27)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl_math.abs(tmp27)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = -tmp30
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl_math.exp(tmp31)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = libdevice.log1p(tmp32)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp29 - tmp33
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp28 - tmp34
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp24 + tmp35
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp1 - tmp37
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 * tmp39
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = triton_helpers.minimum(tmp5, tmp39)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl_math.abs(tmp39)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = -tmp42
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl_math.exp(tmp43)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = libdevice.log1p(tmp44)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp41 - tmp45
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp40 - tmp46
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp36 + tmp47
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp5 + tmp48
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp49, xmask)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4), (4, 1))
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4), (4, 1))
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub, pow_1, reconstr, binary_cross_entropy_with_logits, cat_reconstr, reconstr_1], Original ATen: [aten.sub, aten.pow, aten.sum, aten.binary_cross_entropy_with_logits, aten.add]
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_binary_cross_entropy_with_logits_pow_sub_sum_0.run(buf1, arg1_1, arg0_1, 4, grid=grid(4), stream=stream0)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf1, )
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:53:01.274000 187081 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:53:01.276000 187081 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/zp/czp356fsknxd25fniv5qvp3bysrzpku22rbwwetn6dsjdc4to5db.py
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub, pow_1, reconstr, binary_cross_entropy_with_logits, cat_reconstr, reconstr_1], Original ATen: [aten.sub, aten.pow, aten.sum, aten.binary_cross_entropy_with_logits, aten.add]
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   binary_cross_entropy_with_logits => abs_1, exp, full_default, log1p, minimum, mul, neg, sub_1, sub_2, sub_3
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat_reconstr => sum_2
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reconstr => sum_1
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reconstr_1 => add
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%slice_2, %slice_4), kwargs = {})
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub, 2), kwargs = {})
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [-1]), kwargs = {})
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %slice_8), kwargs = {})
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %slice_6), kwargs = {})
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %minimum : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%full_default, %slice_6), kwargs = {})
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%slice_6,), kwargs = {})
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%abs_1,), kwargs = {})
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg,), kwargs = {})
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log1p : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp,), kwargs = {})
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%minimum, %log1p), kwargs = {})
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul, %sub_2), kwargs = {})
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%sub_3, [-1]), kwargs = {})
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, %sum_2), kwargs = {})
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_binary_cross_entropy_with_logits_pow_sub_sum_0 = async_compile.triton('triton_poi_fused_add_binary_cross_entropy_with_logits_pow_sub_sum_0', '''
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_binary_cross_entropy_with_logits_pow_sub_sum_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_binary_cross_entropy_with_logits_pow_sub_sum_0(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 - tmp0
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.minimum(tmp5, tmp3)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl_math.abs(tmp3)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = -tmp7
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = libdevice.log1p(tmp9)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp6 - tmp10
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp4 - tmp11
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp1 - tmp13
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.minimum(tmp5, tmp15)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl_math.abs(tmp15)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = -tmp18
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl_math.exp(tmp19)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = libdevice.log1p(tmp20)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp17 - tmp21
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp16 - tmp22
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp12 + tmp23
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp1 - tmp25
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 * tmp27
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = triton_helpers.minimum(tmp5, tmp27)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl_math.abs(tmp27)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = -tmp30
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl_math.exp(tmp31)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = libdevice.log1p(tmp32)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp29 - tmp33
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp28 - tmp34
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp24 + tmp35
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp1 - tmp37
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 * tmp39
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = triton_helpers.minimum(tmp5, tmp39)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl_math.abs(tmp39)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = -tmp42
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl_math.exp(tmp43)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = libdevice.log1p(tmp44)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp41 - tmp45
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp40 - tmp46
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp36 + tmp47
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp5 + tmp48
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp49, xmask)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4), (4, 1))
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4), (4, 1))
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub, pow_1, reconstr, binary_cross_entropy_with_logits, cat_reconstr, reconstr_1], Original ATen: [aten.sub, aten.pow, aten.sum, aten.binary_cross_entropy_with_logits, aten.add]
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_binary_cross_entropy_with_logits_pow_sub_sum_0.run(buf1, arg1_1, arg0_1, 4, grid=grid(4), stream=stream0)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf1, )
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:43:26.135000 2804490 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:43:26.139000 2804490 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/d2/cd22amn3ftsrpaobai33m53ypnej6atxwoueltq5z3meerpiyxox.py
