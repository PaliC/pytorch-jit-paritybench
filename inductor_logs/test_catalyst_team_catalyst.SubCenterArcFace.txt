V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['57_forward']
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qs/cqsm5gjix2dkpbmqsqin2cleudti6vjvww4mbwno2nonogaq5tlu.py
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [normalize], Original ATen: [aten.div]
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   normalize => div
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_1, %expand), kwargs = {})
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_0 = async_compile.triton('triton_poi_fused_div_0', '''
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-12
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp12, tmp13)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 / tmp14
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp15, xmask)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rf/crfnrfhrcy4b5jgipm4icu724kt42sofq453btkjtehfenhfkw4f.py
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [wght], Original ATen: [aten.div]
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   wght => div_1
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_2, %expand_2), kwargs = {})
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_1 = async_compile.triton('triton_poi_fused_div_1', '''
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 48
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (4 + x0 + 16*x2), xmask, eviction_policy='evict_last')
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (8 + x0 + 16*x2), xmask, eviction_policy='evict_last')
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (12 + x0 + 16*x2), xmask, eviction_policy='evict_last')
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-12
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp12, tmp13)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 / tmp14
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp15, xmask)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_1], Original ATen: [aten.max]
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => getitem, max_1
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=2] = call_function[target=torch.ops.aten.max.dim](args = (%bmm, 0), kwargs = {})
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem : [num_users=1] = call_function[target=operator.getitem](args = (%max_1, 0), kwargs = {})
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_max_2 = async_compile.triton('triton_poi_fused_max_2', '''
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_max_2(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (16 + x0), xmask)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (32 + x0), xmask)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp0, tmp1)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp2, tmp3)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 > tmp1
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 == tmp1
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp0 != tmp0
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp1 != tmp1
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 > tmp8
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp5 | tmp9
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp7 & tmp8
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp6 | tmp11
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full([1], 0, tl.int64)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.full([1], 1, tl.int64)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 < tmp14
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp12 & tmp15
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp10 | tmp16
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp17, tmp0, tmp1)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp17, tmp13, tmp14)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 > tmp3
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp18 == tmp3
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp18 != tmp18
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp3 != tmp3
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 > tmp23
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp20 | tmp24
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp22 & tmp23
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp21 | tmp26
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.full([1], 2, tl.int64)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp19 < tmp28
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp27 & tmp29
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp25 | tmp30
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp31, tmp18, tmp3)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp31, tmp19, tmp28)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp33, xmask)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2 = args
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4), (4, 1))
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (3, 4, 4), (16, 4, 1))
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [normalize], Original ATen: [aten.div]
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_0.run(primals_1, buf0, 16, grid=grid(16), stream=stream0)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((3, 4, 4), (16, 4, 1), torch.float32)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [wght], Original ATen: [aten.div]
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_1.run(primals_2, buf1, 48, grid=grid(48), stream=stream0)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((3, 4, 4), (16, 4, 1), torch.float32)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [wght, cos_theta], Original ATen: [aten.div, aten.bmm]
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf0, (3, 4, 4), (0, 4, 1), 0), buf1, out=buf2)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4), (4, 1), torch.int64)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_1], Original ATen: [aten.max]
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_max_2.run(buf2, buf3, buf4, 16, grid=grid(16), stream=stream0)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf3, primals_2, reinterpret_tensor(buf0, (1, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf4, (1, 4, 4), (16, 4, 1), 0), )
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((3, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2])
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:20:31.389000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:31.393000 1413504 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/wa/cwa5vb7u3mj2drckftxgqnzufzxo7kln3gr2er3nfxkznki6ju6w.py
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['57_forward']
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qs/cqsm5gjix2dkpbmqsqin2cleudti6vjvww4mbwno2nonogaq5tlu.py
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [normalize], Original ATen: [aten.div]
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   normalize => div
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_1, %expand), kwargs = {})
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_0 = async_compile.triton('triton_poi_fused_div_0', '''
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-12
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp12, tmp13)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 / tmp14
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp15, xmask)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/rf/crfnrfhrcy4b5jgipm4icu724kt42sofq453btkjtehfenhfkw4f.py
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [wght], Original ATen: [aten.div]
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   wght => div_1
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_2, %expand_2), kwargs = {})
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_1 = async_compile.triton('triton_poi_fused_div_1', '''
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 48
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (4 + x0 + 16*x2), xmask, eviction_policy='evict_last')
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (8 + x0 + 16*x2), xmask, eviction_policy='evict_last')
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (12 + x0 + 16*x2), xmask, eviction_policy='evict_last')
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-12
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp12, tmp13)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 / tmp14
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp15, xmask)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_1], Original ATen: [aten.max]
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => getitem, max_1
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=2] = call_function[target=torch.ops.aten.max.dim](args = (%bmm, 0), kwargs = {})
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem : [num_users=1] = call_function[target=operator.getitem](args = (%max_1, 0), kwargs = {})
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_max_2 = async_compile.triton('triton_poi_fused_max_2', '''
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_max_2(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (16 + x0), xmask)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (32 + x0), xmask)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp0, tmp1)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp2, tmp3)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp0 > tmp1
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 == tmp1
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp0 != tmp0
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp1 != tmp1
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 > tmp8
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp5 | tmp9
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp7 & tmp8
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp6 | tmp11
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full([1], 0, tl.int64)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.full([1], 1, tl.int64)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 < tmp14
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp12 & tmp15
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp10 | tmp16
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp17, tmp0, tmp1)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp17, tmp13, tmp14)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 > tmp3
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp18 == tmp3
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp18 != tmp18
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp3 != tmp3
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 > tmp23
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp20 | tmp24
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp22 & tmp23
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp21 | tmp26
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.full([1], 2, tl.int64)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp19 < tmp28
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp27 & tmp29
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp25 | tmp30
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp31, tmp18, tmp3)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp31, tmp19, tmp28)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp33, xmask)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2 = args
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4), (4, 1))
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (3, 4, 4), (16, 4, 1))
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [normalize], Original ATen: [aten.div]
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_0.run(primals_1, buf0, 16, grid=grid(16), stream=stream0)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((3, 4, 4), (16, 4, 1), torch.float32)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [wght], Original ATen: [aten.div]
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_1.run(primals_2, buf1, 48, grid=grid(48), stream=stream0)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((3, 4, 4), (16, 4, 1), torch.float32)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [wght, cos_theta], Original ATen: [aten.div, aten.bmm]
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf0, (3, 4, 4), (0, 4, 1), 0), buf1, out=buf2)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4), (4, 1), torch.int64)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_1], Original ATen: [aten.max]
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_max_2.run(buf2, buf3, buf4, 16, grid=grid(16), stream=stream0)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf3, primals_2, reinterpret_tensor(buf0, (1, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf4, (1, 4, 4), (16, 4, 1), 0), )
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((3, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2])
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:10:14.711000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:10:14.715000 2785343 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/ac/cacqpdfoexwindbu2iosodjd2wrtfcqhdss2ggp4bbnkrevtbt7b.py
