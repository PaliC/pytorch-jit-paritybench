V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['5_forward']
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/b4/cb46fre3ckpetiqcbkvlfdyohuywhozoc6aujtwvaarkqeqmleja.py
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [img], Original ATen: [aten.constant_pad_nd]
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   img => constant_pad_nd
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %constant_pad_nd : [num_users=2] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%primals_1, [1, 1, 1, 1], 0.0), kwargs = {})
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_constant_pad_nd_0 = async_compile.triton('triton_poi_fused_constant_pad_nd_0', '''
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_constant_pad_nd_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 576
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 6) % 6)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 36
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + x1
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = (-1) + x0
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-5) + x0 + 4*x1 + 16*x2), tmp10 & xmask, other=0.0)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp11, xmask)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/s5/cs5vm4u5eogtijao2yitvmm22evfaeis5iwvd3nfyeoi34y2tbsi.py
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.hardtanh]
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_1, mul_1, mul_2, sub
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => clamp_max, clamp_min
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_1, 0.0), kwargs = {})
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 6.0), kwargs = {})
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_1 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_1', '''
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2304
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 36) % 16)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp15, tmp16)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 6.0
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.minimum(tmp17, tmp18)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp19, xmask)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/eh/ceh5nakyot7lqwpjlvxxqishyk6hls2qnipxlk3o44u3v3c3kkqs.py
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten._native_batch_norm_legit_no_training, aten.hardtanh]
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_3, mul_4, mul_5, sub_1
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => clamp_max_1, clamp_min_1
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_11), kwargs = {})
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_13), kwargs = {})
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_15), kwargs = {})
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_3, 0.0), kwargs = {})
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_1 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_1, 6.0), kwargs = {})
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_2', '''
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 16)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp15, tmp16)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 6.0
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.minimum(tmp17, tmp18)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp19, xmask)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/33/c33ijl5irxb4e2qmbr5r7cjvofvsjhwkapfgx6bqn3rru3gq4egr.py
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_8, add], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_6
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => add_5, mul_7, mul_8, sub_2
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_2, %unsqueeze_17), kwargs = {})
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %unsqueeze_19), kwargs = {})
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_7, %unsqueeze_21), kwargs = {})
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %unsqueeze_23), kwargs = {})
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %add_5), kwargs = {})
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_3', '''
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x3), xmask)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 - tmp2
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1e-05
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = libdevice.sqrt(tmp6)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1], 1, tl.int32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 / tmp7
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 * tmp10
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp3 * tmp11
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp0 + tmp16
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16 = args
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (16, 4, 1, 1), (4, 1, 1, 1))
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (16, ), (1, ))
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (16, ), (1, ))
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (16, ), (1, ))
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (16, ), (1, ))
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (16, 1, 3, 3), (9, 9, 3, 1))
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (16, ), (1, ))
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (16, ), (1, ))
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (16, ), (1, ))
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (16, ), (1, ))
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, 16, 1, 1), (16, 1, 1, 1))
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, ), (1, ))
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (4, ), (1, ))
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 6, 6), (144, 36, 6, 1), torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [img], Original ATen: [aten.constant_pad_nd]
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_constant_pad_nd_0.run(primals_1, buf0, 576, grid=grid(576), stream=stream0)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 16, 6, 6), (576, 36, 6, 1))
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 16, 6, 6), (576, 36, 6, 1), torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.hardtanh]
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_1.run(buf1, primals_3, primals_4, primals_5, primals_6, buf2, 2304, grid=grid(2304), stream=stream0)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(buf2, primals_7, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=16, bias=None)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 16, 4, 4), (256, 16, 4, 1))
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 16, 4, 4), (256, 16, 4, 1), torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten._native_batch_norm_legit_no_training, aten.hardtanh]
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_2.run(buf3, primals_8, primals_9, primals_10, primals_11, buf4, 1024, grid=grid(1024), stream=stream0)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, primals_12, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8, add], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_3.run(primals_1, buf5, primals_13, primals_14, primals_15, primals_16, buf6, 256, grid=grid(256), stream=stream0)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_16
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf6, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, buf0, buf1, buf2, buf3, buf4, buf5, )
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((16, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((16, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16])
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:19:42.235000 3745463 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:19:42.242000 3745463 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ko/ckorrmiqcg3epqd5nsm6mpvasj7vqkwqai2kvysbzbojupdc5xh3.py
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['5_forward']
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/b4/cb46fre3ckpetiqcbkvlfdyohuywhozoc6aujtwvaarkqeqmleja.py
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [img], Original ATen: [aten.constant_pad_nd]
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   img => constant_pad_nd
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %constant_pad_nd : [num_users=2] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%primals_1, [1, 1, 1, 1], 0.0), kwargs = {})
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_constant_pad_nd_0 = async_compile.triton('triton_poi_fused_constant_pad_nd_0', '''
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_constant_pad_nd_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 576
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 6) % 6)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 36
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + x1
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = (-1) + x0
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < tmp3
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 & tmp4
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 & tmp6
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp7
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-5) + x0 + 4*x1 + 16*x2), tmp10 & xmask, other=0.0)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp11, xmask)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/s5/cs5vm4u5eogtijao2yitvmm22evfaeis5iwvd3nfyeoi34y2tbsi.py
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.hardtanh]
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_1, mul_1, mul_2, sub
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => clamp_max, clamp_min
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_1, 0.0), kwargs = {})
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 6.0), kwargs = {})
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_1 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_1', '''
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2304
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 36) % 16)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp15, tmp16)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 6.0
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.minimum(tmp17, tmp18)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp19, xmask)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/eh/ceh5nakyot7lqwpjlvxxqishyk6hls2qnipxlk3o44u3v3c3kkqs.py
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten._native_batch_norm_legit_no_training, aten.hardtanh]
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_3, mul_4, mul_5, sub_1
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => clamp_max_1, clamp_min_1
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_11), kwargs = {})
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_13), kwargs = {})
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_15), kwargs = {})
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_3, 0.0), kwargs = {})
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_1 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_1, 6.0), kwargs = {})
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_2', '''
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 16)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp15, tmp16)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 6.0
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.minimum(tmp17, tmp18)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp19, xmask)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/33/c33ijl5irxb4e2qmbr5r7cjvofvsjhwkapfgx6bqn3rru3gq4egr.py
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_8, add], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_6
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => add_5, mul_7, mul_8, sub_2
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_2, %unsqueeze_17), kwargs = {})
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %unsqueeze_19), kwargs = {})
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_7, %unsqueeze_21), kwargs = {})
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %unsqueeze_23), kwargs = {})
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %add_5), kwargs = {})
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_3', '''
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x3), xmask)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 - tmp2
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1e-05
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = libdevice.sqrt(tmp6)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1], 1, tl.int32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 / tmp7
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 * tmp10
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp3 * tmp11
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp0 + tmp16
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16 = args
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (16, 4, 1, 1), (4, 1, 1, 1))
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (16, ), (1, ))
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (16, ), (1, ))
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (16, ), (1, ))
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (16, ), (1, ))
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (16, 1, 3, 3), (9, 9, 3, 1))
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (16, ), (1, ))
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (16, ), (1, ))
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (16, ), (1, ))
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (16, ), (1, ))
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, 16, 1, 1), (16, 1, 1, 1))
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, ), (1, ))
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (4, ), (1, ))
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 6, 6), (144, 36, 6, 1), torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [img], Original ATen: [aten.constant_pad_nd]
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_constant_pad_nd_0.run(primals_1, buf0, 576, grid=grid(576), stream=stream0)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 16, 6, 6), (576, 36, 6, 1))
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 16, 6, 6), (576, 36, 6, 1), torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.hardtanh]
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_1.run(buf1, primals_3, primals_4, primals_5, primals_6, buf2, 2304, grid=grid(2304), stream=stream0)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(buf2, primals_7, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=16, bias=None)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 16, 4, 4), (256, 16, 4, 1))
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 16, 4, 4), (256, 16, 4, 1), torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten._native_batch_norm_legit_no_training, aten.hardtanh]
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_hardtanh_2.run(buf3, primals_8, primals_9, primals_10, primals_11, buf4, 1024, grid=grid(1024), stream=stream0)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, primals_12, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8, add], Original ATen: [aten._native_batch_norm_legit_no_training, aten.add]
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_3.run(primals_1, buf5, primals_13, primals_14, primals_15, primals_16, buf6, 256, grid=grid(256), stream=stream0)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_16
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf6, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, buf0, buf1, buf2, buf3, buf4, buf5, )
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((16, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((16, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16])
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:08:42.111000 1098369 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:08:42.118000 1098369 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/xm/cxmnamm6a5pj7za2mmh4c4d6eqw5qoss2afciyt55minkbmefbl3.py
