V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_forward']
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4j/c4jf3g7lz6lhicl2pcgpwqcjcf6kfscknxxofh5yofju7kulqvx5.py
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_weight_norm], Original ATen: [aten._weight_norm_interface]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _weight_norm => div, mul, pow_1, pow_2, sum_1
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_2, 2), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1, 2], True), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 0.5), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_1, %pow_2), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_2, %div), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__weight_norm_interface_0 = async_compile.triton('triton_per_fused__weight_norm_interface_0', '''
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 16},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__weight_norm_interface_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__weight_norm_interface_0(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 15
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 15*x0), rmask & xmask, other=0.0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(rmask & xmask, tmp2, 0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp4, 1)[:, None]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 * tmp8
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp6, xmask)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r1 + 15*x0), tmp9, rmask & xmask)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/w7/cw7vehwaogpucn2dlkfz7howw7cxjnan2olut5bfz4gevbinm43j.py
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => convolution
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => gt, mul_1, where
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_4, %mul, %primals_3, [1], [7], [1], False, [0], 1), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution, 0), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 0.1), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt, %convolution, %mul_1), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_1 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_1', '''
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_1(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 16)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nc/cncvcivjcdxpnzaktnw4uiqbdnbp72xqlbwjcrpoiamafdod4bcf.py
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_weight_norm_1], Original ATen: [aten._weight_norm_interface]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _weight_norm_1 => div_1, mul_2, pow_3, pow_4, sum_2
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_6, 2), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, [1, 2], True), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_2, 0.5), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_5, %pow_4), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_6, %div_1), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__weight_norm_interface_2 = async_compile.triton('triton_per_fused__weight_norm_interface_2', '''
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 256},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__weight_norm_interface_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__weight_norm_interface_2(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 164
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 164*x0), rmask & xmask, other=0.0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(rmask & xmask, tmp2, 0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp4, 1)[:, None]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 * tmp8
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp6, xmask)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r1 + 164*x0), tmp9, rmask & xmask)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ct/cctgqa5mwc3djef2b7gzlwddzx3mowgq3cbbwp6xbclh7paz62co.py
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_2, x_3], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => convolution_1
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => gt_1, mul_3, where_1
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%where, %mul_2, %primals_7, [4], [20], [1], False, [0], 4), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_1 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_1, 0), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_1, 0.1), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_1, %convolution_1, %mul_3), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_3 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_3', '''
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_3(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 64)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ld/cldmdu4yn2wndkgfb4iayn5rk6bhaf7qong5436tlht5ei2u567p.py
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_weight_norm_2], Original ATen: [aten._weight_norm_interface]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _weight_norm_2 => div_2, mul_4, pow_5, pow_6, sum_3
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_5 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_9, 2), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_5, [1, 2], True), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_6 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_3, 0.5), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_8, %pow_6), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_9, %div_2), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__weight_norm_interface_4 = async_compile.triton('triton_per_fused__weight_norm_interface_4', '''
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256, 'r': 256},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__weight_norm_interface_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__weight_norm_interface_4(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 164
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 164*x0), rmask & xmask, other=0.0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(rmask & xmask, tmp2, 0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp4, 1)[:, None]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 * tmp8
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp6, xmask)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r1 + 164*x0), tmp9, rmask & xmask)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/om/comrmgojv26mv4lpgu3xizl7w4kenqlfcvipwsnv2hdm3o6uzvda.py
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_4, x_5], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_4 => convolution_2
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => gt_2, mul_5, where_2
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%where_1, %mul_4, %primals_10, [4], [20], [1], False, [0], 16), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_2 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_2, 0), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_2, 0.1), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_2 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_2, %convolution_2, %mul_5), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_5 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_5', '''
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_5(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 256)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tu/ctudycu63rx6vlt25dza4iu6dawzjlx6pjbznpb3y4qq327ystx4.py
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_weight_norm_3], Original ATen: [aten._weight_norm_interface]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _weight_norm_3 => div_3, mul_6, pow_7, pow_8, sum_4
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_7 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_12, 2), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_7, [1, 2], True), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_8 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_4, 0.5), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_11, %pow_8), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_12, %div_3), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__weight_norm_interface_6 = async_compile.triton('triton_per_fused__weight_norm_interface_6', '''
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024, 'r': 256},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__weight_norm_interface_6', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__weight_norm_interface_6(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 164
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 164*x0), rmask & xmask, other=0.0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(rmask & xmask, tmp2, 0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp4, 1)[:, None]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 * tmp8
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp6, xmask)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r1 + 164*x0), tmp9, rmask & xmask)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pf/cpfzqhvdqvta5mces4yyymao4qg7wlxjdlvsvovmuy3vroofyjgd.py
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_6, x_7], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_6 => convolution_3
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_7 => gt_3, mul_7, where_3
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%where_2, %mul_6, %primals_13, [4], [20], [1], False, [0], 64), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_3 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_3, 0), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_3, 0.1), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_3 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_3, %convolution_3, %mul_7), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_7 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_7', '''
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_7(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 1024)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp4, None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp7, None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/il/cili5ob27bzzegz6eskgrctdxjg2qrgreuumuca6yfutjgp4w4pn.py
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_weight_norm_5], Original ATen: [aten._weight_norm_interface]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _weight_norm_5 => div_5, mul_10, pow_11, pow_12, sum_6
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_11 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_18, 2), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_6 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_11, [1, 2], True), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_12 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_6, 0.5), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_5 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_17, %pow_12), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_18, %div_5), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__weight_norm_interface_8 = async_compile.triton('triton_red_fused__weight_norm_interface_8', '''
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024, 'r': 8192},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__weight_norm_interface_8', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__weight_norm_interface_8(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 5120
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp3 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r1 + 5120*x0), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tmp0 * tmp0
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = _tmp3 + tmp2
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp3 = tl.where(rmask & xmask, tmp4, _tmp3)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sum(_tmp3, 1)[:, None]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.sqrt(tmp3)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp5, xmask)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = tl.load(in_ptr0 + (r1 + 5120*x0), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp8 = tmp7 / tmp5
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp9 = tmp6 * tmp8
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(out_ptr0 + (r1 + 5120*x0), tmp9, rmask & xmask)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/m7/cm7jt4n2fyitkov7skaxn7kjbcavyyqvs74xn2oih4itazg34qh2.py
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_weight_norm_6], Original ATen: [aten._weight_norm_interface]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _weight_norm_6 => div_6, mul_12, pow_13, pow_14, sum_7
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_13 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_21, 2), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_7 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_13, [1, 2], True), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_14 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_7, 0.5), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_6 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_20, %pow_14), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_21, %div_6), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__weight_norm_interface_9 = async_compile.triton('triton_red_fused__weight_norm_interface_9', '''
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 4096},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__weight_norm_interface_9', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__weight_norm_interface_9(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 3072
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp3 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r0 = rindex
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0), rmask, eviction_policy='evict_last', other=0.0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tmp0 * tmp0
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = _tmp3 + tmp2
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp3 = tl.where(rmask, tmp4, _tmp3)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sum(_tmp3, 1)[:, None]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.sqrt(tmp3)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp5, None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (0))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.broadcast_to(tmp7, [XBLOCK, RBLOCK])
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r0 = rindex
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = tl.load(in_ptr0 + (r0), rmask, eviction_policy='evict_first', other=0.0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp9 = tmp8 / tmp5
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp10 = tmp6 * tmp9
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(out_ptr0 + (tl.broadcast_to(r0, [XBLOCK, RBLOCK])), tmp10, rmask)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/46/c46ae22jsyxouoxmkhvg5qpovbv43vvkdtd6rxwplh54dve6tuvz.py
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_12], Original ATen: [aten.convolution]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_12 => convolution_6
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_6 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%where_5, %mul_12, %primals_22, [1], [1], [1], False, [0], 1), kwargs = {})
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_10 = async_compile.triton('triton_poi_fused_convolution_10', '''
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_10', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_10(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (0))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 + tmp2
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp3, xmask)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22 = args
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (16, 1, 1), (1, 1, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (16, 1, 15), (15, 15, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (16, ), (1, ))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 1, 64), (64, 64, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (64, 1, 1), (1, 1, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (64, 4, 41), (164, 41, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (64, ), (1, ))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (256, 1, 1), (1, 1, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (256, 4, 41), (164, 41, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (256, ), (1, ))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (1024, 1, 1), (1, 1, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (1024, 4, 41), (164, 41, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (1024, ), (1, ))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (1024, 1, 1), (1, 1, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (1024, 4, 41), (164, 41, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (1024, ), (1, ))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (1024, 1, 1), (1, 1, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (1024, 1024, 5), (5120, 5, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (1024, ), (1, ))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (1, 1, 1), (1, 1, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (1, 1024, 3), (3072, 3, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (1, ), (1, ))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 1, 1), (1, 16, 16), torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = reinterpret_tensor(buf0, (16, 1, 1), (1, 1, 1), 0); del buf0  # reuse
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((16, 1, 15), (15, 15, 1), torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm], Original ATen: [aten._weight_norm_interface]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__weight_norm_interface_0.run(buf1, primals_2, primals_1, buf2, 16, 15, grid=grid(16), stream=stream0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(primals_4, buf2, stride=(1,), padding=(7,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 16, 64), (1024, 64, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 16, 64), (1024, 64, 1), torch.bool)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf3; del buf3  # reuse
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_1.run(buf5, primals_3, buf4, 4096, grid=grid(4096), stream=stream0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((64, 1, 1), (1, 64, 64), torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf6, (64, 1, 1), (1, 1, 1), 0); del buf6  # reuse
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((64, 4, 41), (164, 41, 1), torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm_1], Original ATen: [aten._weight_norm_interface]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__weight_norm_interface_2.run(buf7, primals_6, primals_5, buf8, 64, 164, grid=grid(64), stream=stream0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.convolution]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf5, buf8, stride=(4,), padding=(20,), dilation=(1,), transposed=False, output_padding=(0,), groups=4, bias=None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 64, 16), (1024, 16, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 64, 16), (1024, 16, 1), torch.bool)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = buf9; del buf9  # reuse
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2, x_3], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_3.run(buf11, primals_7, buf10, 4096, grid=grid(4096), stream=stream0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((256, 1, 1), (1, 256, 256), torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = reinterpret_tensor(buf12, (256, 1, 1), (1, 1, 1), 0); del buf12  # reuse
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((256, 4, 41), (164, 41, 1), torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm_2], Original ATen: [aten._weight_norm_interface]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__weight_norm_interface_4.run(buf13, primals_9, primals_8, buf14, 256, 164, grid=grid(256), stream=stream0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.convolution]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = extern_kernels.convolution(buf11, buf14, stride=(4,), padding=(20,), dilation=(1,), transposed=False, output_padding=(0,), groups=16, bias=None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf15, (4, 256, 4), (1024, 4, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 256, 4), (1024, 4, 1), torch.bool)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = buf15; del buf15  # reuse
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4, x_5], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_5.run(buf17, primals_10, buf16, 4096, grid=grid(4096), stream=stream0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((1024, 1, 1), (1, 1024, 1024), torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = reinterpret_tensor(buf18, (1024, 1, 1), (1, 1, 1), 0); del buf18  # reuse
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((1024, 4, 41), (164, 41, 1), torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm_3], Original ATen: [aten._weight_norm_interface]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__weight_norm_interface_6.run(buf19, primals_12, primals_11, buf20, 1024, 164, grid=grid(1024), stream=stream0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.convolution]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = extern_kernels.convolution(buf17, buf20, stride=(4,), padding=(20,), dilation=(1,), transposed=False, output_padding=(0,), groups=64, bias=None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf21, (4, 1024, 1), (1024, 1, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 1024, 1), (1024, 1, 1), torch.bool)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = buf21; del buf21  # reuse
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6, x_7], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_7.run(buf23, primals_13, buf22, 4096, grid=grid(4096), stream=stream0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((1024, 1, 1), (1, 1024, 1024), torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = reinterpret_tensor(buf24, (1024, 1, 1), (1, 1, 1), 0); del buf24  # reuse
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((1024, 4, 41), (164, 41, 1), torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm_4], Original ATen: [aten._weight_norm_interface]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__weight_norm_interface_6.run(buf25, primals_15, primals_14, buf26, 1024, 164, grid=grid(1024), stream=stream0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_8], Original ATen: [aten.convolution]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = extern_kernels.convolution(buf23, buf26, stride=(4,), padding=(20,), dilation=(1,), transposed=False, output_padding=(0,), groups=256, bias=None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf27, (4, 1024, 1), (1024, 1, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = empty_strided_cuda((4, 1024, 1), (1024, 1, 1), torch.bool)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = buf27; del buf27  # reuse
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_8, x_9], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_7.run(buf29, primals_16, buf28, 4096, grid=grid(4096), stream=stream0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_16
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((1024, 1, 1), (1, 1024, 1024), torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = reinterpret_tensor(buf30, (1024, 1, 1), (1, 1, 1), 0); del buf30  # reuse
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = empty_strided_cuda((1024, 1024, 5), (5120, 5, 1), torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm_5], Original ATen: [aten._weight_norm_interface]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__weight_norm_interface_8.run(buf31, primals_18, primals_17, buf32, 1024, 5120, grid=grid(1024), stream=stream0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_10], Original ATen: [aten.convolution]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = extern_kernels.convolution(buf29, buf32, stride=(1,), padding=(2,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf33, (4, 1024, 1), (1024, 1, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = empty_strided_cuda((4, 1024, 1), (1024, 1, 1), torch.bool)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = buf33; del buf33  # reuse
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_10, x_11], Original ATen: [aten.convolution, aten.leaky_relu]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_7.run(buf35, primals_19, buf34, 4096, grid=grid(4096), stream=stream0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_19
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = empty_strided_cuda((1, 1, 1), (1, 1, 1), torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = buf36; del buf36  # reuse
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf38 = empty_strided_cuda((1, 1024, 3), (3072, 3, 1), torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm_6], Original ATen: [aten._weight_norm_interface]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__weight_norm_interface_9.run(buf37, primals_21, primals_20, buf38, 1, 3072, grid=grid(1), stream=stream0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_12], Original ATen: [aten.convolution]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf39 = extern_kernels.convolution(buf35, buf38, stride=(1,), padding=(1,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf39, (4, 1, 1), (1, 1, 1))
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf40 = buf39; del buf39  # reuse
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_12], Original ATen: [aten.convolution]
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_10.run(buf40, primals_22, 4, grid=grid(4), stream=stream0)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_22
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf40, (4, 1), (1, 1), 0), buf5, buf11, buf17, buf23, buf29, buf35, buf40, buf2, buf8, buf14, buf20, buf26, buf32, buf38, primals_1, primals_2, primals_4, primals_5, primals_6, primals_8, primals_9, primals_11, primals_12, primals_14, primals_15, primals_17, primals_18, primals_20, primals_21, buf1, buf2, buf4, buf5, buf7, buf8, buf10, buf11, buf13, buf14, buf16, buf17, buf19, buf20, buf22, buf23, buf25, buf26, buf28, buf29, buf31, buf32, buf34, buf35, buf37, buf38, )
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((16, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((16, 1, 15), (15, 15, 1), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 1, 64), (64, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((64, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((64, 4, 41), (164, 41, 1), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((256, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((256, 4, 41), (164, 41, 1), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((1024, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((1024, 4, 41), (164, 41, 1), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((1024, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((1024, 4, 41), (164, 41, 1), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((1024, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((1024, 1024, 5), (5120, 5, 1), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((1, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((1, 1024, 3), (3072, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22])
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:55:33.535000 246962 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:55:33.548000 246962 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/dj/cdjmronyyhtcsl3kdp3cxpi5b6lljrwt34j4kvpyrgh73ct3srfd.py
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_forward']
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4j/c4jf3g7lz6lhicl2pcgpwqcjcf6kfscknxxofh5yofju7kulqvx5.py
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_weight_norm], Original ATen: [aten._weight_norm_interface]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _weight_norm => div, mul, pow_1, pow_2, sum_1
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_2, 2), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1, 2], True), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 0.5), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_1, %pow_2), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_2, %div), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__weight_norm_interface_0 = async_compile.triton('triton_per_fused__weight_norm_interface_0', '''
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 16},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__weight_norm_interface_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__weight_norm_interface_0(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 15
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 15*x0), rmask & xmask, other=0.0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(rmask & xmask, tmp2, 0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp4, 1)[:, None]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 * tmp8
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp6, xmask)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r1 + 15*x0), tmp9, rmask & xmask)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/w7/cw7vehwaogpucn2dlkfz7howw7cxjnan2olut5bfz4gevbinm43j.py
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => convolution
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => gt, mul_1, where
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_4, %mul, %primals_3, [1], [7], [1], False, [0], 1), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution, 0), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 0.1), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt, %convolution, %mul_1), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_1 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_1', '''
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_1(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 64) % 16)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/nc/cncvcivjcdxpnzaktnw4uiqbdnbp72xqlbwjcrpoiamafdod4bcf.py
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_weight_norm_1], Original ATen: [aten._weight_norm_interface]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _weight_norm_1 => div_1, mul_2, pow_3, pow_4, sum_2
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_6, 2), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, [1, 2], True), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_2, 0.5), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_5, %pow_4), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_6, %div_1), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__weight_norm_interface_2 = async_compile.triton('triton_per_fused__weight_norm_interface_2', '''
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 256},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__weight_norm_interface_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__weight_norm_interface_2(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 164
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 164*x0), rmask & xmask, other=0.0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(rmask & xmask, tmp2, 0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp4, 1)[:, None]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 * tmp8
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp6, xmask)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r1 + 164*x0), tmp9, rmask & xmask)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ct/cctgqa5mwc3djef2b7gzlwddzx3mowgq3cbbwp6xbclh7paz62co.py
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_2, x_3], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => convolution_1
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => gt_1, mul_3, where_1
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%where, %mul_2, %primals_7, [4], [20], [1], False, [0], 4), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_1 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_1, 0), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_1, 0.1), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_1, %convolution_1, %mul_3), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_3 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_3', '''
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_3(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 64)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ld/cldmdu4yn2wndkgfb4iayn5rk6bhaf7qong5436tlht5ei2u567p.py
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_weight_norm_2], Original ATen: [aten._weight_norm_interface]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _weight_norm_2 => div_2, mul_4, pow_5, pow_6, sum_3
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_5 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_9, 2), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_5, [1, 2], True), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_6 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_3, 0.5), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_8, %pow_6), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_9, %div_2), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__weight_norm_interface_4 = async_compile.triton('triton_per_fused__weight_norm_interface_4', '''
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256, 'r': 256},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__weight_norm_interface_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__weight_norm_interface_4(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 164
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 164*x0), rmask & xmask, other=0.0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(rmask & xmask, tmp2, 0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp4, 1)[:, None]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 * tmp8
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp6, xmask)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r1 + 164*x0), tmp9, rmask & xmask)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/om/comrmgojv26mv4lpgu3xizl7w4kenqlfcvipwsnv2hdm3o6uzvda.py
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_4, x_5], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_4 => convolution_2
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => gt_2, mul_5, where_2
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%where_1, %mul_4, %primals_10, [4], [20], [1], False, [0], 16), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_2 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_2, 0), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_2, 0.1), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_2 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_2, %convolution_2, %mul_5), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_5 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_5', '''
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_5(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 256)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp7, None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/tu/ctudycu63rx6vlt25dza4iu6dawzjlx6pjbznpb3y4qq327ystx4.py
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_weight_norm_3], Original ATen: [aten._weight_norm_interface]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _weight_norm_3 => div_3, mul_6, pow_7, pow_8, sum_4
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_7 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_12, 2), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_7, [1, 2], True), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_8 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_4, 0.5), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_11, %pow_8), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_12, %div_3), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__weight_norm_interface_6 = async_compile.triton('triton_per_fused__weight_norm_interface_6', '''
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024, 'r': 256},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__weight_norm_interface_6', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__weight_norm_interface_6(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 164
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 164*x0), rmask & xmask, other=0.0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(rmask & xmask, tmp2, 0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.sum(tmp4, 1)[:, None]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp0 * tmp8
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp6, xmask)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r1 + 164*x0), tmp9, rmask & xmask)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pf/cpfzqhvdqvta5mces4yyymao4qg7wlxjdlvsvovmuy3vroofyjgd.py
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_6, x_7], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_6 => convolution_3
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_7 => gt_3, mul_7, where_3
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%where_2, %mul_6, %primals_13, [4], [20], [1], False, [0], 64), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_3 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_3, 0), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_3, 0.1), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_3 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_3, %convolution_3, %mul_7), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_7 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_7', '''
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_7(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 1024)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.1
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp4, None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp7, None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/il/cili5ob27bzzegz6eskgrctdxjg2qrgreuumuca6yfutjgp4w4pn.py
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_weight_norm_5], Original ATen: [aten._weight_norm_interface]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _weight_norm_5 => div_5, mul_10, pow_11, pow_12, sum_6
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_11 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_18, 2), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_6 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_11, [1, 2], True), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_12 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_6, 0.5), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_5 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_17, %pow_12), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_18, %div_5), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__weight_norm_interface_8 = async_compile.triton('triton_red_fused__weight_norm_interface_8', '''
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024, 'r': 8192},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__weight_norm_interface_8', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__weight_norm_interface_8(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 5120
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp3 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r1 + 5120*x0), rmask & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tmp0 * tmp0
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = _tmp3 + tmp2
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp3 = tl.where(rmask & xmask, tmp4, _tmp3)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sum(_tmp3, 1)[:, None]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.sqrt(tmp3)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp5, xmask)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = tl.load(in_ptr0 + (r1 + 5120*x0), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp8 = tmp7 / tmp5
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp9 = tmp6 * tmp8
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(out_ptr0 + (r1 + 5120*x0), tmp9, rmask & xmask)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/m7/cm7jt4n2fyitkov7skaxn7kjbcavyyqvs74xn2oih4itazg34qh2.py
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [_weight_norm_6], Original ATen: [aten._weight_norm_interface]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   _weight_norm_6 => div_6, mul_12, pow_13, pow_14, sum_7
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_13 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_21, 2), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_7 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_13, [1, 2], True), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_14 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_7, 0.5), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_6 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_20, %pow_14), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_21, %div_6), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__weight_norm_interface_9 = async_compile.triton('triton_red_fused__weight_norm_interface_9', '''
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 4096},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__weight_norm_interface_9', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__weight_norm_interface_9(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 3072
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp3 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r0 = rindex
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0), rmask, eviction_policy='evict_last', other=0.0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tmp0 * tmp0
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = _tmp3 + tmp2
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp3 = tl.where(rmask, tmp4, _tmp3)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sum(_tmp3, 1)[:, None]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.sqrt(tmp3)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp5, None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (0))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.broadcast_to(tmp7, [XBLOCK, RBLOCK])
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r0 = rindex
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = tl.load(in_ptr0 + (r0), rmask, eviction_policy='evict_first', other=0.0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp9 = tmp8 / tmp5
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp10 = tmp6 * tmp9
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(out_ptr0 + (tl.broadcast_to(r0, [XBLOCK, RBLOCK])), tmp10, rmask)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/46/c46ae22jsyxouoxmkhvg5qpovbv43vvkdtd6rxwplh54dve6tuvz.py
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_12], Original ATen: [aten.convolution]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_12 => convolution_6
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_6 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%where_5, %mul_12, %primals_22, [1], [1], [1], False, [0], 1), kwargs = {})
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_10 = async_compile.triton('triton_poi_fused_convolution_10', '''
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_10', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_10(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (0))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 + tmp2
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp3, xmask)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22 = args
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (16, 1, 1), (1, 1, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (16, 1, 15), (15, 15, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (16, ), (1, ))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 1, 64), (64, 64, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (64, 1, 1), (1, 1, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (64, 4, 41), (164, 41, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (64, ), (1, ))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (256, 1, 1), (1, 1, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (256, 4, 41), (164, 41, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (256, ), (1, ))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (1024, 1, 1), (1, 1, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (1024, 4, 41), (164, 41, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (1024, ), (1, ))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (1024, 1, 1), (1, 1, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (1024, 4, 41), (164, 41, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (1024, ), (1, ))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (1024, 1, 1), (1, 1, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (1024, 1024, 5), (5120, 5, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (1024, ), (1, ))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (1, 1, 1), (1, 1, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (1, 1024, 3), (3072, 3, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (1, ), (1, ))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 1, 1), (1, 16, 16), torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = reinterpret_tensor(buf0, (16, 1, 1), (1, 1, 1), 0); del buf0  # reuse
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((16, 1, 15), (15, 15, 1), torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm], Original ATen: [aten._weight_norm_interface]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__weight_norm_interface_0.run(buf1, primals_2, primals_1, buf2, 16, 15, grid=grid(16), stream=stream0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(primals_4, buf2, stride=(1,), padding=(7,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 16, 64), (1024, 64, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 16, 64), (1024, 64, 1), torch.bool)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf3; del buf3  # reuse
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_1.run(buf5, primals_3, buf4, 4096, grid=grid(4096), stream=stream0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((64, 1, 1), (1, 64, 64), torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf6, (64, 1, 1), (1, 1, 1), 0); del buf6  # reuse
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((64, 4, 41), (164, 41, 1), torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm_1], Original ATen: [aten._weight_norm_interface]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__weight_norm_interface_2.run(buf7, primals_6, primals_5, buf8, 64, 164, grid=grid(64), stream=stream0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.convolution]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf5, buf8, stride=(4,), padding=(20,), dilation=(1,), transposed=False, output_padding=(0,), groups=4, bias=None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 64, 16), (1024, 16, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 64, 16), (1024, 16, 1), torch.bool)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = buf9; del buf9  # reuse
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2, x_3], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_3.run(buf11, primals_7, buf10, 4096, grid=grid(4096), stream=stream0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((256, 1, 1), (1, 256, 256), torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = reinterpret_tensor(buf12, (256, 1, 1), (1, 1, 1), 0); del buf12  # reuse
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((256, 4, 41), (164, 41, 1), torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm_2], Original ATen: [aten._weight_norm_interface]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__weight_norm_interface_4.run(buf13, primals_9, primals_8, buf14, 256, 164, grid=grid(256), stream=stream0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.convolution]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = extern_kernels.convolution(buf11, buf14, stride=(4,), padding=(20,), dilation=(1,), transposed=False, output_padding=(0,), groups=16, bias=None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf15, (4, 256, 4), (1024, 4, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 256, 4), (1024, 4, 1), torch.bool)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = buf15; del buf15  # reuse
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4, x_5], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_5.run(buf17, primals_10, buf16, 4096, grid=grid(4096), stream=stream0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((1024, 1, 1), (1, 1024, 1024), torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = reinterpret_tensor(buf18, (1024, 1, 1), (1, 1, 1), 0); del buf18  # reuse
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((1024, 4, 41), (164, 41, 1), torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm_3], Original ATen: [aten._weight_norm_interface]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__weight_norm_interface_6.run(buf19, primals_12, primals_11, buf20, 1024, 164, grid=grid(1024), stream=stream0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.convolution]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = extern_kernels.convolution(buf17, buf20, stride=(4,), padding=(20,), dilation=(1,), transposed=False, output_padding=(0,), groups=64, bias=None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf21, (4, 1024, 1), (1024, 1, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 1024, 1), (1024, 1, 1), torch.bool)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = buf21; del buf21  # reuse
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6, x_7], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_7.run(buf23, primals_13, buf22, 4096, grid=grid(4096), stream=stream0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((1024, 1, 1), (1, 1024, 1024), torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = reinterpret_tensor(buf24, (1024, 1, 1), (1, 1, 1), 0); del buf24  # reuse
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((1024, 4, 41), (164, 41, 1), torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm_4], Original ATen: [aten._weight_norm_interface]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__weight_norm_interface_6.run(buf25, primals_15, primals_14, buf26, 1024, 164, grid=grid(1024), stream=stream0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_8], Original ATen: [aten.convolution]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = extern_kernels.convolution(buf23, buf26, stride=(4,), padding=(20,), dilation=(1,), transposed=False, output_padding=(0,), groups=256, bias=None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf27, (4, 1024, 1), (1024, 1, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = empty_strided_cuda((4, 1024, 1), (1024, 1, 1), torch.bool)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = buf27; del buf27  # reuse
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_8, x_9], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_7.run(buf29, primals_16, buf28, 4096, grid=grid(4096), stream=stream0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_16
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((1024, 1, 1), (1, 1024, 1024), torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = reinterpret_tensor(buf30, (1024, 1, 1), (1, 1, 1), 0); del buf30  # reuse
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = empty_strided_cuda((1024, 1024, 5), (5120, 5, 1), torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm_5], Original ATen: [aten._weight_norm_interface]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__weight_norm_interface_8.run(buf31, primals_18, primals_17, buf32, 1024, 5120, grid=grid(1024), stream=stream0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_10], Original ATen: [aten.convolution]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = extern_kernels.convolution(buf29, buf32, stride=(1,), padding=(2,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf33, (4, 1024, 1), (1024, 1, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = empty_strided_cuda((4, 1024, 1), (1024, 1, 1), torch.bool)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = buf33; del buf33  # reuse
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_10, x_11], Original ATen: [aten.convolution, aten.leaky_relu]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_7.run(buf35, primals_19, buf34, 4096, grid=grid(4096), stream=stream0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_19
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = empty_strided_cuda((1, 1, 1), (1, 1, 1), torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = buf36; del buf36  # reuse
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf38 = empty_strided_cuda((1, 1024, 3), (3072, 3, 1), torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [_weight_norm_6], Original ATen: [aten._weight_norm_interface]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__weight_norm_interface_9.run(buf37, primals_21, primals_20, buf38, 1, 3072, grid=grid(1), stream=stream0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_12], Original ATen: [aten.convolution]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf39 = extern_kernels.convolution(buf35, buf38, stride=(1,), padding=(1,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf39, (4, 1, 1), (1, 1, 1))
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf40 = buf39; del buf39  # reuse
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_12], Original ATen: [aten.convolution]
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_10.run(buf40, primals_22, 4, grid=grid(4), stream=stream0)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_22
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf40, (4, 1), (1, 1), 0), buf5, buf11, buf17, buf23, buf29, buf35, buf40, buf2, buf8, buf14, buf20, buf26, buf32, buf38, primals_1, primals_2, primals_4, primals_5, primals_6, primals_8, primals_9, primals_11, primals_12, primals_14, primals_15, primals_17, primals_18, primals_20, primals_21, buf1, buf2, buf4, buf5, buf7, buf8, buf10, buf11, buf13, buf14, buf16, buf17, buf19, buf20, buf22, buf23, buf25, buf26, buf28, buf29, buf31, buf32, buf34, buf35, buf37, buf38, )
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((16, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((16, 1, 15), (15, 15, 1), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 1, 64), (64, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((64, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((64, 4, 41), (164, 41, 1), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((256, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((256, 4, 41), (164, 41, 1), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((1024, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((1024, 4, 41), (164, 41, 1), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((1024, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((1024, 4, 41), (164, 41, 1), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((1024, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((1024, 1024, 5), (5120, 5, 1), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((1, 1, 1), (1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((1, 1024, 3), (3072, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22])
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:45:49.632000 2867218 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:45:49.664000 2867218 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/5c/c5clarmr77x445o7navx4vwbbrfawbaolqtwsietexbgagncgg72.py
