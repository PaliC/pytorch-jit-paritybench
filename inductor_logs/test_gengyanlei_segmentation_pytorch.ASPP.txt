V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7u/c7ulechq4pakkuzso7xbpdlaujbxzcbkezjv4xzpjps3zzwm3gks.py
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [image_features], Original ATen: [aten.mean]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   image_features => mean
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_1, [-1, -2], True), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mean_0 = async_compile.triton('triton_per_fused_mean_0', '''
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048, 'r': 16},
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mean_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mean_0(in_out_ptr0, in_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2048
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 16.0
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 / tmp5
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp6, xmask)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/oc/cocxsbcyhcvbhy3igo63fl557qfqv7frz3sbqzv7kjeodpwur66x.py
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [image_features_1], Original ATen: [aten._to_copy]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   image_features_1 => convert_element_type_1
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_1 = async_compile.triton('triton_poi_fused__to_copy_1', '''
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.full([1], 0, tl.int64)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hj/chj2am73vhpk2sougs7ggxg2iyzvc76dfjdrgb6luadlgqqny3sb.py
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [image_features_1], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   image_features_1 => clamp_max_2, clamp_min, clamp_min_2, convert_element_type, iota, mul, sub
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, 0.0), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul, 0.0), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_3), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_sub_2 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_sub_2', '''
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_sub_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_sub_2(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 0.0
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sx/csxiwyae3uxlmhrars6tp4aivsutetkxb5l3rb3m3stfiu5mlp6t.py
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2, image_features_1], Original ATen: [aten.convolution, aten.relu, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   image_features_1 => _unsafe_index, _unsafe_index_1, add_2, mul_2, sub_1
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => relu
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%mean, %primals_2, %primals_3, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=5] = call_function[target=torch.ops.aten.relu.default](args = (%convolution,), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %clamp_max_2), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_2), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_convolution_mul_relu_sub_3 = async_compile.triton('triton_poi_fused__unsafe_index_add_convolution_mul_relu_sub_3', '''
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*i64', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_convolution_mul_relu_sub_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_convolution_mul_relu_sub_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 16
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 256)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x6 = xindex
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (x5), None, eviction_policy='evict_last')
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x2), None, eviction_policy='evict_last')
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 1, tl.int32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 0, tl.int32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.maximum(tmp12, tmp11)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 + tmp1
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 < 0
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.where(tmp16, tmp15, tmp14)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 - tmp13
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp13 + tmp20
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x6), tmp21, None)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/un/cunzf2liozqjx3igofrkcagsr6cbrd37s66mwdztzlr3r6saqy72.py
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%add_4, %relu_1, %relu_2, %relu_3, %relu_4], 1), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_4 = async_compile.triton('triton_poi_fused_cat_4', '''
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*i64', 'in_ptr2': '*i64', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*i64', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'in_ptr12': '*fp32', 'in_ptr13': '*fp32', 'in_ptr14': '*fp32', 'in_ptr15': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_4(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, in_ptr13, in_ptr14, in_ptr15, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 81920
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 1280)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 20480
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 16)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x2
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 256, tl.int64)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x4 + 16*(x2) + 4096*x3), tmp4, other=0.0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x1), tmp4, eviction_policy='evict_last', other=0.0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([XBLOCK], 1, tl.int32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 < 0
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp9, tmp8, tmp6)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x0), tmp4, eviction_policy='evict_last', other=0.0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp7
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 < 0
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp13, tmp12, tmp11)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr3 + (256*x3 + (x2)), tmp4, eviction_policy='evict_last', other=0.0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x2), tmp4, eviction_policy='evict_last', other=0.0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr5 + (x0), tmp4, eviction_policy='evict_last', other=0.0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 + tmp7
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 < 0
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp22, tmp21, tmp20)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp19 - tmp19
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr6 + (x0), tmp4, eviction_policy='evict_last', other=0.0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp24 * tmp25
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp19 + tmp26
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 - tmp5
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr7 + (x1), tmp4, eviction_policy='evict_last', other=0.0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 * tmp29
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp5 + tmp30
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.full(tmp31.shape, 0.0, tmp31.dtype)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp4, tmp31, tmp32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp0 >= tmp3
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.full([1], 512, tl.int64)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp0 < tmp35
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp34 & tmp36
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr8 + (x4 + 16*((-256) + x2) + 4096*x3), tmp37, other=0.0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr9 + ((-256) + x2), tmp37, eviction_policy='evict_last', other=0.0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 + tmp39
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full([1], 0, tl.int32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = triton_helpers.maximum(tmp41, tmp40)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.full(tmp42.shape, 0.0, tmp42.dtype)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.where(tmp37, tmp42, tmp43)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp0 >= tmp35
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.full([1], 768, tl.int64)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp0 < tmp46
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp45 & tmp47
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr10 + (x4 + 16*((-512) + x2) + 4096*x3), tmp48, other=0.0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr11 + ((-512) + x2), tmp48, eviction_policy='evict_last', other=0.0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp49 + tmp50
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.full([1], 0, tl.int32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = triton_helpers.maximum(tmp52, tmp51)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.full(tmp53.shape, 0.0, tmp53.dtype)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.where(tmp48, tmp53, tmp54)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp0 >= tmp46
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.full([1], 1024, tl.int64)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp0 < tmp57
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp56 & tmp58
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.load(in_ptr12 + (x4 + 16*((-768) + x2) + 4096*x3), tmp59, other=0.0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tl.load(in_ptr13 + ((-768) + x2), tmp59, eviction_policy='evict_last', other=0.0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp60 + tmp61
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.full([1], 0, tl.int32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = triton_helpers.maximum(tmp63, tmp62)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.full(tmp64.shape, 0.0, tmp64.dtype)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.where(tmp59, tmp64, tmp65)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp0 >= tmp57
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tl.full([1], 1280, tl.int64)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp0 < tmp68
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tl.load(in_ptr14 + (x4 + 16*((-1024) + x2) + 4096*x3), tmp67, other=0.0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.load(in_ptr15 + ((-1024) + x2), tmp67, eviction_policy='evict_last', other=0.0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp70 + tmp71
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.full([1], 0, tl.int32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = triton_helpers.maximum(tmp73, tmp72)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tl.full(tmp74.shape, 0.0, tmp74.dtype)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tl.where(tmp67, tmp74, tmp75)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.where(tmp59, tmp66, tmp76)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.where(tmp48, tmp55, tmp77)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tl.where(tmp37, tmp44, tmp78)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl.where(tmp4, tmp33, tmp79)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp80, None)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6k/c6keihzxbryasksa6icwhvk3nmqkp3txk3qwm3siwq3k5wztblkk.py
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => convolution_1
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => relu_1
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_1, %primals_4, %primals_5, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_1,), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_4 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_1, 0), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_threshold_backward_5 = async_compile.triton('triton_poi_fused_convolution_relu_threshold_backward_5', '''
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_threshold_backward_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_threshold_backward_5(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 256)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), None)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp6, None)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qj/cqjd767czc4o6574226b6ohogx2dh4qq3o6m33rv3igwuodoq3u7.py
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => relu
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%mean, %primals_2, %primals_3, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=5] = call_function[target=torch.ops.aten.relu.default](args = (%convolution,), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_5 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu, 0), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_threshold_backward_6 = async_compile.triton('triton_poi_fused_convolution_relu_threshold_backward_6', '''
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_threshold_backward_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_threshold_backward_6(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ts/ctstifieqtqydghfbrn5b3zdecq5jokfni44oxt4u2w543taxfjm.py
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => convolution_5
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => relu_5
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_5 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%cat, %primals_12, %primals_13, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_5 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_5,), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_5, 0), kwargs = {})
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_threshold_backward_7 = async_compile.triton('triton_poi_fused_convolution_relu_threshold_backward_7', '''
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_threshold_backward_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_threshold_backward_7(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 256)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp4, None)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp6, None)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13 = args
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 512, 4, 4), (8192, 16, 4, 1))
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (256, 512, 1, 1), (512, 1, 1, 1))
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (256, ), (1, ))
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (256, 512, 1, 1), (512, 1, 1, 1))
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (256, ), (1, ))
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (256, 512, 3, 3), (4608, 9, 3, 1))
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (256, ), (1, ))
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (256, 512, 3, 3), (4608, 9, 3, 1))
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (256, ), (1, ))
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (256, 512, 3, 3), (4608, 9, 3, 1))
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (256, ), (1, ))
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (256, 1280, 1, 1), (1280, 1, 1, 1))
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (256, ), (1, ))
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 512, 1, 1), (512, 1, 2048, 2048), torch.float32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = reinterpret_tensor(buf0, (4, 512, 1, 1), (512, 1, 1, 1), 0); del buf0  # reuse
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [image_features], Original ATen: [aten.mean]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mean_0.run(buf1, primals_1, 2048, 16, grid=grid(2048), stream=stream0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [image_features_1], Original ATen: [aten._to_copy]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf3, 4, grid=grid(4), stream=stream0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [image_features_1], Original ATen: [aten.add, aten.clamp]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf4, 4, grid=grid(4), stream=stream0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [image_features_1], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf5, 4, grid=grid(4), stream=stream0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [image_features_1], Original ATen: [aten.add, aten.clamp]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf6, 4, grid=grid(4), stream=stream0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [image_features_1], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_2.run(buf7, 4, grid=grid(4), stream=stream0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 1), (1, 1), torch.float32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [image_features_1], Original ATen: [aten.sub, aten.clamp]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_2.run(buf9, 4, grid=grid(4), stream=stream0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(primals_1, primals_4, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 256, 4, 4), (4096, 16, 4, 1))
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(primals_1, primals_6, stride=(1, 1), padding=(6, 6), dilation=(6, 6), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 256, 4, 4), (4096, 16, 4, 1))
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = extern_kernels.convolution(primals_1, primals_8, stride=(1, 1), padding=(12, 12), dilation=(12, 12), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf12, (4, 256, 4, 4), (4096, 16, 4, 1))
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9], Original ATen: [aten.convolution]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = extern_kernels.convolution(primals_1, primals_10, stride=(1, 1), padding=(18, 18), dilation=(18, 18), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf13, (4, 256, 4, 4), (4096, 16, 4, 1))
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 256, 1, 1), (256, 1, 1, 1))
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 256, 4, 4), (4096, 16, 4, 1), torch.float32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2, image_features_1], Original ATen: [aten.convolution, aten.relu, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_convolution_mul_relu_sub_3.run(buf3, buf5, buf2, primals_3, buf6, buf7, buf8, 16384, grid=grid(16384), stream=stream0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 1280, 4, 4), (20480, 16, 4, 1), torch.float32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_4.run(buf8, buf4, buf5, buf2, primals_3, buf6, buf7, buf9, buf10, primals_5, buf11, primals_7, buf12, primals_9, buf13, primals_11, buf14, 81920, grid=grid(81920), stream=stream0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 256, 4, 4), (4096, 16, 4, 1), torch.bool)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_threshold_backward_5.run(buf10, primals_5, buf21, 16384, grid=grid(16384), stream=stream0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 256, 4, 4), (4096, 16, 4, 1), torch.bool)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_threshold_backward_5.run(buf11, primals_7, buf20, 16384, grid=grid(16384), stream=stream0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 256, 4, 4), (4096, 16, 4, 1), torch.bool)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7, input_8], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_threshold_backward_5.run(buf12, primals_9, buf19, 16384, grid=grid(16384), stream=stream0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf12
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 256, 4, 4), (4096, 16, 4, 1), torch.bool)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9, input_10], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_threshold_backward_5.run(buf13, primals_11, buf18, 16384, grid=grid(16384), stream=stream0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 256, 1, 1), (256, 1, 1, 1), torch.bool)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_threshold_backward_6.run(buf2, primals_3, buf22, 1024, grid=grid(1024), stream=stream0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11], Original ATen: [aten.convolution]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = extern_kernels.convolution(buf14, primals_12, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf15, (4, 256, 4, 4), (4096, 16, 4, 1))
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf15; del buf15  # reuse
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 256, 4, 4), (4096, 16, 4, 1), torch.bool)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_threshold_backward_7.run(buf16, primals_13, buf17, 16384, grid=grid(16384), stream=stream0)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf16, primals_1, primals_2, primals_4, primals_6, primals_8, primals_10, primals_12, buf1, buf3, buf4, buf5, buf6, buf7, buf9, buf14, buf17, buf18, buf19, buf20, buf21, buf22, )
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 512, 4, 4), (8192, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((256, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((256, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((256, 512, 3, 3), (4608, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((256, 512, 3, 3), (4608, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((256, 512, 3, 3), (4608, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((256, 1280, 1, 1), (1280, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13])
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:23:32.853000 2898401 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:23:32.866000 2898401 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/m3/cm3qrbettlhem4u2iygiwsduzts2zpkdxqcknz22i6in3xr3cajv.py
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7u/c7ulechq4pakkuzso7xbpdlaujbxzcbkezjv4xzpjps3zzwm3gks.py
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [image_features], Original ATen: [aten.mean]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   image_features => mean
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_1, [-1, -2], True), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mean_0 = async_compile.triton('triton_per_fused_mean_0', '''
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048, 'r': 16},
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mean_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mean_0(in_out_ptr0, in_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2048
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 16.0
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 / tmp5
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp6, xmask)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/oc/cocxsbcyhcvbhy3igo63fl557qfqv7frz3sbqzv7kjeodpwur66x.py
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [image_features_1], Original ATen: [aten._to_copy]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   image_features_1 => convert_element_type_1
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_1 = async_compile.triton('triton_poi_fused__to_copy_1', '''
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.full([1], 0, tl.int64)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/hj/chj2am73vhpk2sougs7ggxg2iyzvc76dfjdrgb6luadlgqqny3sb.py
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [image_features_1], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   image_features_1 => clamp_max_2, clamp_min, clamp_min_2, convert_element_type, iota, mul, sub
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, 0.0), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul, 0.0), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_3), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_sub_2 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_sub_2', '''
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_sub_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_sub_2(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 0.0
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sx/csxiwyae3uxlmhrars6tp4aivsutetkxb5l3rb3m3stfiu5mlp6t.py
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2, image_features_1], Original ATen: [aten.convolution, aten.relu, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   image_features_1 => _unsafe_index, _unsafe_index_1, add_2, mul_2, sub_1
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => relu
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%mean, %primals_2, %primals_3, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=5] = call_function[target=torch.ops.aten.relu.default](args = (%convolution,), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %clamp_max_2), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_2), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_convolution_mul_relu_sub_3 = async_compile.triton('triton_poi_fused__unsafe_index_add_convolution_mul_relu_sub_3', '''
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*i64', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_convolution_mul_relu_sub_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_convolution_mul_relu_sub_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 16
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 256)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x6 = xindex
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (x5), None, eviction_policy='evict_last')
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x2), None, eviction_policy='evict_last')
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 1, tl.int32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 0, tl.int32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.maximum(tmp12, tmp11)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 + tmp1
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 < 0
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.where(tmp16, tmp15, tmp14)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 - tmp13
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp13 + tmp20
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x6), tmp21, None)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/un/cunzf2liozqjx3igofrkcagsr6cbrd37s66mwdztzlr3r6saqy72.py
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%add_4, %relu_1, %relu_2, %relu_3, %relu_4], 1), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_4 = async_compile.triton('triton_poi_fused_cat_4', '''
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 131072}, 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*i64', 'in_ptr2': '*i64', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*i64', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'in_ptr12': '*fp32', 'in_ptr13': '*fp32', 'in_ptr14': '*fp32', 'in_ptr15': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_4(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, in_ptr13, in_ptr14, in_ptr15, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 81920
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 1280)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 20480
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 16)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x2
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 256, tl.int64)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x4 + 16*(x2) + 4096*x3), tmp4, other=0.0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x1), tmp4, eviction_policy='evict_last', other=0.0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([XBLOCK], 1, tl.int32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 < 0
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp9, tmp8, tmp6)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x0), tmp4, eviction_policy='evict_last', other=0.0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp7
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 < 0
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp13, tmp12, tmp11)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr3 + (256*x3 + (x2)), tmp4, eviction_policy='evict_last', other=0.0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x2), tmp4, eviction_policy='evict_last', other=0.0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr5 + (x0), tmp4, eviction_policy='evict_last', other=0.0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 + tmp7
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 < 0
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp22, tmp21, tmp20)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp19 - tmp19
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr6 + (x0), tmp4, eviction_policy='evict_last', other=0.0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp24 * tmp25
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp19 + tmp26
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 - tmp5
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr7 + (x1), tmp4, eviction_policy='evict_last', other=0.0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 * tmp29
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp5 + tmp30
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.full(tmp31.shape, 0.0, tmp31.dtype)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp4, tmp31, tmp32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp0 >= tmp3
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.full([1], 512, tl.int64)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp0 < tmp35
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp34 & tmp36
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr8 + (x4 + 16*((-256) + x2) + 4096*x3), tmp37, other=0.0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr9 + ((-256) + x2), tmp37, eviction_policy='evict_last', other=0.0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 + tmp39
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full([1], 0, tl.int32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = triton_helpers.maximum(tmp41, tmp40)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.full(tmp42.shape, 0.0, tmp42.dtype)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.where(tmp37, tmp42, tmp43)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp0 >= tmp35
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.full([1], 768, tl.int64)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp0 < tmp46
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp45 & tmp47
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr10 + (x4 + 16*((-512) + x2) + 4096*x3), tmp48, other=0.0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr11 + ((-512) + x2), tmp48, eviction_policy='evict_last', other=0.0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp49 + tmp50
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.full([1], 0, tl.int32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = triton_helpers.maximum(tmp52, tmp51)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.full(tmp53.shape, 0.0, tmp53.dtype)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.where(tmp48, tmp53, tmp54)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp0 >= tmp46
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.full([1], 1024, tl.int64)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp0 < tmp57
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp56 & tmp58
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.load(in_ptr12 + (x4 + 16*((-768) + x2) + 4096*x3), tmp59, other=0.0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tl.load(in_ptr13 + ((-768) + x2), tmp59, eviction_policy='evict_last', other=0.0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp60 + tmp61
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.full([1], 0, tl.int32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = triton_helpers.maximum(tmp63, tmp62)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.full(tmp64.shape, 0.0, tmp64.dtype)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.where(tmp59, tmp64, tmp65)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp0 >= tmp57
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tl.full([1], 1280, tl.int64)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp0 < tmp68
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tl.load(in_ptr14 + (x4 + 16*((-1024) + x2) + 4096*x3), tmp67, other=0.0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.load(in_ptr15 + ((-1024) + x2), tmp67, eviction_policy='evict_last', other=0.0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp70 + tmp71
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.full([1], 0, tl.int32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = triton_helpers.maximum(tmp73, tmp72)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tl.full(tmp74.shape, 0.0, tmp74.dtype)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tl.where(tmp67, tmp74, tmp75)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.where(tmp59, tmp66, tmp76)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.where(tmp48, tmp55, tmp77)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tl.where(tmp37, tmp44, tmp78)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl.where(tmp4, tmp33, tmp79)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp80, None)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/6k/c6keihzxbryasksa6icwhvk3nmqkp3txk3qwm3siwq3k5wztblkk.py
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => convolution_1
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => relu_1
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_1, %primals_4, %primals_5, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_1,), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_4 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_1, 0), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_threshold_backward_5 = async_compile.triton('triton_poi_fused_convolution_relu_threshold_backward_5', '''
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_threshold_backward_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_threshold_backward_5(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 256)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), None)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp6, None)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qj/cqjd767czc4o6574226b6ohogx2dh4qq3o6m33rv3igwuodoq3u7.py
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => relu
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%mean, %primals_2, %primals_3, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=5] = call_function[target=torch.ops.aten.relu.default](args = (%convolution,), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_5 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu, 0), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_threshold_backward_6 = async_compile.triton('triton_poi_fused_convolution_relu_threshold_backward_6', '''
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_threshold_backward_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_threshold_backward_6(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ts/ctstifieqtqydghfbrn5b3zdecq5jokfni44oxt4u2w543taxfjm.py
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => convolution_5
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => relu_5
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_5 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%cat, %primals_12, %primals_13, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_5 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_5,), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_5, 0), kwargs = {})
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_relu_threshold_backward_7 = async_compile.triton('triton_poi_fused_convolution_relu_threshold_backward_7', '''
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_threshold_backward_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_relu_threshold_backward_7(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 256)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp4, None)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp6, None)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13 = args
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 512, 4, 4), (8192, 16, 4, 1))
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (256, 512, 1, 1), (512, 1, 1, 1))
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (256, ), (1, ))
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (256, 512, 1, 1), (512, 1, 1, 1))
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (256, ), (1, ))
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (256, 512, 3, 3), (4608, 9, 3, 1))
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (256, ), (1, ))
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (256, 512, 3, 3), (4608, 9, 3, 1))
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (256, ), (1, ))
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (256, 512, 3, 3), (4608, 9, 3, 1))
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (256, ), (1, ))
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (256, 1280, 1, 1), (1280, 1, 1, 1))
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (256, ), (1, ))
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 512, 1, 1), (512, 1, 2048, 2048), torch.float32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = reinterpret_tensor(buf0, (4, 512, 1, 1), (512, 1, 1, 1), 0); del buf0  # reuse
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [image_features], Original ATen: [aten.mean]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mean_0.run(buf1, primals_1, 2048, 16, grid=grid(2048), stream=stream0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [image_features_1], Original ATen: [aten._to_copy]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf3, 4, grid=grid(4), stream=stream0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [image_features_1], Original ATen: [aten.add, aten.clamp]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf4, 4, grid=grid(4), stream=stream0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [image_features_1], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf5, 4, grid=grid(4), stream=stream0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [image_features_1], Original ATen: [aten.add, aten.clamp]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf6, 4, grid=grid(4), stream=stream0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [image_features_1], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_2.run(buf7, 4, grid=grid(4), stream=stream0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 1), (1, 1), torch.float32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [image_features_1], Original ATen: [aten.sub, aten.clamp]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_2.run(buf9, 4, grid=grid(4), stream=stream0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(primals_1, primals_4, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 256, 4, 4), (4096, 16, 4, 1))
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(primals_1, primals_6, stride=(1, 1), padding=(6, 6), dilation=(6, 6), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 256, 4, 4), (4096, 16, 4, 1))
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = extern_kernels.convolution(primals_1, primals_8, stride=(1, 1), padding=(12, 12), dilation=(12, 12), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf12, (4, 256, 4, 4), (4096, 16, 4, 1))
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9], Original ATen: [aten.convolution]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = extern_kernels.convolution(primals_1, primals_10, stride=(1, 1), padding=(18, 18), dilation=(18, 18), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf13, (4, 256, 4, 4), (4096, 16, 4, 1))
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 256, 1, 1), (256, 1, 1, 1))
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 256, 4, 4), (4096, 16, 4, 1), torch.float32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2, image_features_1], Original ATen: [aten.convolution, aten.relu, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_convolution_mul_relu_sub_3.run(buf3, buf5, buf2, primals_3, buf6, buf7, buf8, 16384, grid=grid(16384), stream=stream0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 1280, 4, 4), (20480, 16, 4, 1), torch.float32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_4.run(buf8, buf4, buf5, buf2, primals_3, buf6, buf7, buf9, buf10, primals_5, buf11, primals_7, buf12, primals_9, buf13, primals_11, buf14, 81920, grid=grid(81920), stream=stream0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 256, 4, 4), (4096, 16, 4, 1), torch.bool)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_threshold_backward_5.run(buf10, primals_5, buf21, 16384, grid=grid(16384), stream=stream0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 256, 4, 4), (4096, 16, 4, 1), torch.bool)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_threshold_backward_5.run(buf11, primals_7, buf20, 16384, grid=grid(16384), stream=stream0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 256, 4, 4), (4096, 16, 4, 1), torch.bool)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7, input_8], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_threshold_backward_5.run(buf12, primals_9, buf19, 16384, grid=grid(16384), stream=stream0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf12
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 256, 4, 4), (4096, 16, 4, 1), torch.bool)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9, input_10], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_threshold_backward_5.run(buf13, primals_11, buf18, 16384, grid=grid(16384), stream=stream0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 256, 1, 1), (256, 1, 1, 1), torch.bool)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_threshold_backward_6.run(buf2, primals_3, buf22, 1024, grid=grid(1024), stream=stream0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11], Original ATen: [aten.convolution]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = extern_kernels.convolution(buf14, primals_12, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf15, (4, 256, 4, 4), (4096, 16, 4, 1))
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf15; del buf15  # reuse
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 256, 4, 4), (4096, 16, 4, 1), torch.bool)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_relu_threshold_backward_7.run(buf16, primals_13, buf17, 16384, grid=grid(16384), stream=stream0)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf16, primals_1, primals_2, primals_4, primals_6, primals_8, primals_10, primals_12, buf1, buf3, buf4, buf5, buf6, buf7, buf9, buf14, buf17, buf18, buf19, buf20, buf21, buf22, )
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 512, 4, 4), (8192, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((256, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((256, 512, 1, 1), (512, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((256, 512, 3, 3), (4608, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((256, 512, 3, 3), (4608, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((256, 512, 3, 3), (4608, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((256, 1280, 1, 1), (1280, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13])
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 21:12:24.126000 340664 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:12:24.137000 340664 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/6e/c6ebws3trniavsv6obo5lxlf55hwwd7gv6jldbyxkunlwmmskqwu.py
