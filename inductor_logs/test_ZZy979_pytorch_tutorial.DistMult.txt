V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_forward']
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/jm/cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [getitem, getitem_1, mul, getitem_2, mul_1, sum_1], Original ATen: [aten.index, aten.mul, aten.sum]
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   getitem => index
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   getitem_1 => index_1
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   getitem_2 => index_2
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%primals_1, [%primals_2]), kwargs = {})
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_1 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%primals_3, [%primals_4]), kwargs = {})
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index, %index_1), kwargs = {})
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_2 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%primals_1, [%primals_5]), kwargs = {})
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %index_2), kwargs = {})
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_1, [1]), kwargs = {})
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_index_mul_sum_0 = async_compile.triton('triton_poi_fused_index_mul_sum_0', '''
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*i64', 'in_ptr3': '*fp32', 'in_ptr4': '*i64', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_index_mul_sum_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_index_mul_sum_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (x0), xmask)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (0))
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.broadcast_to(tmp16, [XBLOCK])
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (1))
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.broadcast_to(tmp25, [XBLOCK])
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr4 + (1))
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.broadcast_to(tmp35, [XBLOCK])
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr0 + (2))
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.broadcast_to(tmp45, [XBLOCK])
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.load(in_ptr4 + (2))
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.broadcast_to(tmp55, [XBLOCK])
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.load(in_ptr0 + (3))
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.broadcast_to(tmp65, [XBLOCK])
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tl.load(in_ptr4 + (3))
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tl.broadcast_to(tmp75, [XBLOCK])
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.full([XBLOCK], 4, tl.int32)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 < 0
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp4, tmp3, tmp1)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp5) & (tmp5 < 4), "index out of bounds: 0 <= tmp5 < 4")
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (tmp5), None, eviction_policy='evict_last')
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.float32)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 + tmp2
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 < 0
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.where(tmp11, tmp10, tmp9)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp12) & (tmp12 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp12 < 4")
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (4*tmp12), xmask, eviction_policy='evict_last')
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp8 * tmp14
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp2
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 < 0
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp19, tmp18, tmp17)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp20) & (tmp20 < 4), "index out of bounds: 0 <= tmp20 < 4")
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr1 + (tmp20), None, eviction_policy='evict_last')
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22.to(tl.float32)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp15 * tmp23
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 + tmp2
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 < 0
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.where(tmp28, tmp27, tmp26)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp29) & (tmp29 < 4), "index out of bounds: 0 <= tmp29 < 4")
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr1 + (tmp29), None, eviction_policy='evict_last')
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31.to(tl.float32)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr3 + (1 + 4*tmp12), xmask, eviction_policy='evict_last')
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 * tmp33
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 + tmp2
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 < 0
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.where(tmp38, tmp37, tmp36)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp39) & (tmp39 < 4), "index out of bounds: 0 <= tmp39 < 4")
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr1 + (tmp39), None, eviction_policy='evict_last')
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp41.to(tl.float32)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp34 * tmp42
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp24 + tmp43
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 + tmp2
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 < 0
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp48, tmp47, tmp46)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp49) & (tmp49 < 4), "index out of bounds: 0 <= tmp49 < 4")
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr1 + (tmp49), None, eviction_policy='evict_last')
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51.to(tl.float32)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.load(in_ptr3 + (2 + 4*tmp12), xmask, eviction_policy='evict_last')
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp52 * tmp53
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp56 + tmp2
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp56 < 0
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tl.where(tmp58, tmp57, tmp56)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp59) & (tmp59 < 4), "index out of bounds: 0 <= tmp59 < 4")
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tl.load(in_ptr1 + (tmp59), None, eviction_policy='evict_last')
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp61.to(tl.float32)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp54 * tmp62
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp44 + tmp63
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp66 + tmp2
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp66 < 0
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.where(tmp68, tmp67, tmp66)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp69) & (tmp69 < 4), "index out of bounds: 0 <= tmp69 < 4")
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.load(in_ptr1 + (tmp69), None, eviction_policy='evict_last')
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp71.to(tl.float32)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.load(in_ptr3 + (3 + 4*tmp12), xmask, eviction_policy='evict_last')
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp72 * tmp73
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp76 + tmp2
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp76 < 0
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tl.where(tmp78, tmp77, tmp76)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp79) & (tmp79 < 4), "index out of bounds: 0 <= tmp79 < 4")
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tl.load(in_ptr1 + (tmp79), None, eviction_policy='evict_last')
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp81.to(tl.float32)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp74 * tmp82
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp64 + tmp83
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp84, xmask)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, ), (1, ))
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4), (4, 1))
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [getitem, getitem_1, mul, getitem_2, mul_1, sum_1], Original ATen: [aten.index, aten.mul, aten.sum]
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_index_mul_sum_0.run(primals_2, primals_1, primals_4, primals_3, primals_5, buf0, 4, grid=grid(4), stream=stream0)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf0, primals_1, primals_2, primals_4, primals_5, )
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.int64)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.int64)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.int64)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.int64)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:38:26.176000 348144 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:38:26.180000 348144 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6g/c6gfgghj5rwnu47rrwrfhugzyje75tspkbqj54mh4jdlkt7vzmvs.py
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_forward']
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/jm/cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [getitem, getitem_1, mul, getitem_2, mul_1, sum_1], Original ATen: [aten.index, aten.mul, aten.sum]
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   getitem => index
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   getitem_1 => index_1
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   getitem_2 => index_2
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%primals_1, [%primals_2]), kwargs = {})
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_1 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%primals_3, [%primals_4]), kwargs = {})
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index, %index_1), kwargs = {})
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_2 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%primals_1, [%primals_5]), kwargs = {})
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %index_2), kwargs = {})
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_1, [1]), kwargs = {})
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_index_mul_sum_0 = async_compile.triton('triton_poi_fused_index_mul_sum_0', '''
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*i64', 'in_ptr3': '*fp32', 'in_ptr4': '*i64', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_index_mul_sum_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_index_mul_sum_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (x0), xmask)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (0))
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.broadcast_to(tmp16, [XBLOCK])
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (1))
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.broadcast_to(tmp25, [XBLOCK])
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr4 + (1))
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.broadcast_to(tmp35, [XBLOCK])
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr0 + (2))
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.broadcast_to(tmp45, [XBLOCK])
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.load(in_ptr4 + (2))
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.broadcast_to(tmp55, [XBLOCK])
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.load(in_ptr0 + (3))
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.broadcast_to(tmp65, [XBLOCK])
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tl.load(in_ptr4 + (3))
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tl.broadcast_to(tmp75, [XBLOCK])
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.full([XBLOCK], 4, tl.int32)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 < 0
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp4, tmp3, tmp1)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp5) & (tmp5 < 4), "index out of bounds: 0 <= tmp5 < 4")
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (tmp5), None, eviction_policy='evict_last')
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.float32)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 + tmp2
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 < 0
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.where(tmp11, tmp10, tmp9)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp12) & (tmp12 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp12 < 4")
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (4*tmp12), xmask, eviction_policy='evict_last')
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp8 * tmp14
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp2
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 < 0
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp19, tmp18, tmp17)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp20) & (tmp20 < 4), "index out of bounds: 0 <= tmp20 < 4")
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr1 + (tmp20), None, eviction_policy='evict_last')
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22.to(tl.float32)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp15 * tmp23
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 + tmp2
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 < 0
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.where(tmp28, tmp27, tmp26)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp29) & (tmp29 < 4), "index out of bounds: 0 <= tmp29 < 4")
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr1 + (tmp29), None, eviction_policy='evict_last')
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31.to(tl.float32)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr3 + (1 + 4*tmp12), xmask, eviction_policy='evict_last')
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 * tmp33
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 + tmp2
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 < 0
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.where(tmp38, tmp37, tmp36)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp39) & (tmp39 < 4), "index out of bounds: 0 <= tmp39 < 4")
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr1 + (tmp39), None, eviction_policy='evict_last')
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp41.to(tl.float32)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp34 * tmp42
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp24 + tmp43
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 + tmp2
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 < 0
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp48, tmp47, tmp46)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp49) & (tmp49 < 4), "index out of bounds: 0 <= tmp49 < 4")
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr1 + (tmp49), None, eviction_policy='evict_last')
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51.to(tl.float32)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.load(in_ptr3 + (2 + 4*tmp12), xmask, eviction_policy='evict_last')
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp52 * tmp53
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp56 + tmp2
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp56 < 0
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tl.where(tmp58, tmp57, tmp56)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp59) & (tmp59 < 4), "index out of bounds: 0 <= tmp59 < 4")
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tl.load(in_ptr1 + (tmp59), None, eviction_policy='evict_last')
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp61.to(tl.float32)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp54 * tmp62
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp44 + tmp63
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp66 + tmp2
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp66 < 0
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.where(tmp68, tmp67, tmp66)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp69) & (tmp69 < 4), "index out of bounds: 0 <= tmp69 < 4")
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.load(in_ptr1 + (tmp69), None, eviction_policy='evict_last')
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp71.to(tl.float32)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.load(in_ptr3 + (3 + 4*tmp12), xmask, eviction_policy='evict_last')
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp72 * tmp73
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp76 + tmp2
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp76 < 0
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tl.where(tmp78, tmp77, tmp76)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp79) & (tmp79 < 4), "index out of bounds: 0 <= tmp79 < 4")
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tl.load(in_ptr1 + (tmp79), None, eviction_policy='evict_last')
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp81.to(tl.float32)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp74 * tmp82
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp64 + tmp83
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp84, xmask)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, ), (1, ))
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4), (4, 1))
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [getitem, getitem_1, mul, getitem_2, mul_1, sum_1], Original ATen: [aten.index, aten.mul, aten.sum]
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_index_mul_sum_0.run(primals_2, primals_1, primals_4, primals_3, primals_5, buf0, 4, grid=grid(4), stream=stream0)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf0, primals_1, primals_2, primals_4, primals_5, )
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.int64)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.int64)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.int64)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.int64)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:27:12.707000 1657437 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:27:12.710000 1657437 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/vm/cvmyai57eq7m7peppyln2mfnln54vsy2cnxsguiwdvv2x4vikeof.py
