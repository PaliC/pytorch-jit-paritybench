V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_forward']
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/d6/cd6xrsqtx3k7g4tmm53nsge2erxwxhohrjnrkonpgikyi5xvg4xg.py
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, clone], Original ATen: [aten.mul, aten.clone]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clone => clone_default
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_scalar
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_scalar : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%permute_default, 1.0), kwargs = {})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_default : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_default,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_mul_0 = async_compile.triton('triton_poi_fused_clone_mul_0', '''
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_mul_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_mul_0(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp4, xmask & ymask)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/u7/cu77i64ln5nmxcagk2nt4244s2jumfttbs7qnup5ozgpq4t6a6pc.py
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add, amax, sub, exp, sum_1, eq, logical_not, any_1], Original ATen: [aten.add, aten._safe_softmax]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_tensor
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   amax => amax_default
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   any_1 => any_dim
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   eq => eq_scalar
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   exp => exp_default
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logical_not => logical_not_default
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub_tensor
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_dim_int_list
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_default_2, %primals_8), kwargs = {})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%add_tensor, [-1], True), kwargs = {})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_tensor, %amax_default), kwargs = {})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_default : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_tensor,), kwargs = {})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_dim_int_list : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_default, [-1], True), kwargs = {})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq_scalar : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%add_tensor, -inf), kwargs = {})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_not_default : [num_users=1] = call_function[target=torch.ops.aten.logical_not.default](args = (%eq_scalar,), kwargs = {})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %any_dim : [num_users=1] = call_function[target=torch.ops.aten.any.dim](args = (%logical_not_default, -1, True), kwargs = {})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__safe_softmax_add_1 = async_compile.triton('triton_poi_fused__safe_softmax_add_1', '''
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__safe_softmax_add_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__safe_softmax_add_1(in_ptr0, in_ptr1, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x2), xmask, eviction_policy='evict_last')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x2), xmask, eviction_policy='evict_last')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (2 + 4*x2), xmask, eviction_policy='evict_last')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (3 + 4*x2), xmask, eviction_policy='evict_last')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp2, tmp5)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 + tmp8
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp6, tmp9)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp10, tmp13)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp2 - tmp14
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.exp(tmp15)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp5 - tmp14
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl_math.exp(tmp17)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 + tmp18
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp9 - tmp14
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl_math.exp(tmp20)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp19 + tmp21
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp13 - tmp14
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl_math.exp(tmp23)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp22 + tmp24
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = float("-inf")
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp2 == tmp26
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 == 0
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28.to(tl.int64)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = (tmp29 != 0)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp5 == tmp26
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 == 0
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32.to(tl.int64)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = (tmp33 != 0)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp30 | tmp34
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp9 == tmp26
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 == 0
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37.to(tl.int64)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = (tmp38 != 0)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp35 | tmp39
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp13 == tmp26
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp41 == 0
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42.to(tl.int64)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = (tmp43 != 0)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp40 | tmp44
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp14, xmask)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp25, xmask)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x2), tmp45, xmask)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/u5/cu5gdka3aqkhotwhzkf27ak7xldo5jcb5junolb7kt75env4hobo.py
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add, amax, sub, exp, div, logical_not_1, full, where], Original ATen: [aten.add, aten._safe_softmax]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_tensor
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   amax => amax_default
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   div => div_tensor
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   exp => exp_default
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   full => full_default
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logical_not_1 => logical_not_default_1
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub_tensor
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   where => where_self
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_default_2, %primals_8), kwargs = {})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%add_tensor, [-1], True), kwargs = {})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_tensor, %amax_default), kwargs = {})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_default : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_tensor,), kwargs = {})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_default, %sum_dim_int_list), kwargs = {})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_not_default_1 : [num_users=1] = call_function[target=torch.ops.aten.logical_not.default](args = (%any_dim,), kwargs = {})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([4, 4, 4, 4], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_self : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%logical_not_default_1, %full_default, %div_tensor), kwargs = {})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__safe_softmax_add_2 = async_compile.triton('triton_poi_fused__safe_softmax_add_2', '''
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i1', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__safe_softmax_add_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__safe_softmax_add_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, xnumel, XBLOCK : tl.constexpr):
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 4
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = (xindex % 64)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask, eviction_policy='evict_last').to(tl.int1)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_out_ptr0 + (x4), xmask)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x5), xmask, eviction_policy='evict_last')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x3), xmask, eviction_policy='evict_last')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr3 + (x3), xmask, eviction_policy='evict_last')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 == 0
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 - tmp5
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl_math.exp(tmp6)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 / tmp8
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 0.0
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.where(tmp1, tmp10, tmp9)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x4), tmp11, xmask)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/v5/cv5wp3h6v4nnjb5dz3jago3e3nbmpgyd44i6nke356inlpjffuuc.py
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [clone_2], Original ATen: [aten.clone]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clone_2 => clone_default_2
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_default_2 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_default_3,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_3 = async_compile.triton('triton_poi_fused_clone_3', '''
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_3(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp2, xmask & ymask)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/an/cany2jbw2jdajpiihiclpvumcasljofi46nmewpzgmcfjpkuy5qh.py
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [context_layer_1], Original ATen: [aten.clone]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   context_layer_1 => clone_4
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_4 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_7,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_4 = async_compile.triton('triton_poi_fused_clone_4', '''
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp0, xmask & ymask)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8 = args
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4), (4, 1))
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4), (16, 4, 1))
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4), (4, 1))
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4, 4), (16, 4, 1))
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mixed_query_layer], Original ATen: [aten.addmm]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(primals_3, (16, 4), (4, 1), 0), reinterpret_tensor(primals_1, (4, 4), (1, 4), 0), out=buf0)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mixed_key_layer], Original ATen: [aten.addmm]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(primals_3, (16, 4), (4, 1), 0), reinterpret_tensor(primals_4, (4, 4), (1, 4), 0), out=buf1)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mixed_value_layer], Original ATen: [aten.addmm]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(primals_3, (16, 4), (4, 1), 0), reinterpret_tensor(primals_6, (4, 4), (1, 4), 0), out=buf2)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 1), torch.float32)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, clone], Original ATen: [aten.mul, aten.clone]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_mul_0.run(buf0, primals_2, buf3, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = reinterpret_tensor(buf0, (4, 4, 1, 4), (16, 4, 4, 1), 0); del buf0  # reuse
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_1, clone_1], Original ATen: [aten.mul, aten.clone]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_mul_0.run(buf1, primals_5, buf4, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((16, 4, 4), (16, 4, 1), torch.float32)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [bmm], Original ATen: [aten.bmm]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf3, (16, 4, 1), (4, 1, 0), 0), reinterpret_tensor(buf4, (16, 1, 4), (4, 0, 1), 0), out=buf5)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf1, (4, 4, 4, 1), (16, 4, 1, 64), 0); del buf1  # reuse
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 64), torch.float32)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 64), torch.bool)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add, amax, sub, exp, sum_1, eq, logical_not, any_1], Original ATen: [aten.add, aten._safe_softmax]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__safe_softmax_add_1.run(buf5, primals_8, buf6, buf7, buf8, 64, grid=grid(64), stream=stream0)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf5, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf5  # reuse
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add, amax, sub, exp, div, logical_not_1, full, where], Original ATen: [aten.add, aten._safe_softmax]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__safe_softmax_add_2.run(buf9, buf8, primals_8, buf6, buf7, 256, grid=grid(256), stream=stream0)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf7, (4, 4, 4, 1), (16, 4, 1, 1), 0); del buf7  # reuse
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [clone_2], Original ATen: [aten.clone]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_3.run(buf2, primals_7, buf10, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf2, (16, 4, 1), (4, 1, 1), 0); del buf2  # reuse
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [bmm_1], Original ATen: [aten.bmm]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf9, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf10, (16, 4, 1), (4, 1, 0), 0), out=buf11)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf6, (4, 4, 4, 1), (16, 4, 1, 1), 0); del buf6  # reuse
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [context_layer_1], Original ATen: [aten.clone]
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_4.run(buf11, buf12, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf12, (4, 4, 4), (16, 4, 1), 0), reinterpret_tensor(primals_3, (16, 4), (4, 1), 0), buf9, reinterpret_tensor(buf10, (16, 1, 4), (4, 1, 1), 0), reinterpret_tensor(buf3, (16, 1, 4), (4, 1, 1), 0), reinterpret_tensor(buf4, (16, 4, 1), (4, 1, 4), 0), )
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8])
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:22:59.572000 3362231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:22:59.578000 3362231 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/mb/cmbqjmy6njsultqmwoxwotuakgcd4usasvol77mgno3wtaqcfkc4.py
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_forward']
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/d6/cd6xrsqtx3k7g4tmm53nsge2erxwxhohrjnrkonpgikyi5xvg4xg.py
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, clone], Original ATen: [aten.mul, aten.clone]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clone => clone_default
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_scalar
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_scalar : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%permute_default, 1.0), kwargs = {})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_default : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_default,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_mul_0 = async_compile.triton('triton_poi_fused_clone_mul_0', '''
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_mul_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_mul_0(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp4, xmask & ymask)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/u7/cu77i64ln5nmxcagk2nt4244s2jumfttbs7qnup5ozgpq4t6a6pc.py
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add, amax, sub, exp, sum_1, eq, logical_not, any_1], Original ATen: [aten.add, aten._safe_softmax]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_tensor
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   amax => amax_default
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   any_1 => any_dim
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   eq => eq_scalar
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   exp => exp_default
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logical_not => logical_not_default
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub_tensor
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_dim_int_list
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_default_2, %primals_8), kwargs = {})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%add_tensor, [-1], True), kwargs = {})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_tensor, %amax_default), kwargs = {})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_default : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_tensor,), kwargs = {})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_dim_int_list : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_default, [-1], True), kwargs = {})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq_scalar : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%add_tensor, -inf), kwargs = {})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_not_default : [num_users=1] = call_function[target=torch.ops.aten.logical_not.default](args = (%eq_scalar,), kwargs = {})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %any_dim : [num_users=1] = call_function[target=torch.ops.aten.any.dim](args = (%logical_not_default, -1, True), kwargs = {})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__safe_softmax_add_1 = async_compile.triton('triton_poi_fused__safe_softmax_add_1', '''
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__safe_softmax_add_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__safe_softmax_add_1(in_ptr0, in_ptr1, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x2), xmask, eviction_policy='evict_last')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x2), xmask, eviction_policy='evict_last')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (2 + 4*x2), xmask, eviction_policy='evict_last')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (3 + 4*x2), xmask, eviction_policy='evict_last')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp2, tmp5)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 + tmp8
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp6, tmp9)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp10, tmp13)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp2 - tmp14
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.exp(tmp15)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp5 - tmp14
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl_math.exp(tmp17)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 + tmp18
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp9 - tmp14
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl_math.exp(tmp20)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp19 + tmp21
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp13 - tmp14
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl_math.exp(tmp23)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp22 + tmp24
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = float("-inf")
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp2 == tmp26
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 == 0
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28.to(tl.int64)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = (tmp29 != 0)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp5 == tmp26
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 == 0
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32.to(tl.int64)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = (tmp33 != 0)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp30 | tmp34
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp9 == tmp26
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 == 0
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37.to(tl.int64)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = (tmp38 != 0)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp35 | tmp39
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp13 == tmp26
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp41 == 0
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42.to(tl.int64)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = (tmp43 != 0)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp40 | tmp44
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp14, xmask)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp25, xmask)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x2), tmp45, xmask)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/u5/cu5gdka3aqkhotwhzkf27ak7xldo5jcb5junolb7kt75env4hobo.py
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add, amax, sub, exp, div, logical_not_1, full, where], Original ATen: [aten.add, aten._safe_softmax]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_tensor
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   amax => amax_default
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   div => div_tensor
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   exp => exp_default
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   full => full_default
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logical_not_1 => logical_not_default_1
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub_tensor
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   where => where_self
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_default_2, %primals_8), kwargs = {})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%add_tensor, [-1], True), kwargs = {})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_tensor, %amax_default), kwargs = {})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_default : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_tensor,), kwargs = {})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_default, %sum_dim_int_list), kwargs = {})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_not_default_1 : [num_users=1] = call_function[target=torch.ops.aten.logical_not.default](args = (%any_dim,), kwargs = {})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([4, 4, 4, 4], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_self : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%logical_not_default_1, %full_default, %div_tensor), kwargs = {})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__safe_softmax_add_2 = async_compile.triton('triton_poi_fused__safe_softmax_add_2', '''
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i1', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__safe_softmax_add_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__safe_softmax_add_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, xnumel, XBLOCK : tl.constexpr):
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 4
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = (xindex % 64)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask, eviction_policy='evict_last').to(tl.int1)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_out_ptr0 + (x4), xmask)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x5), xmask, eviction_policy='evict_last')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x3), xmask, eviction_policy='evict_last')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr3 + (x3), xmask, eviction_policy='evict_last')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 == 0
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 - tmp5
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl_math.exp(tmp6)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 / tmp8
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 0.0
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.where(tmp1, tmp10, tmp9)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x4), tmp11, xmask)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/v5/cv5wp3h6v4nnjb5dz3jago3e3nbmpgyd44i6nke356inlpjffuuc.py
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [clone_2], Original ATen: [aten.clone]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clone_2 => clone_default_2
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_default_2 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_default_3,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_3 = async_compile.triton('triton_poi_fused_clone_3', '''
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_3(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp2, xmask & ymask)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/an/cany2jbw2jdajpiihiclpvumcasljofi46nmewpzgmcfjpkuy5qh.py
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [context_layer_1], Original ATen: [aten.clone]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   context_layer_1 => clone_4
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_4 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_7,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_4 = async_compile.triton('triton_poi_fused_clone_4', '''
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp0, xmask & ymask)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8 = args
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4), (4, 1))
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4), (16, 4, 1))
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4), (4, 1))
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4, 4), (16, 4, 1))
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mixed_query_layer], Original ATen: [aten.addmm]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(primals_3, (16, 4), (4, 1), 0), reinterpret_tensor(primals_1, (4, 4), (1, 4), 0), out=buf0)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mixed_key_layer], Original ATen: [aten.addmm]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(primals_3, (16, 4), (4, 1), 0), reinterpret_tensor(primals_4, (4, 4), (1, 4), 0), out=buf1)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mixed_value_layer], Original ATen: [aten.addmm]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(primals_3, (16, 4), (4, 1), 0), reinterpret_tensor(primals_6, (4, 4), (1, 4), 0), out=buf2)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 1), torch.float32)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, clone], Original ATen: [aten.mul, aten.clone]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_mul_0.run(buf0, primals_2, buf3, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = reinterpret_tensor(buf0, (4, 4, 1, 4), (16, 4, 4, 1), 0); del buf0  # reuse
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_1, clone_1], Original ATen: [aten.mul, aten.clone]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_mul_0.run(buf1, primals_5, buf4, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((16, 4, 4), (16, 4, 1), torch.float32)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [bmm], Original ATen: [aten.bmm]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf3, (16, 4, 1), (4, 1, 0), 0), reinterpret_tensor(buf4, (16, 1, 4), (4, 0, 1), 0), out=buf5)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf1, (4, 4, 4, 1), (16, 4, 1, 64), 0); del buf1  # reuse
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 64), torch.float32)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 64), torch.bool)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add, amax, sub, exp, sum_1, eq, logical_not, any_1], Original ATen: [aten.add, aten._safe_softmax]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__safe_softmax_add_1.run(buf5, primals_8, buf6, buf7, buf8, 64, grid=grid(64), stream=stream0)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf5, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf5  # reuse
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add, amax, sub, exp, div, logical_not_1, full, where], Original ATen: [aten.add, aten._safe_softmax]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__safe_softmax_add_2.run(buf9, buf8, primals_8, buf6, buf7, 256, grid=grid(256), stream=stream0)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf7, (4, 4, 4, 1), (16, 4, 1, 1), 0); del buf7  # reuse
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [clone_2], Original ATen: [aten.clone]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_3.run(buf2, primals_7, buf10, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf2, (16, 4, 1), (4, 1, 1), 0); del buf2  # reuse
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [bmm_1], Original ATen: [aten.bmm]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf9, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf10, (16, 4, 1), (4, 1, 0), 0), out=buf11)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf6, (4, 4, 4, 1), (16, 4, 1, 1), 0); del buf6  # reuse
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [context_layer_1], Original ATen: [aten.clone]
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_4.run(buf11, buf12, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf12, (4, 4, 4), (16, 4, 1), 0), reinterpret_tensor(primals_3, (16, 4), (4, 1), 0), buf9, reinterpret_tensor(buf10, (16, 1, 4), (4, 1, 1), 0), reinterpret_tensor(buf3, (16, 1, 4), (4, 1, 1), 0), reinterpret_tensor(buf4, (16, 4, 1), (4, 1, 4), 0), )
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8])
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:12:55.738000 2018590 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:12:55.746000 2018590 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/vf/cvfnudmhsbrg6uvh52srqksacn3bcy4y3off6d4bn2fxnzu7phv4.py
