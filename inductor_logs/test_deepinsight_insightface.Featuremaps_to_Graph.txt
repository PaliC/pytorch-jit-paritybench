V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['22_forward']
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/l2/cl26f32rsl5yew5zo6lmq33s56hlbrlhfhymngg4r6kmfd6anuth.py
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [fea_node], Original ATen: [aten.clone, aten._unsafe_view]
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fea_node => clone, view_1
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %view_1 : [num_users=3] = call_function[target=torch.ops.aten.reshape.default](args = (%clone, [64, 4]), kwargs = {})
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_view_clone_0 = async_compile.triton('triton_poi_fused__unsafe_view_clone_0', '''
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_view_clone_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_view_clone_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x1 + 64*(y0 // 16) + ((y0 % 16))), xmask & ymask, eviction_policy='evict_last')
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 4*y0), tmp0, xmask & ymask)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pz/cpz5zgdbnnofn5zhuxsszh5f3igzgdltmfndngve47mqxpud543y.py
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [fea_node_1], Original ATen: [aten._softmax]
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fea_node_1 => amax, exp, sub, sum_1
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_2, [-1], True), kwargs = {})
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_2, %amax), kwargs = {})
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_1 = async_compile.triton('triton_poi_fused__softmax_1', '''
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_1(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (7*x0), xmask, eviction_policy='evict_last')
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 7*x0), xmask, eviction_policy='evict_last')
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 7*x0), xmask, eviction_policy='evict_last')
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 7*x0), xmask, eviction_policy='evict_last')
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4 + 7*x0), xmask, eviction_policy='evict_last')
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (5 + 7*x0), xmask, eviction_policy='evict_last')
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (6 + 7*x0), xmask, eviction_policy='evict_last')
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp0, tmp1)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp2, tmp3)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp4, tmp5)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp8, tmp9)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp10, tmp11)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp0 - tmp12
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl_math.exp(tmp13)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp1 - tmp12
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.exp(tmp15)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 + tmp16
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp3 - tmp12
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl_math.exp(tmp18)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 + tmp19
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp5 - tmp12
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl_math.exp(tmp21)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 + tmp22
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp7 - tmp12
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl_math.exp(tmp24)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp23 + tmp25
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp9 - tmp12
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl_math.exp(tmp27)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp26 + tmp28
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp11 - tmp12
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl_math.exp(tmp30)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp29 + tmp31
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp12, xmask)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp32, xmask)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/jd/cjdq2plal3v3a5xgxjxxpvuyt4dor3h5hk7uvqfaabcf7hen5s6b.py
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [fea_node_1], Original ATen: [aten._softmax]
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fea_node_1 => amax, div, exp, sub, sum_1
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_2, [-1], True), kwargs = {})
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_2, %amax), kwargs = {})
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_2 = async_compile.triton('triton_poi_fused__softmax_2', '''
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_2(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 448
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 7
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl_math.exp(tmp2)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 / tmp4
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp5, xmask)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/co/ccoe4wnavvxztbswoqm6w6yts7bwbufvxvltizexxe5fmv7r3kie.py
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [graph_node], Original ATen: [aten.relu, aten.threshold_backward]
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   graph_node => relu
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%bmm,), kwargs = {})
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu, 0), kwargs = {})
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_threshold_backward_3 = async_compile.triton('triton_poi_fused_relu_threshold_backward_3', '''
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32}, 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_threshold_backward_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_threshold_backward_3(in_out_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 28
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int32)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 <= tmp3
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp2, xmask)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3 = args
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 7), (7, 1))
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 1), (1, 1))
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [fea_node], Original ATen: [aten.clone, aten._unsafe_view]
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_view_clone_0.run(primals_1, buf0, 64, 4, grid=grid(64, 4), stream=stream0)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((64, 7), (7, 1), torch.float32)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [fea_node], Original ATen: [aten.mm]
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf0, primals_2, out=buf1)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((64, 1), (1, 1), torch.float32)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [weight_node], Original ATen: [aten.mm]
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf0, primals_3, out=buf2)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 16, 1), (16, 1, 64), torch.float32)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 16, 1), (16, 1, 64), torch.float32)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [fea_node_1], Original ATen: [aten._softmax]
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_1.run(buf1, buf3, buf4, 64, grid=grid(64), stream=stream0)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = reinterpret_tensor(buf1, (4, 16, 7), (112, 7, 1), 0); del buf1  # reuse
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [fea_node_1], Original ATen: [aten._softmax]
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_2.run(buf5, buf3, buf4, 448, grid=grid(448), stream=stream0)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 7, 1), (7, 1, 1), torch.float32)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_2], Original ATen: [aten.bmm]
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf5, (4, 7, 16), (112, 1, 7), 0), reinterpret_tensor(buf2, (4, 16, 1), (16, 1, 1), 0), out=buf6)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf6; del buf6  # reuse
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 7, 1), (7, 1, 1), torch.bool)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [graph_node], Original ATen: [aten.relu, aten.threshold_backward]
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_3.run(buf7, buf8, 28, grid=grid(28), stream=stream0)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, buf5, buf8, reinterpret_tensor(buf2, (4, 1, 16), (16, 1, 1), 0), reinterpret_tensor(buf0, (4, 64), (1, 4), 0), )
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 7), (7, 1), device='cuda:0', dtype=torch.float32)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 1), (1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3])
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:56:02.464000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:56:02.470000 2240541 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/yb/cybobs43s55vgudxbrxfsbfej4pu3p5qqptfiknm26ccjoujol2c.py
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['22_forward']
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/l2/cl26f32rsl5yew5zo6lmq33s56hlbrlhfhymngg4r6kmfd6anuth.py
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [fea_node], Original ATen: [aten.clone, aten._unsafe_view]
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fea_node => clone, view_1
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %view_1 : [num_users=3] = call_function[target=torch.ops.aten.reshape.default](args = (%clone, [64, 4]), kwargs = {})
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_view_clone_0 = async_compile.triton('triton_poi_fused__unsafe_view_clone_0', '''
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_view_clone_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_view_clone_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x1 + 64*(y0 // 16) + ((y0 % 16))), xmask & ymask, eviction_policy='evict_last')
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 4*y0), tmp0, xmask & ymask)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pz/cpz5zgdbnnofn5zhuxsszh5f3igzgdltmfndngve47mqxpud543y.py
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [fea_node_1], Original ATen: [aten._softmax]
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fea_node_1 => amax, exp, sub, sum_1
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_2, [-1], True), kwargs = {})
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_2, %amax), kwargs = {})
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_1 = async_compile.triton('triton_poi_fused__softmax_1', '''
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_1(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (7*x0), xmask, eviction_policy='evict_last')
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 7*x0), xmask, eviction_policy='evict_last')
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 7*x0), xmask, eviction_policy='evict_last')
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 7*x0), xmask, eviction_policy='evict_last')
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4 + 7*x0), xmask, eviction_policy='evict_last')
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (5 + 7*x0), xmask, eviction_policy='evict_last')
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (6 + 7*x0), xmask, eviction_policy='evict_last')
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp0, tmp1)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp2, tmp3)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp4, tmp5)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp8, tmp9)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp10, tmp11)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp0 - tmp12
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl_math.exp(tmp13)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp1 - tmp12
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.exp(tmp15)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 + tmp16
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp3 - tmp12
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl_math.exp(tmp18)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 + tmp19
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp5 - tmp12
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl_math.exp(tmp21)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 + tmp22
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp7 - tmp12
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl_math.exp(tmp24)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp23 + tmp25
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp9 - tmp12
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl_math.exp(tmp27)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp26 + tmp28
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp11 - tmp12
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl_math.exp(tmp30)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp29 + tmp31
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp12, xmask)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp32, xmask)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/jd/cjdq2plal3v3a5xgxjxxpvuyt4dor3h5hk7uvqfaabcf7hen5s6b.py
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [fea_node_1], Original ATen: [aten._softmax]
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fea_node_1 => amax, div, exp, sub, sum_1
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_2, [-1], True), kwargs = {})
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_2, %amax), kwargs = {})
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_2 = async_compile.triton('triton_poi_fused__softmax_2', '''
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_2(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 448
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 7
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl_math.exp(tmp2)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 / tmp4
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp5, xmask)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/co/ccoe4wnavvxztbswoqm6w6yts7bwbufvxvltizexxe5fmv7r3kie.py
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [graph_node], Original ATen: [aten.relu, aten.threshold_backward]
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   graph_node => relu
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%bmm,), kwargs = {})
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu, 0), kwargs = {})
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_threshold_backward_3 = async_compile.triton('triton_poi_fused_relu_threshold_backward_3', '''
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32}, 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_threshold_backward_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_threshold_backward_3(in_out_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 28
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int32)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 <= tmp3
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp2, xmask)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3 = args
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 7), (7, 1))
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 1), (1, 1))
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [fea_node], Original ATen: [aten.clone, aten._unsafe_view]
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_view_clone_0.run(primals_1, buf0, 64, 4, grid=grid(64, 4), stream=stream0)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((64, 7), (7, 1), torch.float32)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [fea_node], Original ATen: [aten.mm]
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf0, primals_2, out=buf1)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((64, 1), (1, 1), torch.float32)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [weight_node], Original ATen: [aten.mm]
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf0, primals_3, out=buf2)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 16, 1), (16, 1, 64), torch.float32)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 16, 1), (16, 1, 64), torch.float32)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [fea_node_1], Original ATen: [aten._softmax]
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_1.run(buf1, buf3, buf4, 64, grid=grid(64), stream=stream0)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = reinterpret_tensor(buf1, (4, 16, 7), (112, 7, 1), 0); del buf1  # reuse
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [fea_node_1], Original ATen: [aten._softmax]
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_2.run(buf5, buf3, buf4, 448, grid=grid(448), stream=stream0)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 7, 1), (7, 1, 1), torch.float32)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_2], Original ATen: [aten.bmm]
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf5, (4, 7, 16), (112, 1, 7), 0), reinterpret_tensor(buf2, (4, 16, 1), (16, 1, 1), 0), out=buf6)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf6; del buf6  # reuse
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 7, 1), (7, 1, 1), torch.bool)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [graph_node], Original ATen: [aten.relu, aten.threshold_backward]
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_threshold_backward_3.run(buf7, buf8, 28, grid=grid(28), stream=stream0)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, buf5, buf8, reinterpret_tensor(buf2, (4, 1, 16), (16, 1, 1), 0), reinterpret_tensor(buf0, (4, 64), (1, 4), 0), )
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 7), (7, 1), device='cuda:0', dtype=torch.float32)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 1), (1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3])
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:45:21.087000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:21.092000 3778217 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/m6/cm6xph4cy5n7kft2xvtp3zbgrkwhz5hiq43qknhnxuxx6yzrxwqw.py
