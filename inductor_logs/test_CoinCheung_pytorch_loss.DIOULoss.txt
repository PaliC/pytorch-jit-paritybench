V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_inference']
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pb/cpbom3evnjfqrefhxkizt5falsw73r2624hmjcf6quiozsh5lg4f.py
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub, sub_1, gt_area, sub_2, sub_3, pr_area, add_1, inter, union, gt_cent_x, pr_cent_x, sub_6, pow_1, gt_cent_y, pr_cent_y, sub_7, pow_2, cent_dis, lt_1, rb_1, sub_8, pow_3, diag_dis, add_3, reg], Original ATen: [aten.sub, aten.mul, aten.add, aten.mean, aten.pow, aten.minimum, aten.maximum, aten.sum, aten.div]
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cent_dis => add_2
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   diag_dis => sum_1
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   gt_area => mul
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   gt_cent_x => mean
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   gt_cent_y => mean_1
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   inter => mul_2
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   lt_1 => minimum_1
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_3 => pow_3
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pr_area => mul_1
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pr_cent_x => mean_2
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pr_cent_y => mean_3
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   rb_1 => maximum_1
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reg => div_1
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_6 => sub_6
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_7 => sub_7
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_8 => sub_8
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   union => sub_5
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select, %select_1), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_2, %select_3), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %sub_1), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_4, %select_5), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_6, %select_7), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %sub_3), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_1), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_8, %select_9), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %mul_2), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%slice_20, [-1]), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_2 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%slice_24, [-1]), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mean, %mean_2), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_6, 2.0), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%slice_22, [-1]), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_3 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%slice_26, [-1]), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mean_1, %mean_3), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_7, 2.0), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_1, %pow_2), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %minimum_1 : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%slice_28, %slice_30), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %maximum_1 : [num_users=1] = call_function[target=torch.ops.aten.maximum.default](args = (%slice_32, %slice_34), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%minimum_1, %maximum_1), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_8, 2), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, [-1]), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, 1e-05), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_2, %add_3), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_maximum_mean_minimum_mul_pow_sub_sum_0 = async_compile.triton('triton_poi_fused_add_div_maximum_mean_minimum_mul_pow_sub_sum_0', '''
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_maximum_mean_minimum_mul_pow_sub_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_maximum_mean_minimum_mul_pow_sub_sum_0(in_ptr0, in_ptr1, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.minimum(tmp0, tmp1)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 - tmp5
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 1e-05
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 0.0
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp8, tmp9)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.minimum(tmp11, tmp12)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp14, tmp15)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp13 - tmp16
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp7
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp9)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp10 * tmp19
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp0 - tmp3
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp11 - tmp14
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp1 - tmp4
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp12 - tmp15
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp24 * tmp25
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp23 + tmp26
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 - tmp20
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp3 + tmp0
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = 2.0
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 / tmp30
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp4 + tmp1
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32 / tmp30
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp31 - tmp33
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 * tmp34
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp14 + tmp11
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 / tmp30
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp15 + tmp12
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp38 / tmp30
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp37 - tmp39
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 * tmp40
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp35 + tmp41
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = triton_helpers.minimum(tmp3, tmp4)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = triton_helpers.maximum(tmp0, tmp1)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp43 - tmp44
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 * tmp45
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = triton_helpers.minimum(tmp14, tmp15)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = triton_helpers.maximum(tmp11, tmp12)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp47 - tmp48
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp49 * tmp49
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp46 + tmp50
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 + tmp7
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp42 / tmp52
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp20, xmask)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp28, xmask)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp53, xmask)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/uu/cuuiepcd6ckdx4fcz7yzu3sybylu226ptneei5rpiupxs3sbxbt7.py
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [iou, diou, loss, loss_1], Original ATen: [aten.div, aten.sub, aten.rsub, aten.mean]
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   diou => sub_9
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   iou => div
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => sub_10
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_1 => mean_4
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_2, %sub_5), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div, %div_1), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %sub_9), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_4 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sub_10,), kwargs = {})
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_mean_rsub_sub_1 = async_compile.triton('triton_poi_fused_div_mean_rsub_sub_1', '''
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_mean_rsub_sub_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_mean_rsub_sub_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (0))
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK])
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (0))
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (1))
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.broadcast_to(tmp10, [XBLOCK])
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (1))
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [XBLOCK])
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr2 + (1))
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [XBLOCK])
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (2))
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.broadcast_to(tmp20, [XBLOCK])
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr1 + (2))
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.broadcast_to(tmp22, [XBLOCK])
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr2 + (2))
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.broadcast_to(tmp25, [XBLOCK])
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr0 + (3))
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.broadcast_to(tmp30, [XBLOCK])
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr1 + (3))
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.broadcast_to(tmp32, [XBLOCK])
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr2 + (3))
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.broadcast_to(tmp35, [XBLOCK])
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 / tmp3
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 - tmp6
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1.0
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 - tmp7
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp11 / tmp13
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 - tmp16
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp8 - tmp17
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp9 + tmp18
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp21 / tmp23
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp24 - tmp26
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp8 - tmp27
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp19 + tmp28
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp31 / tmp33
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp34 - tmp36
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp8 - tmp37
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp29 + tmp38
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = 4.0
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 / tmp40
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp41, None)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4), (4, 1))
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4), (4, 1))
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub, sub_1, gt_area, sub_2, sub_3, pr_area, add_1, inter, union, gt_cent_x, pr_cent_x, sub_6, pow_1, gt_cent_y, pr_cent_y, sub_7, pow_2, cent_dis, lt_1, rb_1, sub_8, pow_3, diag_dis, add_3, reg], Original ATen: [aten.sub, aten.mul, aten.add, aten.mean, aten.pow, aten.minimum, aten.maximum, aten.sum, aten.div]
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_maximum_mean_minimum_mul_pow_sub_sum_0.run(arg0_1, arg1_1, buf0, buf1, buf2, 4, grid=grid(4), stream=stream0)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((), (), torch.float32)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [iou, diou, loss, loss_1], Original ATen: [aten.div, aten.sub, aten.rsub, aten.mean]
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_mean_rsub_sub_1.run(buf0, buf1, buf2, buf3, 1, grid=grid(1), stream=stream0)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf3, )
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:44:23.604000 4080864 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:44:23.608000 4080864 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/fu/cfuxmbxdo25ixim3njoipqqdzcrnj2btca64oosj4rgiopqsgecc.py
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_inference']
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pb/cpbom3evnjfqrefhxkizt5falsw73r2624hmjcf6quiozsh5lg4f.py
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub, sub_1, gt_area, sub_2, sub_3, pr_area, add_1, inter, union, gt_cent_x, pr_cent_x, sub_6, pow_1, gt_cent_y, pr_cent_y, sub_7, pow_2, cent_dis, lt_1, rb_1, sub_8, pow_3, diag_dis, add_3, reg], Original ATen: [aten.sub, aten.mul, aten.add, aten.mean, aten.pow, aten.minimum, aten.maximum, aten.sum, aten.div]
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cent_dis => add_2
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   diag_dis => sum_1
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   gt_area => mul
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   gt_cent_x => mean
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   gt_cent_y => mean_1
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   inter => mul_2
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   lt_1 => minimum_1
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_3 => pow_3
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pr_area => mul_1
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pr_cent_x => mean_2
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pr_cent_y => mean_3
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   rb_1 => maximum_1
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reg => div_1
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_6 => sub_6
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_7 => sub_7
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_8 => sub_8
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   union => sub_5
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select, %select_1), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_2, %select_3), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %sub_1), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_4, %select_5), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_6, %select_7), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %sub_3), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_1), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_8, %select_9), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %mul_2), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%slice_20, [-1]), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_2 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%slice_24, [-1]), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mean, %mean_2), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_6, 2.0), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%slice_22, [-1]), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_3 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%slice_26, [-1]), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mean_1, %mean_3), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_7, 2.0), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_1, %pow_2), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %minimum_1 : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%slice_28, %slice_30), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %maximum_1 : [num_users=1] = call_function[target=torch.ops.aten.maximum.default](args = (%slice_32, %slice_34), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%minimum_1, %maximum_1), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_8, 2), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, [-1]), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, 1e-05), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_2, %add_3), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_maximum_mean_minimum_mul_pow_sub_sum_0 = async_compile.triton('triton_poi_fused_add_div_maximum_mean_minimum_mul_pow_sub_sum_0', '''
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_maximum_mean_minimum_mul_pow_sub_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_maximum_mean_minimum_mul_pow_sub_sum_0(in_ptr0, in_ptr1, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.minimum(tmp0, tmp1)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 - tmp5
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 1e-05
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 0.0
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp8, tmp9)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.minimum(tmp11, tmp12)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp14, tmp15)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp13 - tmp16
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp7
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp9)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp10 * tmp19
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp0 - tmp3
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp11 - tmp14
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp1 - tmp4
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp12 - tmp15
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp24 * tmp25
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp23 + tmp26
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 - tmp20
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp3 + tmp0
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = 2.0
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 / tmp30
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp4 + tmp1
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32 / tmp30
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp31 - tmp33
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 * tmp34
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp14 + tmp11
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 / tmp30
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp15 + tmp12
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp38 / tmp30
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp37 - tmp39
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 * tmp40
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp35 + tmp41
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = triton_helpers.minimum(tmp3, tmp4)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = triton_helpers.maximum(tmp0, tmp1)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp43 - tmp44
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 * tmp45
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = triton_helpers.minimum(tmp14, tmp15)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = triton_helpers.maximum(tmp11, tmp12)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp47 - tmp48
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp49 * tmp49
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp46 + tmp50
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 + tmp7
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp42 / tmp52
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp20, xmask)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp28, xmask)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp53, xmask)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/uu/cuuiepcd6ckdx4fcz7yzu3sybylu226ptneei5rpiupxs3sbxbt7.py
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [iou, diou, loss, loss_1], Original ATen: [aten.div, aten.sub, aten.rsub, aten.mean]
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   diou => sub_9
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   iou => div
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => sub_10
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_1 => mean_4
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_2, %sub_5), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div, %div_1), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %sub_9), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_4 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sub_10,), kwargs = {})
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_mean_rsub_sub_1 = async_compile.triton('triton_poi_fused_div_mean_rsub_sub_1', '''
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1}, 
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_mean_rsub_sub_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_mean_rsub_sub_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (0))
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK])
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (0))
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK])
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (1))
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.broadcast_to(tmp10, [XBLOCK])
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (1))
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [XBLOCK])
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr2 + (1))
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [XBLOCK])
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr0 + (2))
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.broadcast_to(tmp20, [XBLOCK])
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr1 + (2))
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.broadcast_to(tmp22, [XBLOCK])
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr2 + (2))
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.broadcast_to(tmp25, [XBLOCK])
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr0 + (3))
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.broadcast_to(tmp30, [XBLOCK])
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr1 + (3))
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.broadcast_to(tmp32, [XBLOCK])
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr2 + (3))
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.broadcast_to(tmp35, [XBLOCK])
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 / tmp3
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 - tmp6
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1.0
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 - tmp7
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp11 / tmp13
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 - tmp16
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp8 - tmp17
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp9 + tmp18
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp21 / tmp23
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp24 - tmp26
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp8 - tmp27
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp19 + tmp28
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp31 / tmp33
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp34 - tmp36
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp8 - tmp37
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp29 + tmp38
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = 4.0
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 / tmp40
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp41, None)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4), (4, 1))
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4), (4, 1))
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub, sub_1, gt_area, sub_2, sub_3, pr_area, add_1, inter, union, gt_cent_x, pr_cent_x, sub_6, pow_1, gt_cent_y, pr_cent_y, sub_7, pow_2, cent_dis, lt_1, rb_1, sub_8, pow_3, diag_dis, add_3, reg], Original ATen: [aten.sub, aten.mul, aten.add, aten.mean, aten.pow, aten.minimum, aten.maximum, aten.sum, aten.div]
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_maximum_mean_minimum_mul_pow_sub_sum_0.run(arg0_1, arg1_1, buf0, buf1, buf2, 4, grid=grid(4), stream=stream0)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((), (), torch.float32)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [iou, diou, loss, loss_1], Original ATen: [aten.div, aten.sub, aten.rsub, aten.mean]
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_mean_rsub_sub_1.run(buf0, buf1, buf2, buf3, 1, grid=grid(1), stream=stream0)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf3, )
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:34:38.498000 2577916 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:34:38.502000 2577916 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/v2/cv2vebnel2ugkd5dd7d56q2qe67ttusxpdrs5zgurcwtmt3d4nms.py
