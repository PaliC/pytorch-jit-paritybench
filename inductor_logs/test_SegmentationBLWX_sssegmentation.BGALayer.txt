V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_forward']
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6b/c6bkmkwqifhe53fe2tjuc5ixzv5ctgl45syczus4d3pejk2bupnc.py
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 512, 'x': 256}, tile_hint=TileHint.SQUARE,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 512
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 256*y3), xmask & ymask, eviction_policy='evict_last')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 128*x2 + 32768*y1), tmp0, xmask & ymask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/f2/cf25lbtz3rzdrdri45m5uv5q54b2kotzlhqwbwum2p6xiiunflc7.py
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16384, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16384
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 128*x2 + 1152*y1), tmp0, xmask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/33/c33gi6i25wbeagpqduovpgddp6htmzuurmp7qps5j547io2ep74s.py
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_2 = async_compile.triton('triton_poi_fused_2', '''
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 512, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_2(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 512
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y3), xmask & ymask, eviction_policy='evict_last')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 128*x2 + 2048*y1), tmp0, xmask & ymask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7y/c7y2jluevmanfkz4vevbrvjfqqfn4ahgo5kmxp35l7pwgvz7cx5m.py
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.avg_pool2d]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => avg_pool2d
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d : [num_users=2] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%convolution_2, [3, 3], [2, 2], [1, 1]), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_3 = async_compile.triton('triton_poi_fused_avg_pool2d_3', '''
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8192
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 512) % 4)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 128) % 4)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 512
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x6 = xindex
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + 2*x2
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 8, tl.int64)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 & tmp4
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = (-1) + 2*x1
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 >= tmp1
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 < tmp3
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 & tmp8
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp5 & tmp9
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-1152) + x0 + 256*x1 + 2048*x5), tmp10, other=0.0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 2*x1
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 >= tmp1
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 < tmp3
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 & tmp14
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp5 & tmp15
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + ((-1024) + x0 + 256*x1 + 2048*x5), tmp16, other=0.0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp11
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1 + 2*x1
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 >= tmp1
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 < tmp3
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 & tmp21
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp5 & tmp22
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr0 + ((-896) + x0 + 256*x1 + 2048*x5), tmp23, other=0.0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 + tmp18
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = 2*x2
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 >= tmp1
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 < tmp3
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 & tmp28
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 & tmp9
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + ((-128) + x0 + 256*x1 + 2048*x5), tmp30, other=0.0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 + tmp25
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 & tmp15
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (x0 + 256*x1 + 2048*x5), tmp33, other=0.0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp32
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp29 & tmp22
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (128 + x0 + 256*x1 + 2048*x5), tmp36, other=0.0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 + tmp35
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = 1 + 2*x2
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 >= tmp1
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 < tmp3
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 & tmp41
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 & tmp9
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr0 + (896 + x0 + 256*x1 + 2048*x5), tmp43, other=0.0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp44 + tmp38
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp42 & tmp15
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr0 + (1024 + x0 + 256*x1 + 2048*x5), tmp46, other=0.0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp47 + tmp45
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp42 & tmp22
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr0 + (1152 + x0 + 256*x1 + 2048*x5), tmp49, other=0.0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 + tmp48
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = 1 + ((-2)*x1) + ((-2)*x2) + ((9) * ((9) <= (2 + 2*x1)) + (2 + 2*x1) * ((2 + 2*x1) < (9)))*((9) * ((9) <= (2 + 2*x2)) + (2 + 2*x2) * ((2 + 2*x2) < (9))) + ((-2)*x1*((9) * ((9) <= (2 + 2*x2)) + (2 + 2*x2) * ((2 + 2*x2) < (9)))) + ((-2)*x2*((9) * ((9) <= (2 + 2*x1)) + (2 + 2*x1) * ((2 + 2*x1) < (9)))) + 4*x1*x2 + ((9) * ((9) <= (2 + 2*x1)) + (2 + 2*x1) * ((2 + 2*x1) < (9))) + ((9) * ((9) <= (2 + 2*x2)) + (2 + 2*x2) * ((2 + 2*x2) < (9)))
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 / tmp52
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x6), tmp53, None)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ce/ccee6pmnv4kqcrse6r3pdeqboqmvklpplrzhnlvmljrk2gifsqy3.py
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [semantic_conv], Original ATen: [aten._to_copy]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   semantic_conv => convert_element_type_1
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=7] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_4 = async_compile.triton('triton_poi_fused__to_copy_4', '''
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_4(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.25
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 - tmp2
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp9, xmask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/t2/ct2ihjxlxkvkiwq5ae6j44ivdh4liqsg7tvzsmdrlxdwk4is7nl5.py
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [semantic_conv], Original ATen: [aten.add, aten.clamp]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   semantic_conv => add_1, clamp_max
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_1, 1), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=5] = call_function[target=torch.ops.aten.clamp_max.default](args = (%add_1, 3), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_5 = async_compile.triton('triton_poi_fused_add_clamp_5', '''
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_5(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.25
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 - tmp2
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 1, tl.int64)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 3, tl.int64)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.minimum(tmp11, tmp12)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bk/cbkg3isusyexclp7jwm35aiyftacbh3o2jlpelnj5ywaeeobi7s5.py
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [semantic_conv], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   semantic_conv => add, clamp_max_2, clamp_min, clamp_min_2, convert_element_type, iota, mul, sub, sub_2
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (16,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type, 0.5), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add, 0.25), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul, 0.5), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_3), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_2, 0.0), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=5] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6 = async_compile.triton('triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6', '''
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.25
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 - tmp2
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9.to(tl.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 - tmp10
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp11, tmp7)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1.0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.minimum(tmp12, tmp13)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp14, xmask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ow/cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [semantic_conv, sigmoid, sigmoid_1, fuse_2, fuse_3], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add, aten.sigmoid]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fuse_2 => mul_6
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fuse_3 => _unsafe_index_4, _unsafe_index_5, _unsafe_index_6, _unsafe_index_7, add_11, add_12, mul_10, mul_9, sub_10, sub_11, sub_13
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   semantic_conv => _unsafe_index, _unsafe_index_1, _unsafe_index_2, _unsafe_index_3, add_4, add_5, add_6, mul_2, mul_3, mul_4, sub_3, sub_4, sub_6
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigmoid => sigmoid
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigmoid_1 => sigmoid_1
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_3, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_3, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_3, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_3, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %clamp_max_2), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_2), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_3, %_unsafe_index_2), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %clamp_max_2), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, %mul_3), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_5, %add_4), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %clamp_max_3), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, %mul_4), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_6,), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%convolution_5,), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=4] = call_function[target=torch.ops.aten.mul.Tensor](args = (%avg_pool2d, %sigmoid_1), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_4 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mul_6, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_5 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mul_6, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_6 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mul_6, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_7 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mul_6, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_5, %_unsafe_index_4), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_10, %clamp_max_2), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_4, %mul_9), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_7, %_unsafe_index_6), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %clamp_max_2), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_6, %mul_10), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_13 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_12, %add_11), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7 = async_compile.triton('triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7', '''
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 512, 'x': 256}, tile_hint=TileHint.DEFAULT,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'in_ptr5': '*i64', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, out_ptr1, out_ptr2, out_ptr3, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 512
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 16
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 16)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y5 = yindex
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask, eviction_policy='evict_last')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x2), xmask, eviction_policy='evict_last')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x2), xmask, eviction_policy='evict_last')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr5 + (x3), xmask, eviction_policy='evict_last')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr6 + (x3), xmask, eviction_policy='evict_last')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK, YBLOCK], 4, tl.int32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (y0 + 128*tmp8 + 512*tmp4 + 2048*y1), xmask & ymask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp1
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < 0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp12, tmp11, tmp10)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr2 + (y0 + 128*tmp13 + 512*tmp4 + 2048*y1), xmask & ymask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 - tmp9
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp9 + tmp17
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp1
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 < 0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.where(tmp21, tmp20, tmp19)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr2 + (y0 + 128*tmp8 + 512*tmp22 + 2048*y1), xmask & ymask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr2 + (y0 + 128*tmp13 + 512*tmp22 + 2048*y1), xmask & ymask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 - tmp23
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp16
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp23 + tmp26
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 - tmp18
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 * tmp29
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp18 + tmp30
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.sigmoid(tmp31)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr7 + (y0 + 128*tmp8 + 512*tmp4 + 2048*y1), xmask & ymask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr8 + (y0 + 128*tmp8 + 512*tmp4 + 2048*y1), xmask & ymask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.sigmoid(tmp34)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp33 * tmp35
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr7 + (y0 + 128*tmp13 + 512*tmp4 + 2048*y1), xmask & ymask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr8 + (y0 + 128*tmp13 + 512*tmp4 + 2048*y1), xmask & ymask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.sigmoid(tmp38)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp37 * tmp39
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 - tmp36
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp41 * tmp16
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp36 + tmp42
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr7 + (y0 + 128*tmp8 + 512*tmp22 + 2048*y1), xmask & ymask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr8 + (y0 + 128*tmp8 + 512*tmp22 + 2048*y1), xmask & ymask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.sigmoid(tmp45)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp44 * tmp46
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.load(in_ptr7 + (y0 + 128*tmp13 + 512*tmp22 + 2048*y1), xmask & ymask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr8 + (y0 + 128*tmp13 + 512*tmp22 + 2048*y1), xmask & ymask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.sigmoid(tmp49)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp48 * tmp50
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 - tmp47
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52 * tmp16
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp47 + tmp53
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp54 - tmp43
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 128*x4 + 32768*y1), tmp32, xmask & ymask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x4 + 256*y5), tmp43, xmask & ymask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (x4 + 256*y5), tmp55, xmask & ymask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/j7/cj7ii7ff4iqdx3sh6b47pmhluvvvo5e2wy6b3llcn7najadxovku.py
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [fuse_1, fuse_3, add], Original ATen: [aten.mul, aten.add]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_14
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fuse_1 => mul_5
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fuse_3 => add_13, mul_11
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_1, %sigmoid), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_13, %clamp_max_3), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_13 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_11, %mul_11), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_14 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %add_13), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_8 = async_compile.triton('triton_poi_fused_add_mul_8', '''
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 128}, tile_hint=TileHint.DEFAULT,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_8(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y2 = yindex // 256
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y5 = (yindex % 256)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = ((yindex // 16) % 16)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3 + 128*y4), xmask, eviction_policy='evict_last')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x3 + 128*y4), xmask, eviction_policy='evict_last')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (y5 + 256*x3 + 32768*y2), xmask, eviction_policy='evict_last')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr3 + (y5 + 256*x3 + 32768*y2), xmask, eviction_policy='evict_last')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr4 + (y1), None, eviction_policy='evict_last')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp3 + tmp6
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 + tmp7
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3 + 128*y4), tmp8, xmask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gl/cglky3mauu5n2m2axskxst67kdn57czrysyypviufzy6f6xunsda.py
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => convolution_6
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_6 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%add_14, %primals_9, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_9 = async_compile.triton('triton_poi_fused_convolution_9', '''
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 512, 'x': 256}, tile_hint=TileHint.SQUARE,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_9(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 512
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 128*x2 + 32768*y1), xmask & ymask, eviction_policy='evict_last')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 256*y3), tmp0, xmask & ymask)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (128, 1, 3, 3), (9, 9, 3, 1))
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 128, 16, 16), (32768, 256, 16, 1))
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (128, 128, 1, 1), (128, 1, 1, 1))
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (128, 128, 3, 3), (1152, 9, 3, 1))
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (128, 128, 3, 3), (1152, 9, 3, 1))
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 128, 4, 4), (2048, 16, 4, 1))
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (128, 1, 3, 3), (9, 9, 3, 1))
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (128, 128, 1, 1), (128, 1, 1, 1))
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (128, 128, 3, 3), (1152, 9, 3, 1))
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 128, 16, 16), (32768, 1, 2048, 128), torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_2, buf0, 512, 256, grid=grid(512, 256), stream=stream0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_4, buf1, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_5, buf2, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_6, buf3, 512, 16, grid=grid(512, 16), stream=stream0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_9, buf4, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf0, primals_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=128, bias=None)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 128, 16, 16), (32768, 1, 2048, 128))
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.convolution]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf5, primals_3, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 128, 16, 16), (32768, 1, 2048, 128))
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf0, buf1, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 128, 8, 8), (8192, 1, 1024, 128))
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.avg_pool2d]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_3.run(buf7, buf8, 8192, grid=grid(8192), stream=stream0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf3, buf2, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 128, 4, 4), (2048, 1, 512, 128))
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.convolution]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf3, primals_7, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=128, bias=None)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 128, 4, 4), (2048, 1, 512, 128))
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.convolution]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_8, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 128, 4, 4), (2048, 1, 512, 128))
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((16, 1), (1, 1), torch.int64)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [semantic_conv], Original ATen: [aten._to_copy]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_4.run(buf12, 16, grid=grid(16), stream=stream0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((16, 1), (1, 1), torch.int64)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [semantic_conv], Original ATen: [aten.add, aten.clamp]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_5.run(buf13, 16, grid=grid(16), stream=stream0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((16, ), (1, ), torch.int64)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [semantic_conv], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_4.run(buf14, 16, grid=grid(16), stream=stream0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((16, ), (1, ), torch.int64)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [semantic_conv], Original ATen: [aten.add, aten.clamp]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_5.run(buf15, 16, grid=grid(16), stream=stream0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((16, ), (1, ), torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [semantic_conv], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6.run(buf16, 16, grid=grid(16), stream=stream0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((16, 1), (1, 1), torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [semantic_conv], Original ATen: [aten.sub, aten.clamp]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6.run(buf18, 16, grid=grid(16), stream=stream0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 128, 16, 16), (32768, 1, 2048, 128), torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 128, 16, 16), (32768, 256, 16, 1), torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 128, 16, 16), (32768, 256, 16, 1), torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [semantic_conv, sigmoid, sigmoid_1, fuse_2, fuse_3], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add, aten.sigmoid]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7.run(buf12, buf14, buf9, buf15, buf16, buf13, buf18, buf8, buf11, buf19, buf20, buf21, 512, 256, grid=grid(512, 256), stream=stream0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 128, 16, 16), (32768, 1, 2048, 128), torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [fuse_1, fuse_3, add], Original ATen: [aten.mul, aten.add]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_8.run(buf6, buf19, buf20, buf21, buf18, buf22, 1024, 128, grid=grid(1024, 128), stream=stream0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf20
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = extern_kernels.convolution(buf22, buf4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf23, (4, 128, 16, 16), (32768, 1, 2048, 128))
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = buf21; del buf21  # reuse
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_9.run(buf23, buf24, 512, 256, grid=grid(512, 256), stream=stream0)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf23
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf24, primals_1, buf0, primals_3, buf1, buf2, buf3, primals_7, primals_8, buf4, buf5, buf6, buf7, buf8, buf10, buf11, buf12, buf13, buf14, buf15, buf16, buf18, buf19, buf22, )
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((128, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 128, 16, 16), (32768, 256, 16, 1), device='cuda:0', dtype=torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((128, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 128, 4, 4), (2048, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((128, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((128, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:55:28.823000 2571858 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:55:28.838000 2571858 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ip/ciph5iwluuhdrv5ie4z6tjsfmczv5fefcvhn2mqw5iiecdgpdggk.py
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_forward']
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/6b/c6bkmkwqifhe53fe2tjuc5ixzv5ctgl45syczus4d3pejk2bupnc.py
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 512, 'x': 256}, tile_hint=TileHint.SQUARE,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 512
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 256*y3), xmask & ymask, eviction_policy='evict_last')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 128*x2 + 32768*y1), tmp0, xmask & ymask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/f2/cf25lbtz3rzdrdri45m5uv5q54b2kotzlhqwbwum2p6xiiunflc7.py
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16384, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16384
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 128*x2 + 1152*y1), tmp0, xmask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/33/c33gi6i25wbeagpqduovpgddp6htmzuurmp7qps5j547io2ep74s.py
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_2 = async_compile.triton('triton_poi_fused_2', '''
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 512, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_2(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 512
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y3), xmask & ymask, eviction_policy='evict_last')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 128*x2 + 2048*y1), tmp0, xmask & ymask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7y/c7y2jluevmanfkz4vevbrvjfqqfn4ahgo5kmxp35l7pwgvz7cx5m.py
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.avg_pool2d]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => avg_pool2d
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d : [num_users=2] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%convolution_2, [3, 3], [2, 2], [1, 1]), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_3 = async_compile.triton('triton_poi_fused_avg_pool2d_3', '''
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8192
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 512) % 4)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 128) % 4)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 512
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x6 = xindex
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + 2*x2
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 8, tl.int64)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 & tmp4
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = (-1) + 2*x1
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 >= tmp1
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 < tmp3
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 & tmp8
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp5 & tmp9
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-1152) + x0 + 256*x1 + 2048*x5), tmp10, other=0.0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 2*x1
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 >= tmp1
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 < tmp3
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 & tmp14
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp5 & tmp15
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + ((-1024) + x0 + 256*x1 + 2048*x5), tmp16, other=0.0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp11
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1 + 2*x1
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 >= tmp1
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 < tmp3
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 & tmp21
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp5 & tmp22
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr0 + ((-896) + x0 + 256*x1 + 2048*x5), tmp23, other=0.0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 + tmp18
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = 2*x2
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 >= tmp1
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 < tmp3
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 & tmp28
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 & tmp9
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + ((-128) + x0 + 256*x1 + 2048*x5), tmp30, other=0.0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 + tmp25
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 & tmp15
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (x0 + 256*x1 + 2048*x5), tmp33, other=0.0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp32
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp29 & tmp22
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (128 + x0 + 256*x1 + 2048*x5), tmp36, other=0.0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 + tmp35
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = 1 + 2*x2
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 >= tmp1
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 < tmp3
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 & tmp41
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 & tmp9
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr0 + (896 + x0 + 256*x1 + 2048*x5), tmp43, other=0.0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp44 + tmp38
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp42 & tmp15
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr0 + (1024 + x0 + 256*x1 + 2048*x5), tmp46, other=0.0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp47 + tmp45
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp42 & tmp22
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr0 + (1152 + x0 + 256*x1 + 2048*x5), tmp49, other=0.0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 + tmp48
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = 1 + ((-2)*x1) + ((-2)*x2) + ((9) * ((9) <= (2 + 2*x1)) + (2 + 2*x1) * ((2 + 2*x1) < (9)))*((9) * ((9) <= (2 + 2*x2)) + (2 + 2*x2) * ((2 + 2*x2) < (9))) + ((-2)*x1*((9) * ((9) <= (2 + 2*x2)) + (2 + 2*x2) * ((2 + 2*x2) < (9)))) + ((-2)*x2*((9) * ((9) <= (2 + 2*x1)) + (2 + 2*x1) * ((2 + 2*x1) < (9)))) + 4*x1*x2 + ((9) * ((9) <= (2 + 2*x1)) + (2 + 2*x1) * ((2 + 2*x1) < (9))) + ((9) * ((9) <= (2 + 2*x2)) + (2 + 2*x2) * ((2 + 2*x2) < (9)))
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 / tmp52
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x6), tmp53, None)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ce/ccee6pmnv4kqcrse6r3pdeqboqmvklpplrzhnlvmljrk2gifsqy3.py
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [semantic_conv], Original ATen: [aten._to_copy]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   semantic_conv => convert_element_type_1
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=7] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_4 = async_compile.triton('triton_poi_fused__to_copy_4', '''
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_4(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.25
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 - tmp2
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp9, xmask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/t2/ct2ihjxlxkvkiwq5ae6j44ivdh4liqsg7tvzsmdrlxdwk4is7nl5.py
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [semantic_conv], Original ATen: [aten.add, aten.clamp]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   semantic_conv => add_1, clamp_max
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_1, 1), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=5] = call_function[target=torch.ops.aten.clamp_max.default](args = (%add_1, 3), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_5 = async_compile.triton('triton_poi_fused_add_clamp_5', '''
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_5(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.25
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 - tmp2
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 1, tl.int64)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 3, tl.int64)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.minimum(tmp11, tmp12)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/bk/cbkg3isusyexclp7jwm35aiyftacbh3o2jlpelnj5ywaeeobi7s5.py
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [semantic_conv], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   semantic_conv => add, clamp_max_2, clamp_min, clamp_min_2, convert_element_type, iota, mul, sub, sub_2
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (16,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type, 0.5), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add, 0.25), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul, 0.5), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_3), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_2, 0.0), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=5] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6 = async_compile.triton('triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6', '''
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.25
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 - tmp2
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9.to(tl.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 - tmp10
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = triton_helpers.maximum(tmp11, tmp7)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1.0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.minimum(tmp12, tmp13)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp14, xmask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ow/cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [semantic_conv, sigmoid, sigmoid_1, fuse_2, fuse_3], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add, aten.sigmoid]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fuse_2 => mul_6
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fuse_3 => _unsafe_index_4, _unsafe_index_5, _unsafe_index_6, _unsafe_index_7, add_11, add_12, mul_10, mul_9, sub_10, sub_11, sub_13
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   semantic_conv => _unsafe_index, _unsafe_index_1, _unsafe_index_2, _unsafe_index_3, add_4, add_5, add_6, mul_2, mul_3, mul_4, sub_3, sub_4, sub_6
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigmoid => sigmoid
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigmoid_1 => sigmoid_1
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_3, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_3, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_3, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_3, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %clamp_max_2), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_2), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_3, %_unsafe_index_2), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %clamp_max_2), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, %mul_3), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_5, %add_4), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %clamp_max_3), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, %mul_4), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_6,), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%convolution_5,), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=4] = call_function[target=torch.ops.aten.mul.Tensor](args = (%avg_pool2d, %sigmoid_1), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_4 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mul_6, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_5 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mul_6, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_6 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mul_6, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_7 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mul_6, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_5, %_unsafe_index_4), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_10, %clamp_max_2), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_4, %mul_9), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_7, %_unsafe_index_6), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %clamp_max_2), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_6, %mul_10), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_13 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_12, %add_11), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7 = async_compile.triton('triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7', '''
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 512, 'x': 256}, tile_hint=TileHint.DEFAULT,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'in_ptr5': '*i64', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, out_ptr1, out_ptr2, out_ptr3, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 512
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 16
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 16)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y5 = yindex
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask, eviction_policy='evict_last')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x2), xmask, eviction_policy='evict_last')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x2), xmask, eviction_policy='evict_last')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr5 + (x3), xmask, eviction_policy='evict_last')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr6 + (x3), xmask, eviction_policy='evict_last')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK, YBLOCK], 4, tl.int32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (y0 + 128*tmp8 + 512*tmp4 + 2048*y1), xmask & ymask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp1
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < 0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp12, tmp11, tmp10)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr2 + (y0 + 128*tmp13 + 512*tmp4 + 2048*y1), xmask & ymask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 - tmp9
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp9 + tmp17
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp1
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 < 0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.where(tmp21, tmp20, tmp19)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr2 + (y0 + 128*tmp8 + 512*tmp22 + 2048*y1), xmask & ymask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr2 + (y0 + 128*tmp13 + 512*tmp22 + 2048*y1), xmask & ymask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 - tmp23
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp16
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp23 + tmp26
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 - tmp18
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 * tmp29
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp18 + tmp30
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.sigmoid(tmp31)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr7 + (y0 + 128*tmp8 + 512*tmp4 + 2048*y1), xmask & ymask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr8 + (y0 + 128*tmp8 + 512*tmp4 + 2048*y1), xmask & ymask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.sigmoid(tmp34)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp33 * tmp35
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr7 + (y0 + 128*tmp13 + 512*tmp4 + 2048*y1), xmask & ymask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr8 + (y0 + 128*tmp13 + 512*tmp4 + 2048*y1), xmask & ymask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.sigmoid(tmp38)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp37 * tmp39
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 - tmp36
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp41 * tmp16
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp36 + tmp42
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr7 + (y0 + 128*tmp8 + 512*tmp22 + 2048*y1), xmask & ymask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr8 + (y0 + 128*tmp8 + 512*tmp22 + 2048*y1), xmask & ymask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.sigmoid(tmp45)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp44 * tmp46
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.load(in_ptr7 + (y0 + 128*tmp13 + 512*tmp22 + 2048*y1), xmask & ymask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr8 + (y0 + 128*tmp13 + 512*tmp22 + 2048*y1), xmask & ymask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.sigmoid(tmp49)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp48 * tmp50
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 - tmp47
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52 * tmp16
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp47 + tmp53
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp54 - tmp43
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 128*x4 + 32768*y1), tmp32, xmask & ymask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x4 + 256*y5), tmp43, xmask & ymask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (x4 + 256*y5), tmp55, xmask & ymask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/j7/cj7ii7ff4iqdx3sh6b47pmhluvvvo5e2wy6b3llcn7najadxovku.py
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [fuse_1, fuse_3, add], Original ATen: [aten.mul, aten.add]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_14
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fuse_1 => mul_5
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   fuse_3 => add_13, mul_11
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_1, %sigmoid), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_13, %clamp_max_3), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_13 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_11, %mul_11), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_14 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %add_13), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_8 = async_compile.triton('triton_poi_fused_add_mul_8', '''
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 128}, tile_hint=TileHint.DEFAULT,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_8(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y2 = yindex // 256
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y5 = (yindex % 256)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = ((yindex // 16) % 16)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3 + 128*y4), xmask, eviction_policy='evict_last')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x3 + 128*y4), xmask, eviction_policy='evict_last')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (y5 + 256*x3 + 32768*y2), xmask, eviction_policy='evict_last')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr3 + (y5 + 256*x3 + 32768*y2), xmask, eviction_policy='evict_last')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr4 + (y1), None, eviction_policy='evict_last')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp3 + tmp6
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp2 + tmp7
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3 + 128*y4), tmp8, xmask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/gl/cglky3mauu5n2m2axskxst67kdn57czrysyypviufzy6f6xunsda.py
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => convolution_6
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_6 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%add_14, %primals_9, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_9 = async_compile.triton('triton_poi_fused_convolution_9', '''
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 512, 'x': 256}, tile_hint=TileHint.SQUARE,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_9(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 512
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 128*x2 + 32768*y1), xmask & ymask, eviction_policy='evict_last')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 256*y3), tmp0, xmask & ymask)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (128, 1, 3, 3), (9, 9, 3, 1))
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 128, 16, 16), (32768, 256, 16, 1))
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (128, 128, 1, 1), (128, 1, 1, 1))
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (128, 128, 3, 3), (1152, 9, 3, 1))
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (128, 128, 3, 3), (1152, 9, 3, 1))
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 128, 4, 4), (2048, 16, 4, 1))
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (128, 1, 3, 3), (9, 9, 3, 1))
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (128, 128, 1, 1), (128, 1, 1, 1))
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (128, 128, 3, 3), (1152, 9, 3, 1))
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 128, 16, 16), (32768, 1, 2048, 128), torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_2, buf0, 512, 256, grid=grid(512, 256), stream=stream0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_4, buf1, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_5, buf2, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_6, buf3, 512, 16, grid=grid(512, 16), stream=stream0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_9, buf4, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf0, primals_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=128, bias=None)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 128, 16, 16), (32768, 1, 2048, 128))
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.convolution]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf5, primals_3, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 128, 16, 16), (32768, 1, 2048, 128))
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(buf0, buf1, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 128, 8, 8), (8192, 1, 1024, 128))
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.avg_pool2d]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_3.run(buf7, buf8, 8192, grid=grid(8192), stream=stream0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = extern_kernels.convolution(buf3, buf2, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf9, (4, 128, 4, 4), (2048, 1, 512, 128))
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.convolution]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf3, primals_7, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=128, bias=None)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 128, 4, 4), (2048, 1, 512, 128))
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.convolution]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_8, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 128, 4, 4), (2048, 1, 512, 128))
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((16, 1), (1, 1), torch.int64)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [semantic_conv], Original ATen: [aten._to_copy]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_4.run(buf12, 16, grid=grid(16), stream=stream0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((16, 1), (1, 1), torch.int64)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [semantic_conv], Original ATen: [aten.add, aten.clamp]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_5.run(buf13, 16, grid=grid(16), stream=stream0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((16, ), (1, ), torch.int64)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [semantic_conv], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_4.run(buf14, 16, grid=grid(16), stream=stream0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((16, ), (1, ), torch.int64)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [semantic_conv], Original ATen: [aten.add, aten.clamp]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_5.run(buf15, 16, grid=grid(16), stream=stream0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((16, ), (1, ), torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [semantic_conv], Original ATen: [aten.arange, aten._to_copy, aten.add, aten.mul, aten.sub, aten.clamp]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6.run(buf16, 16, grid=grid(16), stream=stream0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((16, 1), (1, 1), torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [semantic_conv], Original ATen: [aten.sub, aten.clamp]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_6.run(buf18, 16, grid=grid(16), stream=stream0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 128, 16, 16), (32768, 1, 2048, 128), torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 128, 16, 16), (32768, 256, 16, 1), torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 128, 16, 16), (32768, 256, 16, 1), torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [semantic_conv, sigmoid, sigmoid_1, fuse_2, fuse_3], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add, aten.sigmoid]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7.run(buf12, buf14, buf9, buf15, buf16, buf13, buf18, buf8, buf11, buf19, buf20, buf21, 512, 256, grid=grid(512, 256), stream=stream0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 128, 16, 16), (32768, 1, 2048, 128), torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [fuse_1, fuse_3, add], Original ATen: [aten.mul, aten.add]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_8.run(buf6, buf19, buf20, buf21, buf18, buf22, 1024, 128, grid=grid(1024, 128), stream=stream0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf20
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = extern_kernels.convolution(buf22, buf4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf23, (4, 128, 16, 16), (32768, 1, 2048, 128))
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = buf21; del buf21  # reuse
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_9.run(buf23, buf24, 512, 256, grid=grid(512, 256), stream=stream0)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf23
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf24, primals_1, buf0, primals_3, buf1, buf2, buf3, primals_7, primals_8, buf4, buf5, buf6, buf7, buf8, buf10, buf11, buf12, buf13, buf14, buf15, buf16, buf18, buf19, buf22, )
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((128, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 128, 16, 16), (32768, 256, 16, 1), device='cuda:0', dtype=torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((128, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 128, 4, 4), (2048, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((128, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((128, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:45:11.403000 506877 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:45:11.420000 506877 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/m3/cm33ppvbt7456o57zyqy54dtnfehta37jku73t4jjr3et5nucasx.py
