V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['12_inference']
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] cpp_fused_add_affine_grid_generator_copy_mul_repeat_0 = async_compile.cpp_pybinding(['const float*', 'const float*', 'float*', 'float*'], '''
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #include "/tmp/torchinductor_sahanp/2r/c2rnilspx43ivnzu4uieul65kx65dfhfbptbh5og4wk6rqebuxoo.h"
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] extern "C"  void kernel(const float* in_ptr0,
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                        const float* in_ptr1,
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                        float* out_ptr0,
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                        float* out_ptr1)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         #pragma GCC ivdep
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4L); x0+=static_cast<int64_t>(1L))
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             #pragma GCC ivdep
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             for(int64_t x1=static_cast<int64_t>(0L); x1<static_cast<int64_t>(3L); x1+=static_cast<int64_t>(1L))
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 for(int64_t x2=static_cast<int64_t>(0L); x2<static_cast<int64_t>(3L); x2+=static_cast<int64_t>(16L))
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         if(C10_LIKELY(x2 >= static_cast<int64_t>(0L) && x2 < static_cast<int64_t>(1)))
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             for (int64_t x2_tail = static_cast<int64_t>(0L);x2_tail < static_cast<int64_t>(3L); x2_tail++)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp8 = in_ptr0[static_cast<int64_t>(x0)];
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp15 = in_ptr1[static_cast<int64_t>(x0)];
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp0 = x1;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp1 = c10::convert<int32_t>(tmp0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp2 = static_cast<int32_t>(1);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp3 = tmp1 == tmp2;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp4 = x2_tail;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp5 = c10::convert<int32_t>(tmp4);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp6 = static_cast<int32_t>(2);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp7 = tmp5 == tmp6;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp9 = static_cast<float>(-5.25);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp10 = decltype(tmp8)(tmp8 * tmp9);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp11 = static_cast<float>(2.75);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp12 = decltype(tmp10)(tmp10 + tmp11);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp13 = static_cast<int32_t>(0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp14 = tmp2 == tmp13;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp16 = decltype(tmp15)(tmp15 * tmp9);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp17 = decltype(tmp16)(tmp16 + tmp11);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp18 = static_cast<int64_t>(0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp19 = c10::convert<int64_t>(tmp4);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp20 = tmp18 == tmp19;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp21 = static_cast<float>(1.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp22 = static_cast<float>(0.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp23 = tmp20 ? tmp21 : tmp22;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp24 = tmp7 ? tmp17 : tmp23;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp25 = static_cast<int64_t>(1);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp26 = tmp25 == tmp19;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp27 = tmp26 ? tmp21 : tmp22;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp28 = tmp14 ? tmp24 : tmp27;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp29 = tmp7 ? tmp12 : tmp28;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp30 = tmp1 == tmp13;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp31 = c10::convert<int64_t>(tmp0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp32 = tmp31 == tmp19;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp33 = tmp32 ? tmp21 : tmp22;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp34 = tmp30 ? tmp24 : tmp33;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp35 = tmp3 ? tmp29 : tmp34;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 out_ptr0[static_cast<int64_t>(x2_tail + 3L*x1 + 9L*x0)] = tmp35;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         #pragma GCC ivdep
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4L); x0+=static_cast<int64_t>(1L))
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             #pragma GCC ivdep
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             for(int64_t x1=static_cast<int64_t>(0L); x1<static_cast<int64_t>(16L); x1+=static_cast<int64_t>(1L))
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 for(int64_t x2=static_cast<int64_t>(0L); x2<static_cast<int64_t>(2L); x2+=static_cast<int64_t>(16L))
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         if(C10_LIKELY(x2 >= static_cast<int64_t>(0L) && x2 < static_cast<int64_t>(1)))
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             for (int64_t x2_tail = static_cast<int64_t>(0L);x2_tail < static_cast<int64_t>(2L); x2_tail++)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp46 = out_ptr0[static_cast<int64_t>(3L*x2_tail + 9L*x0)];
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp88 = out_ptr0[static_cast<int64_t>(1L + 3L*x2_tail + 9L*x0)];
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp132 = out_ptr0[static_cast<int64_t>(2L + 3L*x2_tail + 9L*x0)];
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp0 = static_cast<int64_t>(0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp1 = static_cast<int64_t>(1);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp2 = tmp0 < tmp1;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp3 = [&]
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp4 = (static_cast<int64_t>(x1) % static_cast<int64_t>(4L));
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp5 = c10::convert<float>(tmp4);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp6 = static_cast<float>(2.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp7 = tmp5 < tmp6;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp8 = static_cast<float>(0.5);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp9 = decltype(tmp5)(tmp5 * tmp8);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp10 = static_cast<float>(-0.75);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp11 = decltype(tmp9)(tmp9 + tmp10);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp12 = 3L + ((-1L)*((static_cast<int64_t>(x1) % static_cast<int64_t>(4L))));
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp13 = c10::convert<float>(tmp12);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp14 = decltype(tmp13)(tmp13 * tmp8);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp15 = static_cast<float>(0.75);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp16 = decltype(tmp15)(tmp15 - tmp14);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp17 = tmp7 ? tmp11 : tmp16;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     return tmp17;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 ;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp18 = tmp2 ? tmp3() : static_cast<decltype(tmp3())>(0.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp19 = static_cast<int64_t>(-1);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp20 = tmp19 >= tmp0;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp21 = tmp19 < tmp1;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp22 = tmp20 & tmp21;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp23 = [&]
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp24 = c10::div_floor_integer(static_cast<int64_t>(x1), static_cast<int64_t>(4L));
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp25 = c10::convert<float>(tmp24);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp26 = static_cast<float>(2.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp27 = tmp25 < tmp26;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp28 = static_cast<float>(0.5);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp29 = decltype(tmp25)(tmp25 * tmp28);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp30 = static_cast<float>(-0.75);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp31 = decltype(tmp29)(tmp29 + tmp30);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp32 = 3L + ((-1L)*(c10::div_floor_integer(static_cast<int64_t>(x1), static_cast<int64_t>(4L))));
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp33 = c10::convert<float>(tmp32);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp34 = decltype(tmp33)(tmp33 * tmp28);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp35 = static_cast<float>(0.75);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp36 = decltype(tmp35)(tmp35 - tmp34);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp37 = tmp27 ? tmp31 : tmp36;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     return tmp37;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 ;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp38 = tmp22 ? tmp23() : static_cast<decltype(tmp23())>(0.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp39 = decltype(tmp18)(tmp18 + tmp38);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp40 = static_cast<int64_t>(-2);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp41 = tmp40 >= tmp0;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp42 = [&]
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp43 = static_cast<float>(1.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     return tmp43;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 ;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp44 = tmp41 ? tmp42() : static_cast<decltype(tmp42())>(0.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp45 = decltype(tmp39)(tmp39 + tmp44);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp47 = decltype(tmp45)(tmp45 * tmp46);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp48 = tmp1 < tmp1;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp49 = [&]
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp50 = (static_cast<int64_t>(x1) % static_cast<int64_t>(4L));
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp51 = c10::convert<float>(tmp50);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp52 = static_cast<float>(2.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp53 = tmp51 < tmp52;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp54 = static_cast<float>(0.5);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp55 = decltype(tmp51)(tmp51 * tmp54);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp56 = static_cast<float>(-0.75);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp57 = decltype(tmp55)(tmp55 + tmp56);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp58 = 3L + ((-1L)*((static_cast<int64_t>(x1) % static_cast<int64_t>(4L))));
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp59 = c10::convert<float>(tmp58);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp60 = decltype(tmp59)(tmp59 * tmp54);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp61 = static_cast<float>(0.75);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp62 = decltype(tmp61)(tmp61 - tmp60);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp63 = tmp53 ? tmp57 : tmp62;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     return tmp63;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 ;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp64 = tmp48 ? tmp49() : static_cast<decltype(tmp49())>(0.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp65 = tmp0 >= tmp0;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp66 = tmp65 & tmp2;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp67 = [&]
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp68 = c10::div_floor_integer(static_cast<int64_t>(x1), static_cast<int64_t>(4L));
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp69 = c10::convert<float>(tmp68);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp70 = static_cast<float>(2.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp71 = tmp69 < tmp70;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp72 = static_cast<float>(0.5);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp73 = decltype(tmp69)(tmp69 * tmp72);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp74 = static_cast<float>(-0.75);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp75 = decltype(tmp73)(tmp73 + tmp74);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp76 = 3L + ((-1L)*(c10::div_floor_integer(static_cast<int64_t>(x1), static_cast<int64_t>(4L))));
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp77 = c10::convert<float>(tmp76);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp78 = decltype(tmp77)(tmp77 * tmp72);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp79 = static_cast<float>(0.75);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp80 = decltype(tmp79)(tmp79 - tmp78);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp81 = tmp71 ? tmp75 : tmp80;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     return tmp81;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 ;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp82 = tmp66 ? tmp67() : static_cast<decltype(tmp67())>(0.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp83 = decltype(tmp64)(tmp64 + tmp82);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp84 = [&]
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp85 = static_cast<float>(1.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     return tmp85;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 ;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp86 = tmp20 ? tmp84() : static_cast<decltype(tmp84())>(0.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp87 = decltype(tmp83)(tmp83 + tmp86);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp89 = decltype(tmp87)(tmp87 * tmp88);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp90 = decltype(tmp47)(tmp47 + tmp89);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp91 = static_cast<int64_t>(2);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp92 = tmp91 < tmp1;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp93 = [&]
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp94 = (static_cast<int64_t>(x1) % static_cast<int64_t>(4L));
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp95 = c10::convert<float>(tmp94);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp96 = static_cast<float>(2.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp97 = tmp95 < tmp96;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp98 = static_cast<float>(0.5);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp99 = decltype(tmp95)(tmp95 * tmp98);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp100 = static_cast<float>(-0.75);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp101 = decltype(tmp99)(tmp99 + tmp100);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp102 = 3L + ((-1L)*((static_cast<int64_t>(x1) % static_cast<int64_t>(4L))));
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp103 = c10::convert<float>(tmp102);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp104 = decltype(tmp103)(tmp103 * tmp98);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp105 = static_cast<float>(0.75);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp106 = decltype(tmp105)(tmp105 - tmp104);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp107 = tmp97 ? tmp101 : tmp106;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     return tmp107;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 ;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp108 = tmp92 ? tmp93() : static_cast<decltype(tmp93())>(0.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp109 = tmp1 >= tmp0;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp110 = tmp109 & tmp48;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp111 = [&]
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp112 = c10::div_floor_integer(static_cast<int64_t>(x1), static_cast<int64_t>(4L));
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp113 = c10::convert<float>(tmp112);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp114 = static_cast<float>(2.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp115 = tmp113 < tmp114;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp116 = static_cast<float>(0.5);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp117 = decltype(tmp113)(tmp113 * tmp116);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp118 = static_cast<float>(-0.75);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp119 = decltype(tmp117)(tmp117 + tmp118);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp120 = 3L + ((-1L)*(c10::div_floor_integer(static_cast<int64_t>(x1), static_cast<int64_t>(4L))));
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp121 = c10::convert<float>(tmp120);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp122 = decltype(tmp121)(tmp121 * tmp116);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp123 = static_cast<float>(0.75);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp124 = decltype(tmp123)(tmp123 - tmp122);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp125 = tmp115 ? tmp119 : tmp124;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     return tmp125;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 ;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp126 = tmp110 ? tmp111() : static_cast<decltype(tmp111())>(0.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp127 = decltype(tmp108)(tmp108 + tmp126);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp128 = [&]
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 {
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     auto tmp129 = static_cast<float>(1.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                     return tmp129;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 ;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp130 = tmp65 ? tmp128() : static_cast<decltype(tmp128())>(0.0);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp131 = decltype(tmp127)(tmp127 + tmp130);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp133 = decltype(tmp131)(tmp131 * tmp132);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp134 = decltype(tmp90)(tmp90 + tmp133);
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 out_ptr1[static_cast<int64_t>(x2_tail + 2L*x1 + 32L*x0)] = tmp134;
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] }
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''')
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nj/cnjv33q7dutsxaumr2kvxy7avewfv7ndudg6ju2l5ezbz2osljzq.py
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.grid_sampler_2d]
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => add_10, add_11, add_12, add_6, add_7, add_8, add_9, floor, floor_1, full_default_11, full_default_14, full_default_5, full_default_8, ge, ge_1, ge_2, ge_3, ge_4, ge_5, ge_6, ge_7, index, index_1, index_2, index_3, logical_and, logical_and_1, logical_and_10, logical_and_11, logical_and_2, logical_and_3, logical_and_4, logical_and_5, logical_and_6, logical_and_7, logical_and_8, logical_and_9, lt_2, lt_3, lt_4, lt_5, lt_6, lt_7, lt_8, lt_9, mul_10, mul_11, mul_12, mul_13, mul_14, mul_15, mul_16, mul_7, mul_8, mul_9, sub_10, sub_11, sub_4, sub_5, sub_6, sub_7, sub_8, sub_9, where_11, where_14, where_5, where_8
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_12, 2.0), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=5] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_7, 1.5), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor : [num_users=9] = call_function[target=torch.ops.aten.floor.default](args = (%add_6,), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor, 0), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_2 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor, 4), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_13, 2.0), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=5] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, 1.5), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor_1 : [num_users=9] = call_function[target=torch.ops.aten.floor.default](args = (%add_7,), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_1 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor_1, 0), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_3 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor_1, 4), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_1, %lt_3), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_1 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_2, %logical_and), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_2 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge, %logical_and_1), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%arg0_1, [%view_5, %view_6, %where_4, %where_3]), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=8] = call_function[target=torch.ops.aten.add.Tensor](args = (%floor, 1), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_8, %add_6), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=8] = call_function[target=torch.ops.aten.add.Tensor](args = (%floor_1, 1), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_9, %add_7), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %sub_5), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_5 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_5 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_2, %mul_9, %full_default_5), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index, %where_5), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_2 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_8, 0), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_4 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_8, 4), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_3 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor_1, 0), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_5 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor_1, 4), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_3 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_3, %lt_5), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_4 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_4, %logical_and_3), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_5 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_2, %logical_and_4), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_1 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%arg0_1, [%view_5, %view_6, %where_7, %where_6]), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_6, %floor), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_9, %add_7), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %sub_7), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_8 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_8 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_5, %mul_10, %full_default_8), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_1, %where_8), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_13, %mul_14), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_4 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor, 0), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_6 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor, 4), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_5 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_9, 0), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_7 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_9, 4), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_6 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_5, %lt_7), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_7 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_6, %logical_and_6), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_8 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_4, %logical_and_7), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_2 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%arg0_1, [%view_5, %view_6, %where_10, %where_9]), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_8, %add_6), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_7, %floor_1), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %sub_9), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_11 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_11 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_8, %mul_11, %full_default_11), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_2, %where_11), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_10, %mul_15), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_6 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_8, 0), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_8 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_8, 4), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_7 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_9, 0), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_9 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_9, 4), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_9 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_7, %lt_9), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_10 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_8, %logical_and_9), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_11 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_6, %logical_and_10), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_3 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%arg0_1, [%view_5, %view_6, %where_13, %where_12]), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_6, %floor), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_7, %floor_1), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_10, %sub_11), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_14 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_14 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_11, %mul_12, %full_default_14), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_3, %where_14), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_11, %mul_16), kwargs = {})
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_grid_sampler_2d_1 = async_compile.triton('triton_poi_fused_grid_sampler_2d_1', '''
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_grid_sampler_2d_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_grid_sampler_2d_1(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 16
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0 + 32*x2), xmask, eviction_policy='evict_last')
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (1 + 2*x0 + 32*x2), xmask, eviction_policy='evict_last')
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 2.0
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.5
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.floor(tmp4)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.0
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 >= tmp6
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 4.0
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 < tmp8
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 * tmp1
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp3
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = libdevice.floor(tmp12)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 >= tmp6
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 < tmp8
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 & tmp15
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp9 & tmp16
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp7 & tmp17
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp13.to(tl.int64)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.full([1], 0, tl.int64)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.where(tmp18, tmp19, tmp20)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([XBLOCK], 4, tl.int32)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp21 < 0
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.where(tmp24, tmp23, tmp21)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp25) & (tmp25 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp25 < 4")
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp5.to(tl.int64)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp18, tmp27, tmp20)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 + tmp22
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 < 0
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp30, tmp29, tmp28)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp31) & (tmp31 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp31 < 4")
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr1 + (tmp31 + 4*tmp25 + 16*x4), xmask, eviction_policy='evict_last')
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = 1.0
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp5 + tmp34
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 - tmp4
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp13 + tmp34
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 - tmp12
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp36 * tmp38
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.where(tmp18, tmp39, tmp6)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp33 * tmp40
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp35 >= tmp6
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp35 < tmp8
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 & tmp16
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp42 & tmp44
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp45, tmp19, tmp20)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 + tmp22
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 < 0
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp48, tmp47, tmp46)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp49) & (tmp49 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp49 < 4")
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp35.to(tl.int64)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.where(tmp45, tmp51, tmp20)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52 + tmp22
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp52 < 0
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.where(tmp54, tmp53, tmp52)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp55) & (tmp55 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp55 < 4")
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.load(in_ptr1 + (tmp55 + 4*tmp49 + 16*x4), xmask, eviction_policy='evict_last')
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp4 - tmp5
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp58 * tmp38
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.where(tmp45, tmp59, tmp6)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp57 * tmp60
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp37 >= tmp6
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp37 < tmp8
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp62 & tmp63
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp9 & tmp64
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp7 & tmp65
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp37.to(tl.int64)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tl.where(tmp66, tmp67, tmp20)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp68 + tmp22
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp68 < 0
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.where(tmp70, tmp69, tmp68)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp71) & (tmp71 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp71 < 4")
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.where(tmp66, tmp27, tmp20)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp73 + tmp22
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp73 < 0
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tl.where(tmp75, tmp74, tmp73)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp76) & (tmp76 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp76 < 4")
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.load(in_ptr1 + (tmp76 + 4*tmp71 + 16*x4), xmask, eviction_policy='evict_last')
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp12 - tmp13
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp36 * tmp79
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tl.where(tmp66, tmp80, tmp6)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp78 * tmp81
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp43 & tmp64
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp42 & tmp83
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tl.where(tmp84, tmp67, tmp20)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp85 + tmp22
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp85 < 0
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tl.where(tmp87, tmp86, tmp85)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp88) & (tmp88 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp88 < 4")
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tl.where(tmp84, tmp51, tmp20)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp90 + tmp22
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tmp90 < 0
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.where(tmp92, tmp91, tmp90)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp93) & (tmp93 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp93 < 4")
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tl.load(in_ptr1 + (tmp93 + 4*tmp88 + 16*x4), xmask, eviction_policy='evict_last')
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp58 * tmp79
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.where(tmp84, tmp96, tmp6)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tmp95 * tmp97
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tmp41 + tmp61
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tmp99 + tmp82
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tmp100 + tmp98
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp101, xmask)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     # Topologically Sorted Source Nodes: [rand], Original ATen: [aten.rand]
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf0 = torch.ops.aten.rand.default([4], device=device(type='cpu'), pin_memory=False)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf1 = buf0
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     del buf0
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     # Topologically Sorted Source Nodes: [rand_1], Original ATen: [aten.rand]
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf2 = torch.ops.aten.rand.default([4], device=device(type='cpu'), pin_memory=False)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf3 = buf2
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     del buf2
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf4 = empty_strided_cpu((4, 3, 3), (9, 3, 1), torch.float32)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf6 = empty_strided_cpu((4, 16, 2), (32, 2, 1), torch.float32)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cpp_fused_add_affine_grid_generator_copy_mul_repeat_0(buf3, buf1, buf4, buf6)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     del buf1
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     del buf3
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     del buf4
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 2), (32, 8, 2, 1), torch.float32)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7.copy_(reinterpret_tensor(buf6, (4, 4, 4, 2), (32, 8, 2, 1), 0), False)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf8; del buf8  # reuse
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.grid_sampler_2d]
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_grid_sampler_2d_1.run(buf12, buf7, arg0_1, 256, grid=grid(256), stream=stream0)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf12, )
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:06:26.848000 1110595 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:06:26.859000 1110595 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/2m/c2m7ivakmvglppa62qx4y2s6vfhbnapv4rnoi3mcwq64bzh4e7xf.py
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['12_inference']
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] cpp_fused_add_affine_grid_generator_copy_mul_repeat_0 = async_compile.cpp_pybinding(['const float*', 'const float*', 'float*', 'float*'], '''
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #include "inductor_cache/2r/c2rnilspx43ivnzu4uieul65kx65dfhfbptbh5og4wk6rqebuxoo.h"
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] extern "C"  void kernel(const float* in_ptr0,
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                        const float* in_ptr1,
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                        float* out_ptr0,
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                        float* out_ptr1)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         #pragma GCC ivdep
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4L); x0+=static_cast<int64_t>(1L))
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             #pragma GCC ivdep
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             for(int64_t x1=static_cast<int64_t>(0L); x1<static_cast<int64_t>(3L); x1+=static_cast<int64_t>(1L))
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 #pragma GCC ivdep
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 for(int64_t x2=static_cast<int64_t>(0L); x2<static_cast<int64_t>(3L); x2+=static_cast<int64_t>(1L))
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp8 = in_ptr0[static_cast<int64_t>(x0)];
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp15 = in_ptr1[static_cast<int64_t>(x0)];
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp0 = x1;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp1 = c10::convert<int32_t>(tmp0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp2 = static_cast<int32_t>(1);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp3 = tmp1 == tmp2;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp4 = x2;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp5 = c10::convert<int32_t>(tmp4);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp6 = static_cast<int32_t>(2);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp7 = tmp5 == tmp6;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp9 = static_cast<float>(-5.25);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp10 = decltype(tmp8)(tmp8 * tmp9);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp11 = static_cast<float>(2.75);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp12 = decltype(tmp10)(tmp10 + tmp11);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp13 = static_cast<int32_t>(0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp14 = tmp2 == tmp13;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp16 = decltype(tmp15)(tmp15 * tmp9);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp17 = decltype(tmp16)(tmp16 + tmp11);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp18 = static_cast<int64_t>(0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp19 = c10::convert<int64_t>(tmp4);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp20 = tmp18 == tmp19;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp21 = static_cast<float>(1.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp22 = static_cast<float>(0.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp23 = tmp20 ? tmp21 : tmp22;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp24 = tmp7 ? tmp17 : tmp23;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp25 = static_cast<int64_t>(1);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp26 = tmp25 == tmp19;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp27 = tmp26 ? tmp21 : tmp22;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp28 = tmp14 ? tmp24 : tmp27;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp29 = tmp7 ? tmp12 : tmp28;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp30 = tmp1 == tmp13;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp31 = c10::convert<int64_t>(tmp0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp32 = tmp31 == tmp19;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp33 = tmp32 ? tmp21 : tmp22;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp34 = tmp30 ? tmp24 : tmp33;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp35 = tmp3 ? tmp29 : tmp34;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             out_ptr0[static_cast<int64_t>(x2 + 3L*x1 + 9L*x0)] = tmp35;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         #pragma GCC ivdep
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4L); x0+=static_cast<int64_t>(1L))
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             #pragma GCC ivdep
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             for(int64_t x1=static_cast<int64_t>(0L); x1<static_cast<int64_t>(16L); x1+=static_cast<int64_t>(1L))
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 #pragma GCC ivdep
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 for(int64_t x2=static_cast<int64_t>(0L); x2<static_cast<int64_t>(2L); x2+=static_cast<int64_t>(1L))
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp46 = out_ptr0[static_cast<int64_t>(3L*x2 + 9L*x0)];
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp88 = out_ptr0[static_cast<int64_t>(1L + 3L*x2 + 9L*x0)];
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp132 = out_ptr0[static_cast<int64_t>(2L + 3L*x2 + 9L*x0)];
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp0 = static_cast<int64_t>(0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp1 = static_cast<int64_t>(1);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp2 = tmp0 < tmp1;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp3 = [&]
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp4 = (static_cast<int64_t>(x1) % static_cast<int64_t>(4L));
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp5 = c10::convert<float>(tmp4);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp6 = static_cast<float>(2.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp7 = tmp5 < tmp6;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp8 = static_cast<float>(0.5);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp9 = decltype(tmp5)(tmp5 * tmp8);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp10 = static_cast<float>(-0.75);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp11 = decltype(tmp9)(tmp9 + tmp10);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp12 = 3L + ((-1L)*((static_cast<int64_t>(x1) % static_cast<int64_t>(4L))));
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp13 = c10::convert<float>(tmp12);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp14 = decltype(tmp13)(tmp13 * tmp8);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp15 = static_cast<float>(0.75);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp16 = decltype(tmp15)(tmp15 - tmp14);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp17 = tmp7 ? tmp11 : tmp16;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 return tmp17;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             ;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp18 = tmp2 ? tmp3() : static_cast<decltype(tmp3())>(0.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp19 = static_cast<int64_t>(-1);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp20 = tmp19 >= tmp0;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp21 = tmp19 < tmp1;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp22 = tmp20 & tmp21;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp23 = [&]
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp24 = c10::div_floor_integer(static_cast<int64_t>(x1), static_cast<int64_t>(4L));
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp25 = c10::convert<float>(tmp24);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp26 = static_cast<float>(2.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp27 = tmp25 < tmp26;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp28 = static_cast<float>(0.5);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp29 = decltype(tmp25)(tmp25 * tmp28);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp30 = static_cast<float>(-0.75);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp31 = decltype(tmp29)(tmp29 + tmp30);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp32 = 3L + ((-1L)*(c10::div_floor_integer(static_cast<int64_t>(x1), static_cast<int64_t>(4L))));
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp33 = c10::convert<float>(tmp32);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp34 = decltype(tmp33)(tmp33 * tmp28);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp35 = static_cast<float>(0.75);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp36 = decltype(tmp35)(tmp35 - tmp34);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp37 = tmp27 ? tmp31 : tmp36;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 return tmp37;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             ;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp38 = tmp22 ? tmp23() : static_cast<decltype(tmp23())>(0.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp39 = decltype(tmp18)(tmp18 + tmp38);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp40 = static_cast<int64_t>(-2);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp41 = tmp40 >= tmp0;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp42 = [&]
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp43 = static_cast<float>(1.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 return tmp43;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             ;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp44 = tmp41 ? tmp42() : static_cast<decltype(tmp42())>(0.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp45 = decltype(tmp39)(tmp39 + tmp44);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp47 = decltype(tmp45)(tmp45 * tmp46);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp48 = tmp1 < tmp1;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp49 = [&]
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp50 = (static_cast<int64_t>(x1) % static_cast<int64_t>(4L));
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp51 = c10::convert<float>(tmp50);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp52 = static_cast<float>(2.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp53 = tmp51 < tmp52;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp54 = static_cast<float>(0.5);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp55 = decltype(tmp51)(tmp51 * tmp54);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp56 = static_cast<float>(-0.75);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp57 = decltype(tmp55)(tmp55 + tmp56);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp58 = 3L + ((-1L)*((static_cast<int64_t>(x1) % static_cast<int64_t>(4L))));
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp59 = c10::convert<float>(tmp58);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp60 = decltype(tmp59)(tmp59 * tmp54);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp61 = static_cast<float>(0.75);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp62 = decltype(tmp61)(tmp61 - tmp60);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp63 = tmp53 ? tmp57 : tmp62;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 return tmp63;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             ;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp64 = tmp48 ? tmp49() : static_cast<decltype(tmp49())>(0.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp65 = tmp0 >= tmp0;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp66 = tmp65 & tmp2;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp67 = [&]
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp68 = c10::div_floor_integer(static_cast<int64_t>(x1), static_cast<int64_t>(4L));
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp69 = c10::convert<float>(tmp68);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp70 = static_cast<float>(2.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp71 = tmp69 < tmp70;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp72 = static_cast<float>(0.5);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp73 = decltype(tmp69)(tmp69 * tmp72);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp74 = static_cast<float>(-0.75);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp75 = decltype(tmp73)(tmp73 + tmp74);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp76 = 3L + ((-1L)*(c10::div_floor_integer(static_cast<int64_t>(x1), static_cast<int64_t>(4L))));
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp77 = c10::convert<float>(tmp76);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp78 = decltype(tmp77)(tmp77 * tmp72);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp79 = static_cast<float>(0.75);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp80 = decltype(tmp79)(tmp79 - tmp78);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp81 = tmp71 ? tmp75 : tmp80;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 return tmp81;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             ;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp82 = tmp66 ? tmp67() : static_cast<decltype(tmp67())>(0.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp83 = decltype(tmp64)(tmp64 + tmp82);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp84 = [&]
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp85 = static_cast<float>(1.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 return tmp85;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             ;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp86 = tmp20 ? tmp84() : static_cast<decltype(tmp84())>(0.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp87 = decltype(tmp83)(tmp83 + tmp86);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp89 = decltype(tmp87)(tmp87 * tmp88);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp90 = decltype(tmp47)(tmp47 + tmp89);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp91 = static_cast<int64_t>(2);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp92 = tmp91 < tmp1;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp93 = [&]
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp94 = (static_cast<int64_t>(x1) % static_cast<int64_t>(4L));
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp95 = c10::convert<float>(tmp94);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp96 = static_cast<float>(2.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp97 = tmp95 < tmp96;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp98 = static_cast<float>(0.5);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp99 = decltype(tmp95)(tmp95 * tmp98);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp100 = static_cast<float>(-0.75);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp101 = decltype(tmp99)(tmp99 + tmp100);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp102 = 3L + ((-1L)*((static_cast<int64_t>(x1) % static_cast<int64_t>(4L))));
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp103 = c10::convert<float>(tmp102);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp104 = decltype(tmp103)(tmp103 * tmp98);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp105 = static_cast<float>(0.75);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp106 = decltype(tmp105)(tmp105 - tmp104);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp107 = tmp97 ? tmp101 : tmp106;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 return tmp107;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             ;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp108 = tmp92 ? tmp93() : static_cast<decltype(tmp93())>(0.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp109 = tmp1 >= tmp0;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp110 = tmp109 & tmp48;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp111 = [&]
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp112 = c10::div_floor_integer(static_cast<int64_t>(x1), static_cast<int64_t>(4L));
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp113 = c10::convert<float>(tmp112);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp114 = static_cast<float>(2.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp115 = tmp113 < tmp114;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp116 = static_cast<float>(0.5);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp117 = decltype(tmp113)(tmp113 * tmp116);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp118 = static_cast<float>(-0.75);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp119 = decltype(tmp117)(tmp117 + tmp118);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp120 = 3L + ((-1L)*(c10::div_floor_integer(static_cast<int64_t>(x1), static_cast<int64_t>(4L))));
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp121 = c10::convert<float>(tmp120);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp122 = decltype(tmp121)(tmp121 * tmp116);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp123 = static_cast<float>(0.75);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp124 = decltype(tmp123)(tmp123 - tmp122);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp125 = tmp115 ? tmp119 : tmp124;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 return tmp125;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             ;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp126 = tmp110 ? tmp111() : static_cast<decltype(tmp111())>(0.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp127 = decltype(tmp108)(tmp108 + tmp126);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp128 = [&]
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             {
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 auto tmp129 = static_cast<float>(1.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                                 return tmp129;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             ;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp130 = tmp65 ? tmp128() : static_cast<decltype(tmp128())>(0.0);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp131 = decltype(tmp127)(tmp127 + tmp130);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp133 = decltype(tmp131)(tmp131 * tmp132);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             auto tmp134 = decltype(tmp90)(tmp90 + tmp133);
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                             out_ptr1[static_cast<int64_t>(x2 + 2L*x1 + 32L*x0)] = tmp134;
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] }
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''')
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/nj/cnjv33q7dutsxaumr2kvxy7avewfv7ndudg6ju2l5ezbz2osljzq.py
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.grid_sampler_2d]
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => add_10, add_11, add_12, add_6, add_7, add_8, add_9, floor, floor_1, full_default_11, full_default_14, full_default_5, full_default_8, ge, ge_1, ge_2, ge_3, ge_4, ge_5, ge_6, ge_7, index, index_1, index_2, index_3, logical_and, logical_and_1, logical_and_10, logical_and_11, logical_and_2, logical_and_3, logical_and_4, logical_and_5, logical_and_6, logical_and_7, logical_and_8, logical_and_9, lt_2, lt_3, lt_4, lt_5, lt_6, lt_7, lt_8, lt_9, mul_10, mul_11, mul_12, mul_13, mul_14, mul_15, mul_16, mul_7, mul_8, mul_9, sub_10, sub_11, sub_4, sub_5, sub_6, sub_7, sub_8, sub_9, where_11, where_14, where_5, where_8
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_12, 2.0), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=5] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_7, 1.5), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor : [num_users=9] = call_function[target=torch.ops.aten.floor.default](args = (%add_6,), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor, 0), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_2 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor, 4), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_13, 2.0), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=5] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, 1.5), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor_1 : [num_users=9] = call_function[target=torch.ops.aten.floor.default](args = (%add_7,), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_1 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor_1, 0), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_3 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor_1, 4), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_1, %lt_3), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_1 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_2, %logical_and), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_2 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge, %logical_and_1), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%arg0_1, [%view_5, %view_6, %where_4, %where_3]), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=8] = call_function[target=torch.ops.aten.add.Tensor](args = (%floor, 1), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_8, %add_6), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=8] = call_function[target=torch.ops.aten.add.Tensor](args = (%floor_1, 1), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_9, %add_7), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %sub_5), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_5 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_5 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_2, %mul_9, %full_default_5), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index, %where_5), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_2 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_8, 0), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_4 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_8, 4), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_3 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor_1, 0), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_5 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor_1, 4), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_3 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_3, %lt_5), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_4 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_4, %logical_and_3), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_5 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_2, %logical_and_4), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_1 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%arg0_1, [%view_5, %view_6, %where_7, %where_6]), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_6, %floor), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_9, %add_7), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %sub_7), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_8 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_8 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_5, %mul_10, %full_default_8), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_1, %where_8), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_13, %mul_14), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_4 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor, 0), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_6 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor, 4), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_5 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_9, 0), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_7 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_9, 4), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_6 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_5, %lt_7), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_7 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_6, %logical_and_6), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_8 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_4, %logical_and_7), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_2 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%arg0_1, [%view_5, %view_6, %where_10, %where_9]), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_8, %add_6), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_7, %floor_1), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %sub_9), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_11 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_11 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_8, %mul_11, %full_default_11), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_2, %where_11), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_10, %mul_15), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_6 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_8, 0), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_8 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_8, 4), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_7 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_9, 0), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_9 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_9, 4), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_9 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_7, %lt_9), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_10 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_8, %logical_and_9), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_11 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_6, %logical_and_10), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_3 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%arg0_1, [%view_5, %view_6, %where_13, %where_12]), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_6, %floor), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_7, %floor_1), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_10, %sub_11), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_14 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_14 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_11, %mul_12, %full_default_14), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_3, %where_14), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_11, %mul_16), kwargs = {})
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_grid_sampler_2d_1 = async_compile.triton('triton_poi_fused_grid_sampler_2d_1', '''
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_grid_sampler_2d_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_grid_sampler_2d_1(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 16
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0 + 32*x2), xmask, eviction_policy='evict_last')
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (1 + 2*x0 + 32*x2), xmask, eviction_policy='evict_last')
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 2.0
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.5
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.floor(tmp4)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.0
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 >= tmp6
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 4.0
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 < tmp8
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 * tmp1
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp3
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = libdevice.floor(tmp12)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 >= tmp6
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 < tmp8
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 & tmp15
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp9 & tmp16
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp7 & tmp17
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp13.to(tl.int64)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.full([1], 0, tl.int64)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.where(tmp18, tmp19, tmp20)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([XBLOCK], 4, tl.int32)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp21 < 0
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.where(tmp24, tmp23, tmp21)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp25) & (tmp25 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp25 < 4")
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp5.to(tl.int64)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp18, tmp27, tmp20)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 + tmp22
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 < 0
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp30, tmp29, tmp28)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp31) & (tmp31 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp31 < 4")
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr1 + (tmp31 + 4*tmp25 + 16*x4), xmask, eviction_policy='evict_last')
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = 1.0
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp5 + tmp34
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 - tmp4
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp13 + tmp34
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 - tmp12
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp36 * tmp38
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.where(tmp18, tmp39, tmp6)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp33 * tmp40
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp35 >= tmp6
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp35 < tmp8
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 & tmp16
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp42 & tmp44
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp45, tmp19, tmp20)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 + tmp22
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 < 0
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp48, tmp47, tmp46)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp49) & (tmp49 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp49 < 4")
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp35.to(tl.int64)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.where(tmp45, tmp51, tmp20)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52 + tmp22
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp52 < 0
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.where(tmp54, tmp53, tmp52)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp55) & (tmp55 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp55 < 4")
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.load(in_ptr1 + (tmp55 + 4*tmp49 + 16*x4), xmask, eviction_policy='evict_last')
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp4 - tmp5
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp58 * tmp38
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.where(tmp45, tmp59, tmp6)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp57 * tmp60
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp37 >= tmp6
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp37 < tmp8
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp62 & tmp63
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp9 & tmp64
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp7 & tmp65
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp37.to(tl.int64)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tl.where(tmp66, tmp67, tmp20)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp68 + tmp22
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp68 < 0
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.where(tmp70, tmp69, tmp68)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp71) & (tmp71 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp71 < 4")
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.where(tmp66, tmp27, tmp20)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp73 + tmp22
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp73 < 0
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tl.where(tmp75, tmp74, tmp73)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp76) & (tmp76 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp76 < 4")
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.load(in_ptr1 + (tmp76 + 4*tmp71 + 16*x4), xmask, eviction_policy='evict_last')
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp12 - tmp13
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp36 * tmp79
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tl.where(tmp66, tmp80, tmp6)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp78 * tmp81
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp43 & tmp64
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp42 & tmp83
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tl.where(tmp84, tmp67, tmp20)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp85 + tmp22
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp85 < 0
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tl.where(tmp87, tmp86, tmp85)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp88) & (tmp88 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp88 < 4")
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tl.where(tmp84, tmp51, tmp20)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp90 + tmp22
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tmp90 < 0
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.where(tmp92, tmp91, tmp90)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp93) & (tmp93 < 4)) | ~(xmask), "index out of bounds: 0 <= tmp93 < 4")
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tl.load(in_ptr1 + (tmp93 + 4*tmp88 + 16*x4), xmask, eviction_policy='evict_last')
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp58 * tmp79
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.where(tmp84, tmp96, tmp6)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tmp95 * tmp97
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tmp41 + tmp61
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tmp99 + tmp82
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tmp100 + tmp98
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp101, xmask)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     # Topologically Sorted Source Nodes: [rand], Original ATen: [aten.rand]
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf0 = torch.ops.aten.rand.default([4], device=device(type='cpu'), pin_memory=False)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf1 = buf0
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     del buf0
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     # Topologically Sorted Source Nodes: [rand_1], Original ATen: [aten.rand]
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf2 = torch.ops.aten.rand.default([4], device=device(type='cpu'), pin_memory=False)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf3 = buf2
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     del buf2
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf4 = empty_strided_cpu((4, 3, 3), (9, 3, 1), torch.float32)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf6 = empty_strided_cpu((4, 16, 2), (32, 2, 1), torch.float32)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cpp_fused_add_affine_grid_generator_copy_mul_repeat_0(buf3, buf1, buf4, buf6)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     del buf1
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     del buf3
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     del buf4
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 2), (32, 8, 2, 1), torch.float32)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7.copy_(reinterpret_tensor(buf6, (4, 4, 4, 2), (32, 8, 2, 1), 0), False)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf8; del buf8  # reuse
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.grid_sampler_2d]
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_grid_sampler_2d_1.run(buf12, buf7, arg0_1, 256, grid=grid(256), stream=stream0)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf12, )
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:55:47.808000 2422640 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:55:47.819000 2422640 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/n7/cn7v2mxyfycolt73xpagj2gueb5js4lhsvtpkvcycg2j2u6shyzp.py
