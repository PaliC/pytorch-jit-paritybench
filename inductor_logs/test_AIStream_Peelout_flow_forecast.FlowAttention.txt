V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['11_inference']
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wt/cwthat4gscdfuuf2edsoqbo46743imc7puru6dhcydy5w4ccfwmn.py
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [keys_1, sum_1, add_1], Original ATen: [aten.sigmoid, aten.sum, aten.add]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   keys_1 => sigmoid_1
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=5] = call_function[target=torch.ops.aten.sigmoid.default](args = (%permute_1,), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%sigmoid_1, [2]), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, 1e-06), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_sigmoid_sum_0 = async_compile.triton('triton_poi_fused_add_sigmoid_sum_0', '''
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_sigmoid_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_sigmoid_sum_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*x1), xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (16 + x0 + 64*x1), xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (48 + x0 + 64*x1), xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sigmoid(tmp2)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.sigmoid(tmp5)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 + tmp6
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.sigmoid(tmp8)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1e-06
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp12, xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/i4/ci4ui6jodjgt5ajnbsxq4nrwbird2yfaxo6engdpxnwnb2btioof.py
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [queries_1, matmul_1, add, einsum, add_4, normalizer_row_refine], Original ATen: [aten.sigmoid, aten.clone, aten.add]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   einsum => clone
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   matmul_1 => clone_6
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   normalizer_row_refine => clone_2
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   queries_1 => sigmoid
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=5] = call_function[target=torch.ops.aten.sigmoid.default](args = (%permute,), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_6 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_2,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sigmoid, 1e-06), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%add,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sigmoid, 1e-06), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_2 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%add_4,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clone_sigmoid_1 = async_compile.triton('triton_poi_fused_add_clone_sigmoid_1', '''
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clone_sigmoid_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clone_sigmoid_1(in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*x1 + 64*x3), xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 1e-06
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp3, xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x4), tmp1, xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x4), tmp3, xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qp/cqprcw4dnls4iaeza2khwbx2j37sbauctof2qwlqi6vn7lujjjd2.py
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [queries_1, mul_1, sum_4, add_7, sum_2, add_3], Original ATen: [aten.sigmoid, aten.mul, aten.sum, aten.add]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_7 => add_7
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_3
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   queries_1 => sigmoid
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_4 => sum_4
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=5] = call_function[target=torch.ops.aten.sigmoid.default](args = (%permute,), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid, %unsqueeze_4), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_3, [2]), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_4, 1e-06), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%sigmoid, [2]), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_2, 1e-06), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_sigmoid_sum_2 = async_compile.triton('triton_poi_fused_add_mul_sigmoid_sum_2', '''
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_sigmoid_sum_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_sigmoid_sum_2(in_ptr0, in_ptr1, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 16)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 4
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3 + 64*x2), xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (4*x4), xmask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (16 + x3 + 64*x2), xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (1 + 4*x4), xmask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (32 + x3 + 64*x2), xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr1 + (2 + 4*x4), xmask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (48 + x3 + 64*x2), xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (3 + 4*x4), xmask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int32)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 / tmp2
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1.0
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp1 * tmp6
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.sigmoid(tmp8)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp3 / tmp10
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp5
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 * tmp12
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 + tmp13
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sigmoid(tmp15)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp3 / tmp17
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp5
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp16 * tmp19
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp14 + tmp20
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.sigmoid(tmp22)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp3 / tmp24
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp5
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp23 * tmp26
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp21 + tmp27
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = 1e-06
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp1 + tmp9
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 + tmp16
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32 + tmp23
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 + tmp29
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp30, xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x5), tmp34, xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/kp/ckp3ovtrr3xecncsvs2be3bncaqfwlljdvv6hncflbeumwgv2exu.py
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [keys_1, add_6, normalizer_col_refine, add_2, einsum_1], Original ATen: [aten.sigmoid, aten.add, aten.clone]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_6 => add_6
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   einsum_1 => clone_1
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   keys_1 => sigmoid_1
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   normalizer_col_refine => clone_3
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=5] = call_function[target=torch.ops.aten.sigmoid.default](args = (%permute_1,), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sigmoid_1, 1e-06), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_3 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%add_6,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sigmoid_1, 1e-06), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_1 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%add_2,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clone_sigmoid_3 = async_compile.triton('triton_poi_fused_add_clone_sigmoid_3', '''
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clone_sigmoid_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clone_sigmoid_3(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*x1 + 64*x3), xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 1e-06
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp3, xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x4), tmp3, xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lw/clwujgjma4btrhu7c7w7kkqyk2iskqshebzhjbc364dhhpszcwyx.py
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => amax, exp, sub
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_15, [-1], True), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_15, %amax), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_4 = async_compile.triton('triton_poi_fused__softmax_4', '''
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_4', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_4(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/io/cioisgq5k3b3nqo4734vstnsxtbfommh5ppwybhzzp7ngimd63ba.py
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax, normalizer_col_refine_1], Original ATen: [aten._softmax, aten.mul]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   normalizer_col_refine_1 => mul_5
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => div, sum_5
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_5), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, 4), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_mul_5 = async_compile.triton('triton_poi_fused__softmax_mul_5', '''
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_mul_5', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_mul_5(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 4.0
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp10, xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [keys_1, mul, sum_3, add_5], Original ATen: [aten.sigmoid, aten.mul, aten.sum, aten.add]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_5 => add_5
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   keys_1 => sigmoid_1
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_2
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_3 => sum_3
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=5] = call_function[target=torch.ops.aten.sigmoid.default](args = (%permute_1,), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid_1, %unsqueeze_2), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_2, [2]), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_3, 1e-06), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_sigmoid_sum_6 = async_compile.triton('triton_poi_fused_add_mul_sigmoid_sum_6', '''
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_sigmoid_sum_6', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_sigmoid_sum_6(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 16)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 4
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3 + 64*x2), xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (4*x4), xmask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (16 + x3 + 64*x2), xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (1 + 4*x4), xmask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (32 + x3 + 64*x2), xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr1 + (2 + 4*x4), xmask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (48 + x3 + 64*x2), xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (3 + 4*x4), xmask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int32)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 / tmp2
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1.0
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp1 * tmp6
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.sigmoid(tmp8)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp3 / tmp10
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp5
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 * tmp12
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 + tmp13
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sigmoid(tmp15)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp3 / tmp17
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp5
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp16 * tmp19
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp14 + tmp20
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.sigmoid(tmp22)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp3 / tmp24
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp5
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp23 * tmp26
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp21 + tmp27
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = 1e-06
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp30, xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rx/crxvo4wjanzesh6wjflmv56q2totg35dqrozeylydtzvhicbcrew.py
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [kv], Original ATen: [aten.clone]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   kv => clone_4
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_4 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_7 = async_compile.triton('triton_poi_fused_clone_7', '''
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_7', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_7(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 16)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 16
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 16*x2 + 64*y1), xmask & ymask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp1, xmask & ymask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yu/cyulbt3wj3frlro7ng65lq4vvpkwu2xioa3hbs7m7van62lnsknj.py
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_4, kv], Original ATen: [aten.mul, aten.clone]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   kv => clone_5
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_6
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_2, %unsqueeze_6), kwargs = {})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_5 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_1,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_mul_8 = async_compile.triton('triton_poi_fused_clone_mul_8', '''
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_mul_8', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_mul_8(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 4
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*x1 + 64*x3), xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x4), xmask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp2, xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/54/c54mq3jse3i57ffjc5jpcgprae3pdjyzjq7b7nvbymhex6nkacz3.py
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.clone]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => clone_7
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_7 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_24,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_9 = async_compile.triton('triton_poi_fused_clone_9', '''
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_9', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_9(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 4
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x4), xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x5), xmask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (x5), xmask, eviction_policy='evict_last')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.full([1], 1, tl.int32)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 / tmp1
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1.0
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 * tmp5
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 * tmp4
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.sigmoid(tmp8)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp6 * tmp9
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 4*x2 + 16*x1 + 64*x3), tmp10, xmask)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [keys_1, sum_1, add_1], Original ATen: [aten.sigmoid, aten.sum, aten.add]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_sigmoid_sum_0.run(arg1_1, buf1, 64, grid=grid(64), stream=stream0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [queries_1, matmul_1, add, einsum, add_4, normalizer_row_refine], Original ATen: [aten.sigmoid, aten.clone, aten.add]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clone_sigmoid_1.run(arg0_1, buf0, buf11, buf16, 256, grid=grid(256), stream=stream0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((16, 4, 1), (4, 1, 1), torch.float32)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [einsum], Original ATen: [aten.bmm]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf0, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf1, (16, 4, 1), (4, 1, 0), 0), out=buf2)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf1; del buf1  # reuse
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [queries_1, mul_1, sum_4, add_7, sum_2, add_3], Original ATen: [aten.sigmoid, aten.mul, aten.sum, aten.add]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_sigmoid_sum_2.run(arg0_1, buf2, buf4, buf14, 64, grid=grid(64), stream=stream0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf0; del buf0  # reuse
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [keys_1, add_6, normalizer_col_refine, add_2, einsum_1], Original ATen: [aten.sigmoid, aten.add, aten.clone]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clone_sigmoid_3.run(arg1_1, buf3, buf13, 256, grid=grid(256), stream=stream0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((16, 4, 1), (4, 1, 1), torch.float32)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [normalizer_col_refine], Original ATen: [aten.bmm]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf3, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf4, (16, 4, 1), (4, 1, 0), 0), out=buf5)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf4; del buf4  # reuse
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_4.run(buf5, buf6, 64, grid=grid(64), stream=stream0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf5, (4, 4, 4), (16, 4, 1), 0); del buf5  # reuse
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax, normalizer_col_refine_1], Original ATen: [aten._softmax, aten.mul]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_mul_5.run(buf6, buf7, 64, grid=grid(64), stream=stream0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = reinterpret_tensor(buf6, (16, 4, 1), (4, 1, 1), 0); del buf6  # reuse
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [einsum_1], Original ATen: [aten.bmm]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf13, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf14, (16, 4, 1), (4, 1, 0), 0), out=buf15)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = buf14; del buf14  # reuse
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [keys_1, mul, sum_3, add_5], Original ATen: [aten.sigmoid, aten.mul, aten.sum, aten.add]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_sigmoid_sum_6.run(arg1_1, buf15, buf17, 64, grid=grid(64), stream=stream0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf15
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = buf13; del buf13  # reuse
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [kv], Original ATen: [aten.clone]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_7.run(arg1_1, buf8, 64, 4, grid=grid(64, 4), stream=stream0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf3; del buf3  # reuse
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_4, kv], Original ATen: [aten.mul, aten.clone]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_mul_8.run(arg2_1, buf7, buf9, 256, grid=grid(256), stream=stream0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = reinterpret_tensor(buf7, (16, 4, 1), (4, 1, 1), 0); del buf7  # reuse
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [normalizer_row_refine], Original ATen: [aten.bmm]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf16, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf17, (16, 4, 1), (4, 1, 0), 0), out=buf18)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf16, (16, 4, 4), (16, 4, 1), 0); del buf16  # reuse
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [kv], Original ATen: [aten.bmm]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf8, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf9, (16, 4, 4), (16, 4, 1), 0), out=buf10)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf9, (16, 4, 4), (16, 4, 1), 0); del buf9  # reuse
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_1], Original ATen: [aten.bmm]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf11, (16, 4, 4), (16, 4, 1), 0), buf10, out=buf12)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = buf11; del buf11  # reuse
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.clone]
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_9.run(buf12, buf2, buf18, buf19, 256, grid=grid(256), stream=stream0)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf12
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf18
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf19, )
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:25:04.042000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:04.051000 3415184 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/sg/csgks74dztinuhh3by2ktkecfht7xxuc3yznrfwkxlglmlgneahk.py
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['11_inference']
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/wt/cwthat4gscdfuuf2edsoqbo46743imc7puru6dhcydy5w4ccfwmn.py
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [keys_1, sum_1, add_1], Original ATen: [aten.sigmoid, aten.sum, aten.add]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   keys_1 => sigmoid_1
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=5] = call_function[target=torch.ops.aten.sigmoid.default](args = (%permute_1,), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%sigmoid_1, [2]), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, 1e-06), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_sigmoid_sum_0 = async_compile.triton('triton_poi_fused_add_sigmoid_sum_0', '''
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_sigmoid_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_sigmoid_sum_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*x1), xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (16 + x0 + 64*x1), xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (48 + x0 + 64*x1), xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sigmoid(tmp2)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.sigmoid(tmp5)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 + tmp6
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.sigmoid(tmp8)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1e-06
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp12, xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/i4/ci4ui6jodjgt5ajnbsxq4nrwbird2yfaxo6engdpxnwnb2btioof.py
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [queries_1, matmul_1, add, einsum, add_4, normalizer_row_refine], Original ATen: [aten.sigmoid, aten.clone, aten.add]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   einsum => clone
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   matmul_1 => clone_6
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   normalizer_row_refine => clone_2
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   queries_1 => sigmoid
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=5] = call_function[target=torch.ops.aten.sigmoid.default](args = (%permute,), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_6 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_2,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sigmoid, 1e-06), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%add,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sigmoid, 1e-06), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_2 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%add_4,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clone_sigmoid_1 = async_compile.triton('triton_poi_fused_add_clone_sigmoid_1', '''
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clone_sigmoid_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clone_sigmoid_1(in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*x1 + 64*x3), xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 1e-06
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp3, xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x4), tmp1, xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x4), tmp3, xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qp/cqprcw4dnls4iaeza2khwbx2j37sbauctof2qwlqi6vn7lujjjd2.py
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [queries_1, mul_1, sum_4, add_7, sum_2, add_3], Original ATen: [aten.sigmoid, aten.mul, aten.sum, aten.add]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_7 => add_7
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_3
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   queries_1 => sigmoid
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_4 => sum_4
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=5] = call_function[target=torch.ops.aten.sigmoid.default](args = (%permute,), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid, %unsqueeze_4), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_3, [2]), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_4, 1e-06), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%sigmoid, [2]), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_2, 1e-06), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_sigmoid_sum_2 = async_compile.triton('triton_poi_fused_add_mul_sigmoid_sum_2', '''
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_sigmoid_sum_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_sigmoid_sum_2(in_ptr0, in_ptr1, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 16)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 4
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3 + 64*x2), xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (4*x4), xmask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (16 + x3 + 64*x2), xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (1 + 4*x4), xmask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (32 + x3 + 64*x2), xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr1 + (2 + 4*x4), xmask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (48 + x3 + 64*x2), xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (3 + 4*x4), xmask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int32)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 / tmp2
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1.0
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp1 * tmp6
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.sigmoid(tmp8)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp3 / tmp10
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp5
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 * tmp12
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 + tmp13
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sigmoid(tmp15)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp3 / tmp17
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp5
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp16 * tmp19
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp14 + tmp20
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.sigmoid(tmp22)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp3 / tmp24
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp5
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp23 * tmp26
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp21 + tmp27
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = 1e-06
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp1 + tmp9
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 + tmp16
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32 + tmp23
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 + tmp29
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp30, xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x5), tmp34, xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/kp/ckp3ovtrr3xecncsvs2be3bncaqfwlljdvv6hncflbeumwgv2exu.py
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [keys_1, add_6, normalizer_col_refine, add_2, einsum_1], Original ATen: [aten.sigmoid, aten.add, aten.clone]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_6 => add_6
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   einsum_1 => clone_1
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   keys_1 => sigmoid_1
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   normalizer_col_refine => clone_3
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=5] = call_function[target=torch.ops.aten.sigmoid.default](args = (%permute_1,), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sigmoid_1, 1e-06), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_3 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%add_6,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sigmoid_1, 1e-06), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_1 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%add_2,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clone_sigmoid_3 = async_compile.triton('triton_poi_fused_add_clone_sigmoid_3', '''
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clone_sigmoid_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clone_sigmoid_3(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*x1 + 64*x3), xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 1e-06
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp3, xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x4), tmp3, xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/lw/clwujgjma4btrhu7c7w7kkqyk2iskqshebzhjbc364dhhpszcwyx.py
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => amax, exp, sub
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_15, [-1], True), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_15, %amax), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_4 = async_compile.triton('triton_poi_fused__softmax_4', '''
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_4', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_4(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/io/cioisgq5k3b3nqo4734vstnsxtbfommh5ppwybhzzp7ngimd63ba.py
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax, normalizer_col_refine_1], Original ATen: [aten._softmax, aten.mul]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   normalizer_col_refine_1 => mul_5
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => div, sum_5
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_5), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, 4), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_mul_5 = async_compile.triton('triton_poi_fused__softmax_mul_5', '''
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_mul_5', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_mul_5(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 4.0
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp10, xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [keys_1, mul, sum_3, add_5], Original ATen: [aten.sigmoid, aten.mul, aten.sum, aten.add]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_5 => add_5
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   keys_1 => sigmoid_1
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_2
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_3 => sum_3
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=5] = call_function[target=torch.ops.aten.sigmoid.default](args = (%permute_1,), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid_1, %unsqueeze_2), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_2, [2]), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_3, 1e-06), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_sigmoid_sum_6 = async_compile.triton('triton_poi_fused_add_mul_sigmoid_sum_6', '''
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_sigmoid_sum_6', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_sigmoid_sum_6(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 16)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 4
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3 + 64*x2), xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (4*x4), xmask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (16 + x3 + 64*x2), xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (1 + 4*x4), xmask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (32 + x3 + 64*x2), xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr1 + (2 + 4*x4), xmask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + (48 + x3 + 64*x2), xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (3 + 4*x4), xmask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int32)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 / tmp2
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1.0
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp1 * tmp6
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.sigmoid(tmp8)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp3 / tmp10
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp5
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 * tmp12
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 + tmp13
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.sigmoid(tmp15)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp3 / tmp17
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp5
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp16 * tmp19
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp14 + tmp20
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.sigmoid(tmp22)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp3 / tmp24
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp5
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp23 * tmp26
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp21 + tmp27
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = 1e-06
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp30, xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/rx/crxvo4wjanzesh6wjflmv56q2totg35dqrozeylydtzvhicbcrew.py
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [kv], Original ATen: [aten.clone]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   kv => clone_4
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_4 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_7 = async_compile.triton('triton_poi_fused_clone_7', '''
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_7', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_7(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 16)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 16
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 16*x2 + 64*y1), xmask & ymask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp1, xmask & ymask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/yu/cyulbt3wj3frlro7ng65lq4vvpkwu2xioa3hbs7m7van62lnsknj.py
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_4, kv], Original ATen: [aten.mul, aten.clone]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   kv => clone_5
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_6
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_2, %unsqueeze_6), kwargs = {})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_5 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_1,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_mul_8 = async_compile.triton('triton_poi_fused_clone_mul_8', '''
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_mul_8', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_mul_8(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 4
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*x1 + 64*x3), xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x4), xmask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp2, xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/54/c54mq3jse3i57ffjc5jpcgprae3pdjyzjq7b7nvbymhex6nkacz3.py
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.clone]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => clone_7
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_7 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_24,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_9 = async_compile.triton('triton_poi_fused_clone_9', '''
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_9', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_9(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 4
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x4), xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x5), xmask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (x5), xmask, eviction_policy='evict_last')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.full([1], 1, tl.int32)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 / tmp1
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1.0
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 * tmp5
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 * tmp4
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.sigmoid(tmp8)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp6 * tmp9
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 4*x2 + 16*x1 + 64*x3), tmp10, xmask)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [keys_1, sum_1, add_1], Original ATen: [aten.sigmoid, aten.sum, aten.add]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_sigmoid_sum_0.run(arg1_1, buf1, 64, grid=grid(64), stream=stream0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [queries_1, matmul_1, add, einsum, add_4, normalizer_row_refine], Original ATen: [aten.sigmoid, aten.clone, aten.add]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clone_sigmoid_1.run(arg0_1, buf0, buf11, buf16, 256, grid=grid(256), stream=stream0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((16, 4, 1), (4, 1, 1), torch.float32)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [einsum], Original ATen: [aten.bmm]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf0, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf1, (16, 4, 1), (4, 1, 0), 0), out=buf2)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf1; del buf1  # reuse
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [queries_1, mul_1, sum_4, add_7, sum_2, add_3], Original ATen: [aten.sigmoid, aten.mul, aten.sum, aten.add]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_sigmoid_sum_2.run(arg0_1, buf2, buf4, buf14, 64, grid=grid(64), stream=stream0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf0; del buf0  # reuse
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [keys_1, add_6, normalizer_col_refine, add_2, einsum_1], Original ATen: [aten.sigmoid, aten.add, aten.clone]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clone_sigmoid_3.run(arg1_1, buf3, buf13, 256, grid=grid(256), stream=stream0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((16, 4, 1), (4, 1, 1), torch.float32)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [normalizer_col_refine], Original ATen: [aten.bmm]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf3, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf4, (16, 4, 1), (4, 1, 0), 0), out=buf5)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf4; del buf4  # reuse
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_4.run(buf5, buf6, 64, grid=grid(64), stream=stream0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf5, (4, 4, 4), (16, 4, 1), 0); del buf5  # reuse
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax, normalizer_col_refine_1], Original ATen: [aten._softmax, aten.mul]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_mul_5.run(buf6, buf7, 64, grid=grid(64), stream=stream0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = reinterpret_tensor(buf6, (16, 4, 1), (4, 1, 1), 0); del buf6  # reuse
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [einsum_1], Original ATen: [aten.bmm]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf13, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf14, (16, 4, 1), (4, 1, 0), 0), out=buf15)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = buf14; del buf14  # reuse
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [keys_1, mul, sum_3, add_5], Original ATen: [aten.sigmoid, aten.mul, aten.sum, aten.add]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_sigmoid_sum_6.run(arg1_1, buf15, buf17, 64, grid=grid(64), stream=stream0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf15
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = buf13; del buf13  # reuse
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [kv], Original ATen: [aten.clone]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_7.run(arg1_1, buf8, 64, 4, grid=grid(64, 4), stream=stream0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf3; del buf3  # reuse
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_4, kv], Original ATen: [aten.mul, aten.clone]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_mul_8.run(arg2_1, buf7, buf9, 256, grid=grid(256), stream=stream0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = reinterpret_tensor(buf7, (16, 4, 1), (4, 1, 1), 0); del buf7  # reuse
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [normalizer_row_refine], Original ATen: [aten.bmm]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf16, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf17, (16, 4, 1), (4, 1, 0), 0), out=buf18)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf16, (16, 4, 4), (16, 4, 1), 0); del buf16  # reuse
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [kv], Original ATen: [aten.bmm]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf8, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf9, (16, 4, 4), (16, 4, 1), 0), out=buf10)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf9, (16, 4, 4), (16, 4, 1), 0); del buf9  # reuse
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [matmul_1], Original ATen: [aten.bmm]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf11, (16, 4, 4), (16, 4, 1), 0), buf10, out=buf12)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = buf11; del buf11  # reuse
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.clone]
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_9.run(buf12, buf2, buf18, buf19, 256, grid=grid(256), stream=stream0)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf12
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf18
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf19, )
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:14:58.673000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:58.687000 2077305 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/it/cittdxcjtcwx7h3q3ihfddhyjp3ggieelrqcjet2mrp4nnsamiar.py
