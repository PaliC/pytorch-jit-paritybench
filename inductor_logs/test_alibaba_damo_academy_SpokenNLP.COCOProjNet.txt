V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vy/cvyldfqwktr5kzzkpshwmjeicu5py5oiymuwpq7yliqrlqfnsvpx.py
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [img], Original ATen: [aten.clone]
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   img => clone
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand,), kwargs = {memory_format: torch.contiguous_format})
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_0 = async_compile.triton('triton_poi_fused_clone_0', '''
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp0, xmask)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hw/chwvj3mmzqilpokf3pyjz3sghz6tz4o26sdmpv2yra2x5bypnezu.py
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [imgproj], Original ATen: [aten.div]
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   imgproj => div
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%addmm, %expand_2), kwargs = {})
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_1 = async_compile.triton('triton_poi_fused_div_1', '''
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp0 / tmp12
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp13, xmask)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qs/cqscvwbuykxhyetoqfb5g3sgtpphgzmof2il3rub774y33v53fai.py
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [imgcproj, sentcproj, mul, anchor1, mul_1, anchor2, mul_2, img_sentc, mul_3, sent_imgc], Original ATen: [aten.div, aten.mul, aten.sum]
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   anchor1 => sum_5
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   anchor2 => sum_6
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   img_sentc => sum_7
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   imgcproj => div_1
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sent_imgc => sum_8
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sentcproj => div_3
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%addmm_1, %expand_3), kwargs = {})
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%addmm_3, %expand_5), kwargs = {})
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, %div_2), kwargs = {})
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [1]), kwargs = {})
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_2, %div), kwargs = {})
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_6 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_1, [1]), kwargs = {})
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, %div_3), kwargs = {})
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_7 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_2, [1]), kwargs = {})
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_2, %div_1), kwargs = {})
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_8 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_3, [1]), kwargs = {})
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_mul_sum_2 = async_compile.triton('triton_poi_fused_div_mul_sum_2', '''
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_mul_sum_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_mul_sum_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, out_ptr1, out_ptr2, out_ptr3, xnumel, XBLOCK : tl.constexpr):
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr2 + (4*x0), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr2 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr2 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr2 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr3 + (4*x0), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr3 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr3 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.load(in_ptr3 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 + tmp5
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 * tmp8
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp6 + tmp9
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp10 + tmp13
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp1 * tmp0
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp4 * tmp3
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp8 * tmp7
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp12 * tmp11
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 * tmp22
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 * tmp24
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp23 + tmp25
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 * tmp27
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp26 + tmp28
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 * tmp30
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp29 + tmp31
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = libdevice.sqrt(tmp32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp22 / tmp33
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp0 * tmp34
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp24 / tmp33
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp3 * tmp36
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp35 + tmp37
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp27 / tmp33
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp7 * tmp39
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp38 + tmp40
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp30 / tmp33
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp11 * tmp42
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp41 + tmp43
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 * tmp45
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp47 * tmp47
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp46 + tmp48
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 * tmp50
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp49 + tmp51
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp53 * tmp53
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp52 + tmp54
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = libdevice.sqrt(tmp55)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp45 / tmp56
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp1 * tmp57
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp47 / tmp56
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp4 * tmp59
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp58 + tmp60
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp50 / tmp56
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp8 * tmp62
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp61 + tmp63
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp53 / tmp56
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp12 * tmp65
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp64 + tmp66
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp14, xmask)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp21, xmask)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp44, xmask)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (x0), tmp67, xmask)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8 = args
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4), (16, 4, 1))
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, 4), (4, 1))
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, ), (1, ))
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, 4), (4, 1))
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, ), (1, ))
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [img], Original ATen: [aten.clone]
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_0.run(primals_1, buf0, 256, grid=grid(256), stream=stream0)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sent], Original ATen: [aten.clone]
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_0.run(primals_3, buf1, 256, grid=grid(256), stream=stream0)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.addmm]
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_6, reinterpret_tensor(buf0, (64, 4), (4, 1), 0), reinterpret_tensor(primals_5, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf2)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [imgproj], Original ATen: [aten.div]
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_1.run(buf2, buf3, 256, grid=grid(256), stream=stream0)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.addmm]
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_6, reinterpret_tensor(primals_2, (64, 4), (4, 1), 0), reinterpret_tensor(primals_5, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf4)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.addmm]
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_8, reinterpret_tensor(buf1, (64, 4), (4, 1), 0), reinterpret_tensor(primals_7, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf5)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sentproj], Original ATen: [aten.div]
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_1.run(buf5, buf6, 256, grid=grid(256), stream=stream0)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.addmm]
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_8, reinterpret_tensor(primals_4, (64, 4), (4, 1), 0), reinterpret_tensor(primals_7, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf7)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [imgcproj, sentcproj, mul, anchor1, mul_1, anchor2, mul_2, img_sentc, mul_3, sent_imgc], Original ATen: [aten.div, aten.mul, aten.sum]
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_mul_sum_2.run(buf3, buf6, buf7, buf4, buf8, buf9, buf10, buf11, 64, grid=grid(64), stream=stream0)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf8, buf9, buf10, buf11, reinterpret_tensor(buf0, (64, 4), (4, 1), 0), reinterpret_tensor(primals_2, (64, 4), (4, 1), 0), reinterpret_tensor(buf1, (64, 4), (4, 1), 0), reinterpret_tensor(primals_4, (64, 4), (4, 1), 0), buf2, buf4, buf5, buf7, )
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8])
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:54:39.527000 841249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:54:39.533000 841249 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/cj/ccjkcrdjthb5lkos5qu6i45jk5ewhmfjvalabcg727jnidnpv5m7.py
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vy/cvyldfqwktr5kzzkpshwmjeicu5py5oiymuwpq7yliqrlqfnsvpx.py
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [img], Original ATen: [aten.clone]
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   img => clone
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand,), kwargs = {memory_format: torch.contiguous_format})
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_0 = async_compile.triton('triton_poi_fused_clone_0', '''
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp0, xmask)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/hw/chwvj3mmzqilpokf3pyjz3sghz6tz4o26sdmpv2yra2x5bypnezu.py
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [imgproj], Original ATen: [aten.div]
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   imgproj => div
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%addmm, %expand_2), kwargs = {})
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_1 = async_compile.triton('triton_poi_fused_div_1', '''
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp0 / tmp12
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp13, xmask)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qs/cqscvwbuykxhyetoqfb5g3sgtpphgzmof2il3rub774y33v53fai.py
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [imgcproj, sentcproj, mul, anchor1, mul_1, anchor2, mul_2, img_sentc, mul_3, sent_imgc], Original ATen: [aten.div, aten.mul, aten.sum]
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   anchor1 => sum_5
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   anchor2 => sum_6
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   img_sentc => sum_7
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   imgcproj => div_1
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sent_imgc => sum_8
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sentcproj => div_3
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%addmm_1, %expand_3), kwargs = {})
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%addmm_3, %expand_5), kwargs = {})
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, %div_2), kwargs = {})
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [1]), kwargs = {})
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_2, %div), kwargs = {})
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_6 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_1, [1]), kwargs = {})
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, %div_3), kwargs = {})
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_7 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_2, [1]), kwargs = {})
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_2, %div_1), kwargs = {})
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_8 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_3, [1]), kwargs = {})
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_mul_sum_2 = async_compile.triton('triton_poi_fused_div_mul_sum_2', '''
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_mul_sum_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_mul_sum_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, out_ptr1, out_ptr2, out_ptr3, xnumel, XBLOCK : tl.constexpr):
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr2 + (4*x0), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr2 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr2 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr2 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr3 + (4*x0), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr3 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr3 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.load(in_ptr3 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 + tmp5
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 * tmp8
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp6 + tmp9
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp10 + tmp13
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp1 * tmp0
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp4 * tmp3
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp8 * tmp7
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp12 * tmp11
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 * tmp22
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 * tmp24
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp23 + tmp25
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 * tmp27
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp26 + tmp28
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 * tmp30
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp29 + tmp31
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = libdevice.sqrt(tmp32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp22 / tmp33
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp0 * tmp34
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp24 / tmp33
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp3 * tmp36
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp35 + tmp37
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp27 / tmp33
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp7 * tmp39
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp38 + tmp40
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp30 / tmp33
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp11 * tmp42
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp41 + tmp43
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 * tmp45
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp47 * tmp47
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp46 + tmp48
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 * tmp50
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp49 + tmp51
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp53 * tmp53
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp52 + tmp54
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = libdevice.sqrt(tmp55)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp45 / tmp56
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp1 * tmp57
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp47 / tmp56
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp4 * tmp59
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp58 + tmp60
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp50 / tmp56
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp8 * tmp62
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp61 + tmp63
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp53 / tmp56
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp12 * tmp65
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp64 + tmp66
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp14, xmask)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp21, xmask)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp44, xmask)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (x0), tmp67, xmask)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8 = args
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4), (16, 4, 1))
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, 4), (4, 1))
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, ), (1, ))
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, 4), (4, 1))
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, ), (1, ))
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [img], Original ATen: [aten.clone]
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_0.run(primals_1, buf0, 256, grid=grid(256), stream=stream0)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sent], Original ATen: [aten.clone]
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_0.run(primals_3, buf1, 256, grid=grid(256), stream=stream0)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.addmm]
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_6, reinterpret_tensor(buf0, (64, 4), (4, 1), 0), reinterpret_tensor(primals_5, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf2)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [imgproj], Original ATen: [aten.div]
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_1.run(buf2, buf3, 256, grid=grid(256), stream=stream0)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.addmm]
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_6, reinterpret_tensor(primals_2, (64, 4), (4, 1), 0), reinterpret_tensor(primals_5, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf4)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.addmm]
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_8, reinterpret_tensor(buf1, (64, 4), (4, 1), 0), reinterpret_tensor(primals_7, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf5)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sentproj], Original ATen: [aten.div]
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_1.run(buf5, buf6, 256, grid=grid(256), stream=stream0)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.addmm]
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_8, reinterpret_tensor(primals_4, (64, 4), (4, 1), 0), reinterpret_tensor(primals_7, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf7)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [imgcproj, sentcproj, mul, anchor1, mul_1, anchor2, mul_2, img_sentc, mul_3, sent_imgc], Original ATen: [aten.div, aten.mul, aten.sum]
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_mul_sum_2.run(buf3, buf6, buf7, buf4, buf8, buf9, buf10, buf11, 64, grid=grid(64), stream=stream0)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf8, buf9, buf10, buf11, reinterpret_tensor(buf0, (64, 4), (4, 1), 0), reinterpret_tensor(primals_2, (64, 4), (4, 1), 0), reinterpret_tensor(buf1, (64, 4), (4, 1), 0), reinterpret_tensor(primals_4, (64, 4), (4, 1), 0), buf2, buf4, buf5, buf7, )
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8])
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:43:47.466000 2116526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:43:47.472000 2116526 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/fa/cfarzisn6mqrn3mozzkhtbd5ga3jdmrrk6nm4dzgoyxk55kskg6t.py
