V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_forward']
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/uc/cuce4ogbr2vhfyt5ylevdniqhanyfh5ahnqjkhhntqccw5lidjiu.py
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [avg_pool, max_pool], Original ATen: [aten.avg_pool2d, aten.max_pool2d_with_indices]
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   avg_pool => avg_pool2d
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_pool => _low_memory_max_pool2d_with_offsets
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d : [num_users=1] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%primals_1, [4, 4], [4, 4]), kwargs = {})
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_low_memory_max_pool2d_with_offsets : [num_users=1] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%primals_1, [4, 4], [4, 4], [0, 0], [1, 1], False), kwargs = {})
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_max_pool2d_with_indices_0 = async_compile.triton('triton_poi_fused_avg_pool2d_max_pool2d_with_indices_0', '''
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_max_pool2d_with_indices_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_max_pool2d_with_indices_0(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x0), xmask, eviction_policy='evict_last')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 16*x0), xmask, eviction_policy='evict_last')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 16*x0), xmask, eviction_policy='evict_last')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 16*x0), xmask, eviction_policy='evict_last')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4 + 16*x0), xmask, eviction_policy='evict_last')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (5 + 16*x0), xmask, eviction_policy='evict_last')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (6 + 16*x0), xmask, eviction_policy='evict_last')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (7 + 16*x0), xmask, eviction_policy='evict_last')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (8 + 16*x0), xmask, eviction_policy='evict_last')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (9 + 16*x0), xmask, eviction_policy='evict_last')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (10 + 16*x0), xmask, eviction_policy='evict_last')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (11 + 16*x0), xmask, eviction_policy='evict_last')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (12 + 16*x0), xmask, eviction_policy='evict_last')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (13 + 16*x0), xmask, eviction_policy='evict_last')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (14 + 16*x0), xmask, eviction_policy='evict_last')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (15 + 16*x0), xmask, eviction_policy='evict_last')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 + tmp0
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp2
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp4
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 + tmp6
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 + tmp8
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp10
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 + tmp12
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 + tmp14
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp16
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp18
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp20
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 + tmp22
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 + tmp24
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 + tmp26
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 + tmp28
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = 0.0625
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 * tmp31
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = triton_helpers.maximum(tmp1, tmp0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = triton_helpers.maximum(tmp3, tmp33)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = triton_helpers.maximum(tmp5, tmp34)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = triton_helpers.maximum(tmp7, tmp35)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = triton_helpers.maximum(tmp9, tmp36)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = triton_helpers.maximum(tmp11, tmp37)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = triton_helpers.maximum(tmp13, tmp38)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = triton_helpers.maximum(tmp15, tmp39)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = triton_helpers.maximum(tmp17, tmp40)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = triton_helpers.maximum(tmp19, tmp41)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = triton_helpers.maximum(tmp21, tmp42)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = triton_helpers.maximum(tmp23, tmp43)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = triton_helpers.maximum(tmp25, tmp44)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = triton_helpers.maximum(tmp27, tmp45)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = triton_helpers.maximum(tmp29, tmp46)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp32, xmask)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp47, xmask)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sy/csyofn7geb6pvyzfyetgzdjzfuwmtdvo3664jkcndowrszwz5zwn.py
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_4, input_8, channel_att_sum, sigmoid], Original ATen: [aten.addmm, aten.add, aten.sigmoid]
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   channel_att_sum => add
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => add_tensor_2
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => add_tensor
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigmoid => sigmoid
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_2, %primals_5), kwargs = {})
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default, %primals_5), kwargs = {})
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor_2, %add_tensor), kwargs = {})
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add,), kwargs = {})
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_addmm_sigmoid_1 = async_compile.triton('triton_poi_fused_add_addmm_sigmoid_1', '''
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_addmm_sigmoid_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_addmm_sigmoid_1(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x2), xmask)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp1
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.sigmoid(tmp5)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp6, xmask)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sj/csjopyy74o6babxpwozr3ffbi35xexi2irmqsvifwmbgpbp3hzdm.py
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_compress], Original ATen: [aten.cat]
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_compress => cat
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze_2, %unsqueeze_3], 1), kwargs = {})
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 2)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 32
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (4*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 * tmp6
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (16 + x0 + 64*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (1 + 4*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp7, tmp10)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (32 + x0 + 64*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (2 + 4*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = triton_helpers.maximum(tmp11, tmp14)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (48 + x0 + 64*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr1 + (3 + 4*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp15, tmp18)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.full(tmp19.shape, 0.0, tmp19.dtype)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.where(tmp4, tmp19, tmp20)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp0 >= tmp3
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.full([1], 2, tl.int64)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp0 < tmp23
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (x0 + 64*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr1 + (4*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 * tmp26
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (16 + x0 + 64*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr1 + (1 + 4*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 * tmp29
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp27 + tmp30
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (32 + x0 + 64*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr1 + (2 + 4*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 * tmp33
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp31 + tmp34
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.load(in_ptr0 + (48 + x0 + 64*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr1 + (3 + 4*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 * tmp37
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp35 + tmp38
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = 4.0
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 / tmp40
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.full(tmp41.shape, 0.0, tmp41.dtype)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.where(tmp22, tmp41, tmp42)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.where(tmp4, tmp21, tmp43)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp44, xmask)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bp/cbppugoizgkp5ltvvom7237otn75s5urhrs2u7gizzddoac2g4va.py
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_1, scale_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.sigmoid]
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   scale_1 => sigmoid_1
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_2, mul_2, mul_3, sub
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_5), kwargs = {})
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_7), kwargs = {})
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_2, %unsqueeze_9), kwargs = {})
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_3, %unsqueeze_11), kwargs = {})
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_2,), kwargs = {})
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_sigmoid_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_sigmoid_3', '''
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_sigmoid_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_sigmoid_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (0))
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [XBLOCK])
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (0))
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [XBLOCK])
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr4 + (0))
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK])
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 - tmp2
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp3 * tmp12
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 * tmp15
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 + tmp18
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.sigmoid(tmp19)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp20, xmask)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ik/cikp2m7mstgkjn3n3sv57q7ada3uacoiflqgn5wm5w64ekujercx.py
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_out, x_out_1], Original ATen: [aten.mul]
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_out => mul
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_out_1 => mul_4
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=3] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_1, %expand), kwargs = {})
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %sigmoid_1), kwargs = {})
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_4 = async_compile.triton('triton_poi_fused_mul_4', '''
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_4(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 16
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x4), xmask, eviction_policy='evict_last')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10 = args
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (1, 2, 7, 7), (98, 49, 7, 1))
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (1, ), (1, ))
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (1, ), (1, ))
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (1, ), (1, ))
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (1, ), (1, ))
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 1, 1), torch.float32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 1, 1), torch.float32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [avg_pool, max_pool], Original ATen: [aten.avg_pool2d, aten.max_pool2d_with_indices]
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_max_pool2d_with_indices_0.run(primals_1, buf0, buf4, 16, grid=grid(16), stream=stream0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 0), (0, 1), torch.float32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3, input_4], Original ATen: [aten.addmm, aten.relu]
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf2, reinterpret_tensor(primals_4, (0, 4), (1, 1), 0), out=buf3)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 0), (0, 1), torch.float32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_6, input_7, input_8], Original ATen: [aten.addmm, aten.relu]
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf6, reinterpret_tensor(primals_4, (0, 4), (1, 1), 0), out=buf7)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = buf3; del buf3  # reuse
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4, input_8, channel_att_sum, sigmoid], Original ATen: [aten.addmm, aten.add, aten.sigmoid]
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_addmm_sigmoid_1.run(buf8, primals_5, buf7, 16, grid=grid(16), stream=stream0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 2, 4, 4), (32, 16, 4, 1), torch.float32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_compress], Original ATen: [aten.cat]
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(primals_1, buf8, buf9, 128, grid=grid(128), stream=stream0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf9, primals_6, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 1, 4, 4), (16, 16, 4, 1), torch.float32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1, scale_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.sigmoid]
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_sigmoid_3.run(buf10, primals_7, primals_8, primals_9, primals_10, buf11, 64, grid=grid(64), stream=stream0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_out, x_out_1], Original ATen: [aten.mul]
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_4.run(primals_1, buf8, buf11, buf12, 256, grid=grid(256), stream=stream0)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 0), (0, 1), torch.bool)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 0), (0, 1), torch.bool)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf12, reinterpret_tensor(buf8, (4, 4, 4, 4), (4, 1, 0, 0), 0), buf11, primals_1, primals_6, primals_7, primals_8, primals_9, reinterpret_tensor(buf0, (4, 4), (4, 1), 0), reinterpret_tensor(buf4, (4, 4), (4, 1), 0), buf8, buf9, buf10, buf11, primals_4, reinterpret_tensor(buf6, (0, 4), (1, 0), 0), buf13, reinterpret_tensor(buf2, (0, 4), (1, 0), 0), buf14, )
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((0, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((0, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 0), (1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((1, 2, 7, 7), (98, 49, 7, 1), device='cuda:0', dtype=torch.float32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10])
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:25:27.474000 2941026 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:25:27.482000 2941026 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/zc/czc4abysz6vtvvfmtebbz6ov4j32ih57ujjl2qyv3k4hnrj3ojmi.py
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_forward']
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/uc/cuce4ogbr2vhfyt5ylevdniqhanyfh5ahnqjkhhntqccw5lidjiu.py
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [avg_pool, max_pool], Original ATen: [aten.avg_pool2d, aten.max_pool2d_with_indices]
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   avg_pool => avg_pool2d
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_pool => _low_memory_max_pool2d_with_offsets
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d : [num_users=1] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%primals_1, [4, 4], [4, 4]), kwargs = {})
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_low_memory_max_pool2d_with_offsets : [num_users=1] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%primals_1, [4, 4], [4, 4], [0, 0], [1, 1], False), kwargs = {})
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_max_pool2d_with_indices_0 = async_compile.triton('triton_poi_fused_avg_pool2d_max_pool2d_with_indices_0', '''
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_max_pool2d_with_indices_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_max_pool2d_with_indices_0(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x0), xmask, eviction_policy='evict_last')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 16*x0), xmask, eviction_policy='evict_last')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 16*x0), xmask, eviction_policy='evict_last')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 16*x0), xmask, eviction_policy='evict_last')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (4 + 16*x0), xmask, eviction_policy='evict_last')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (5 + 16*x0), xmask, eviction_policy='evict_last')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (6 + 16*x0), xmask, eviction_policy='evict_last')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (7 + 16*x0), xmask, eviction_policy='evict_last')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (8 + 16*x0), xmask, eviction_policy='evict_last')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (9 + 16*x0), xmask, eviction_policy='evict_last')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (10 + 16*x0), xmask, eviction_policy='evict_last')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (11 + 16*x0), xmask, eviction_policy='evict_last')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (12 + 16*x0), xmask, eviction_policy='evict_last')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (13 + 16*x0), xmask, eviction_policy='evict_last')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (14 + 16*x0), xmask, eviction_policy='evict_last')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (15 + 16*x0), xmask, eviction_policy='evict_last')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 + tmp0
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp2
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp4
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 + tmp6
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 + tmp8
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp10
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 + tmp12
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 + tmp14
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp16
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp18
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp20
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 + tmp22
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 + tmp24
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 + tmp26
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 + tmp28
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = 0.0625
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 * tmp31
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = triton_helpers.maximum(tmp1, tmp0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = triton_helpers.maximum(tmp3, tmp33)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = triton_helpers.maximum(tmp5, tmp34)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = triton_helpers.maximum(tmp7, tmp35)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = triton_helpers.maximum(tmp9, tmp36)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = triton_helpers.maximum(tmp11, tmp37)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = triton_helpers.maximum(tmp13, tmp38)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = triton_helpers.maximum(tmp15, tmp39)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = triton_helpers.maximum(tmp17, tmp40)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = triton_helpers.maximum(tmp19, tmp41)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = triton_helpers.maximum(tmp21, tmp42)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = triton_helpers.maximum(tmp23, tmp43)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = triton_helpers.maximum(tmp25, tmp44)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = triton_helpers.maximum(tmp27, tmp45)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = triton_helpers.maximum(tmp29, tmp46)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp32, xmask)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp47, xmask)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sy/csyofn7geb6pvyzfyetgzdjzfuwmtdvo3664jkcndowrszwz5zwn.py
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_4, input_8, channel_att_sum, sigmoid], Original ATen: [aten.addmm, aten.add, aten.sigmoid]
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   channel_att_sum => add
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => add_tensor_2
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => add_tensor
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sigmoid => sigmoid
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_2, %primals_5), kwargs = {})
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default, %primals_5), kwargs = {})
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor_2, %add_tensor), kwargs = {})
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add,), kwargs = {})
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_addmm_sigmoid_1 = async_compile.triton('triton_poi_fused_add_addmm_sigmoid_1', '''
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_addmm_sigmoid_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_addmm_sigmoid_1(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x2), xmask)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp1
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.sigmoid(tmp5)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp6, xmask)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sj/csjopyy74o6babxpwozr3ffbi35xexi2irmqsvifwmbgpbp3hzdm.py
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_compress], Original ATen: [aten.cat]
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_compress => cat
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze_2, %unsqueeze_3], 1), kwargs = {})
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 2)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 32
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 64*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (4*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 * tmp6
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (16 + x0 + 64*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (1 + 4*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp7, tmp10)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (32 + x0 + 64*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (2 + 4*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = triton_helpers.maximum(tmp11, tmp14)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (48 + x0 + 64*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr1 + (3 + 4*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp15, tmp18)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.full(tmp19.shape, 0.0, tmp19.dtype)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.where(tmp4, tmp19, tmp20)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp0 >= tmp3
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.full([1], 2, tl.int64)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp0 < tmp23
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (x0 + 64*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr1 + (4*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 * tmp26
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (16 + x0 + 64*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr1 + (1 + 4*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 * tmp29
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp27 + tmp30
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (32 + x0 + 64*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr1 + (2 + 4*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 * tmp33
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp31 + tmp34
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.load(in_ptr0 + (48 + x0 + 64*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr1 + (3 + 4*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 * tmp37
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp35 + tmp38
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = 4.0
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 / tmp40
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.full(tmp41.shape, 0.0, tmp41.dtype)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.where(tmp22, tmp41, tmp42)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.where(tmp4, tmp21, tmp43)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp44, xmask)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/bp/cbppugoizgkp5ltvvom7237otn75s5urhrs2u7gizzddoac2g4va.py
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_1, scale_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.sigmoid]
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   scale_1 => sigmoid_1
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_2, mul_2, mul_3, sub
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_5), kwargs = {})
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_7), kwargs = {})
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_2, %unsqueeze_9), kwargs = {})
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_3, %unsqueeze_11), kwargs = {})
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_2,), kwargs = {})
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_sigmoid_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_sigmoid_3', '''
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_sigmoid_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_sigmoid_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (0))
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [XBLOCK])
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (0))
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [XBLOCK])
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr4 + (0))
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK])
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 - tmp2
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp3 * tmp12
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 * tmp15
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 + tmp18
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.sigmoid(tmp19)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp20, xmask)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ik/cikp2m7mstgkjn3n3sv57q7ada3uacoiflqgn5wm5w64ekujercx.py
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_out, x_out_1], Original ATen: [aten.mul]
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_out => mul
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_out_1 => mul_4
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=3] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_1, %expand), kwargs = {})
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %sigmoid_1), kwargs = {})
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_4 = async_compile.triton('triton_poi_fused_mul_4', '''
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_4(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 16
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x4), xmask, eviction_policy='evict_last')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10 = args
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (1, 2, 7, 7), (98, 49, 7, 1))
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (1, ), (1, ))
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (1, ), (1, ))
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (1, ), (1, ))
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (1, ), (1, ))
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 1, 1), torch.float32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 1, 1), torch.float32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [avg_pool, max_pool], Original ATen: [aten.avg_pool2d, aten.max_pool2d_with_indices]
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_max_pool2d_with_indices_0.run(primals_1, buf0, buf4, 16, grid=grid(16), stream=stream0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 0), (0, 1), torch.float32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3, input_4], Original ATen: [aten.addmm, aten.relu]
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf2, reinterpret_tensor(primals_4, (0, 4), (1, 1), 0), out=buf3)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 0), (0, 1), torch.float32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_6, input_7, input_8], Original ATen: [aten.addmm, aten.relu]
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf6, reinterpret_tensor(primals_4, (0, 4), (1, 1), 0), out=buf7)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = buf3; del buf3  # reuse
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4, input_8, channel_att_sum, sigmoid], Original ATen: [aten.addmm, aten.add, aten.sigmoid]
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_addmm_sigmoid_1.run(buf8, primals_5, buf7, 16, grid=grid(16), stream=stream0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 2, 4, 4), (32, 16, 4, 1), torch.float32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_compress], Original ATen: [aten.cat]
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(primals_1, buf8, buf9, 128, grid=grid(128), stream=stream0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf9, primals_6, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 1, 4, 4), (16, 16, 4, 1), torch.float32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1, scale_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.sigmoid]
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_sigmoid_3.run(buf10, primals_7, primals_8, primals_9, primals_10, buf11, 64, grid=grid(64), stream=stream0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_out, x_out_1], Original ATen: [aten.mul]
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_4.run(primals_1, buf8, buf11, buf12, 256, grid=grid(256), stream=stream0)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 0), (0, 1), torch.bool)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 0), (0, 1), torch.bool)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf12, reinterpret_tensor(buf8, (4, 4, 4, 4), (4, 1, 0, 0), 0), buf11, primals_1, primals_6, primals_7, primals_8, primals_9, reinterpret_tensor(buf0, (4, 4), (4, 1), 0), reinterpret_tensor(buf4, (4, 4), (4, 1), 0), buf8, buf9, buf10, buf11, primals_4, reinterpret_tensor(buf6, (0, 4), (1, 0), 0), buf13, reinterpret_tensor(buf2, (0, 4), (1, 0), 0), buf14, )
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((0, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((0, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 0), (1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((1, 2, 7, 7), (98, 49, 7, 1), device='cuda:0', dtype=torch.float32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10])
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 21:14:18.497000 382836 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:14:18.504000 382836 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/2j/c2jc2nut3g6t3crp6rnsj6v3huxuefzy44mdoiielfqfo4mzipco.py
