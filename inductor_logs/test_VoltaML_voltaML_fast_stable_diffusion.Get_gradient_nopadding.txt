V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_inference']
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.cat]
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => cat
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%sqrt, %sqrt_1, %sqrt_2, %sqrt_3], 1), kwargs = {})
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_0 = async_compile.triton('triton_poi_fused_cat_0', '''
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 * tmp5
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0 + 16*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 * tmp7
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 + tmp8
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1e-06
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full(tmp12.shape, 0.0, tmp12.dtype)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp4, tmp12, tmp13)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 >= tmp3
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 2, tl.int64)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp0 < tmp16
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 & tmp17
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr2 + (x0 + 16*x2), tmp18 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp19
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr3 + (x0 + 16*x2), tmp18 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 * tmp21
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 + tmp22
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 1e-06
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = libdevice.sqrt(tmp25)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.full(tmp26.shape, 0.0, tmp26.dtype)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp18, tmp26, tmp27)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp0 >= tmp16
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.full([1], 3, tl.int64)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp0 < tmp30
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp29 & tmp31
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr4 + (x0 + 16*x2), tmp32 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 * tmp33
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr5 + (x0 + 16*x2), tmp32 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 * tmp35
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp34 + tmp36
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = 1e-06
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 + tmp38
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = libdevice.sqrt(tmp39)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full(tmp40.shape, 0.0, tmp40.dtype)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.where(tmp32, tmp40, tmp41)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp0 >= tmp30
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.full([1], 4, tl.int64)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp0 < tmp44
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.load(in_ptr6 + (x0 + 16*x2), tmp43 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 * tmp46
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.load(in_ptr7 + (x0 + 16*x2), tmp43 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp48 * tmp48
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp47 + tmp49
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = 1e-06
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp50 + tmp51
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = libdevice.sqrt(tmp52)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.full(tmp53.shape, 0.0, tmp53.dtype)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.where(tmp43, tmp53, tmp54)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.where(tmp32, tmp42, tmp55)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.where(tmp18, tmp28, tmp56)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.where(tmp4, tmp14, tmp57)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp58, xmask)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (1, 1, 3, 3), (9, 9, 3, 1))
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (1, 1, 3, 3), (9, 9, 3, 1))
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_i_v], Original ATen: [aten.convolution]
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(reinterpret_tensor(arg0_1, (4, 1, 4, 4), (64, 0, 4, 1), 0), arg1_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_i_h], Original ATen: [aten.convolution]
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(reinterpret_tensor(arg0_1, (4, 1, 4, 4), (64, 0, 4, 1), 0), arg2_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_i_v_1], Original ATen: [aten.convolution]
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(reinterpret_tensor(arg0_1, (4, 1, 4, 4), (64, 0, 4, 1), 16), arg1_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_i_h_1], Original ATen: [aten.convolution]
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(reinterpret_tensor(arg0_1, (4, 1, 4, 4), (64, 0, 4, 1), 16), arg2_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_i_v_2], Original ATen: [aten.convolution]
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(reinterpret_tensor(arg0_1, (4, 1, 4, 4), (64, 0, 4, 1), 32), arg1_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_i_h_2], Original ATen: [aten.convolution]
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(reinterpret_tensor(arg0_1, (4, 1, 4, 4), (64, 0, 4, 1), 32), arg2_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_i_v_3], Original ATen: [aten.convolution]
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(reinterpret_tensor(arg0_1, (4, 1, 4, 4), (64, 0, 4, 1), 48), arg1_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_i_h_3], Original ATen: [aten.convolution]
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(reinterpret_tensor(arg0_1, (4, 1, 4, 4), (64, 0, 4, 1), 48), arg2_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.cat]
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_0.run(buf0, buf1, buf2, buf3, buf4, buf5, buf6, buf7, buf8, 256, grid=grid(256), stream=stream0)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf8, )
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:24:53.750000 3963009 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:24:53.753000 3963009 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ww/cwwg6fxda5n5235dtbpuwi6wszs6kemoqrvprqlye2xmwilicuqb.py
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_inference']
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.cat]
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => cat
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%sqrt, %sqrt_1, %sqrt_2, %sqrt_3], 1), kwargs = {})
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_0 = async_compile.triton('triton_poi_fused_cat_0', '''
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 * tmp5
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0 + 16*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 * tmp7
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 + tmp8
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1e-06
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full(tmp12.shape, 0.0, tmp12.dtype)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp4, tmp12, tmp13)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 >= tmp3
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 2, tl.int64)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp0 < tmp16
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 & tmp17
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr2 + (x0 + 16*x2), tmp18 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp19
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr3 + (x0 + 16*x2), tmp18 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 * tmp21
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 + tmp22
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 1e-06
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = libdevice.sqrt(tmp25)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.full(tmp26.shape, 0.0, tmp26.dtype)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp18, tmp26, tmp27)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp0 >= tmp16
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.full([1], 3, tl.int64)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp0 < tmp30
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp29 & tmp31
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr4 + (x0 + 16*x2), tmp32 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 * tmp33
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr5 + (x0 + 16*x2), tmp32 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 * tmp35
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp34 + tmp36
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = 1e-06
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 + tmp38
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = libdevice.sqrt(tmp39)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full(tmp40.shape, 0.0, tmp40.dtype)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.where(tmp32, tmp40, tmp41)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp0 >= tmp30
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.full([1], 4, tl.int64)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp0 < tmp44
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.load(in_ptr6 + (x0 + 16*x2), tmp43 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 * tmp46
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.load(in_ptr7 + (x0 + 16*x2), tmp43 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp48 * tmp48
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp47 + tmp49
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = 1e-06
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp50 + tmp51
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = libdevice.sqrt(tmp52)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.full(tmp53.shape, 0.0, tmp53.dtype)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.where(tmp43, tmp53, tmp54)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.where(tmp32, tmp42, tmp55)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.where(tmp18, tmp28, tmp56)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.where(tmp4, tmp14, tmp57)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp58, xmask)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (1, 1, 3, 3), (9, 9, 3, 1))
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (1, 1, 3, 3), (9, 9, 3, 1))
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_i_v], Original ATen: [aten.convolution]
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(reinterpret_tensor(arg0_1, (4, 1, 4, 4), (64, 0, 4, 1), 0), arg1_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_i_h], Original ATen: [aten.convolution]
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(reinterpret_tensor(arg0_1, (4, 1, 4, 4), (64, 0, 4, 1), 0), arg2_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_i_v_1], Original ATen: [aten.convolution]
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(reinterpret_tensor(arg0_1, (4, 1, 4, 4), (64, 0, 4, 1), 16), arg1_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_i_h_1], Original ATen: [aten.convolution]
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(reinterpret_tensor(arg0_1, (4, 1, 4, 4), (64, 0, 4, 1), 16), arg2_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_i_v_2], Original ATen: [aten.convolution]
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(reinterpret_tensor(arg0_1, (4, 1, 4, 4), (64, 0, 4, 1), 32), arg1_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_i_h_2], Original ATen: [aten.convolution]
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(reinterpret_tensor(arg0_1, (4, 1, 4, 4), (64, 0, 4, 1), 32), arg2_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_i_v_3], Original ATen: [aten.convolution]
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(reinterpret_tensor(arg0_1, (4, 1, 4, 4), (64, 0, 4, 1), 48), arg1_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_i_h_3], Original ATen: [aten.convolution]
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(reinterpret_tensor(arg0_1, (4, 1, 4, 4), (64, 0, 4, 1), 48), arg2_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.cat]
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_0.run(buf0, buf1, buf2, buf3, buf4, buf5, buf6, buf7, buf8, 256, grid=grid(256), stream=stream0)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf8, )
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:13:45.725000 1219695 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:13:45.728000 1219695 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/zn/cznn4ot2an2zavwyfwuknaquqobuygzcszq6uuid7drm57o2ggh2.py
