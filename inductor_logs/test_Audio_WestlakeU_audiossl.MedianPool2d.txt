V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['6_inference']
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qz/cqzypv6szuf3lsrrzcermmvmopzhkf3inyuyzhfe3l5jy2ihag44.py
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.cat]
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => cat
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%slice_8, %_unsafe_index_1], -1), kwargs = {})
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_0 = async_compile.triton('triton_poi_fused_cat_0', '''
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 640
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 10)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 10) % 4)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 40
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 4 + ((-1)*tl_math.abs((-5) + tl_math.abs(1 + (x0))))
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.full([1], 0, tl.int64)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 >= tmp6
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1], 4, tl.int64)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 < tmp8
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 & tmp9
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 & tmp4
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (16 + ((-1)*tl_math.abs((-5) + tl_math.abs(1 + (x0)))) + ((-4)*tl_math.abs((-3) + x1)) + 16*x2), tmp11 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full(tmp12.shape, 0.0, tmp12.dtype)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp4, tmp12, tmp13)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 >= tmp3
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 10, tl.int64)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp0 < tmp16
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 4 + ((-1)*tl_math.abs((-5) + tl_math.abs((-4) + x0)))
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.full([1], 0, tl.int64)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 >= tmp19
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 4, tl.int64)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp18 < tmp21
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 & tmp22
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 & tmp15
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (16 + ((-1)*tl_math.abs((-5) + tl_math.abs((-4) + x0))) + ((-4)*tl_math.abs((-3) + x1)) + 16*x2), tmp24 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full(tmp25.shape, 0.0, tmp25.dtype)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.where(tmp15, tmp25, tmp26)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp4, tmp14, tmp27)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp28, xmask)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [index], Original ATen: [aten.sort]
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   index => sort
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sort : [num_users=1] = call_function[target=torch.ops.aten.sort.default](args = (%unfold,), kwargs = {})
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_sort_1 = async_compile.triton('triton_per_fused_sort_1', '''
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512, 'r': 4},
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i16', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_sort_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_sort_1(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 512
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 3
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 4
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 8)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 8
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r2 + x0 + 10*x1), rmask & xmask, other=0.0)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = r2
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1.to(tl.int16)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5, tmp6, = triton_helpers.sort_with_index(tmp3, tmp4, rnumel, 1, stable=False, descending=False)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r2 + 3*x3), tmp6, rmask & xmask)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5l/c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [values], Original ATen: [aten.gather]
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   values => gather
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gather : [num_users=1] = call_function[target=torch.ops.aten.gather.default](args = (%unfold, -1, %slice_17), kwargs = {})
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_gather_2 = async_compile.triton('triton_poi_fused_gather_2', '''
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i16', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_gather_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_gather_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 512
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 8)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 8
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (1 + 3*x2), xmask, eviction_policy='evict_last')
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.int64)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.full([XBLOCK], 3, tl.int32)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 < 0
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp4, tmp3, tmp1)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp5) & (tmp5 < 3)) | ~(xmask), "index out of bounds: 0 <= tmp5 < 3")
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (tmp5 + x0 + 10*x1), xmask)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp7, xmask)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 10), (160, 40, 10, 1), torch.float32)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.cat]
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_0.run(arg0_1, buf0, 640, grid=grid(640), stream=stream0)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4, 8, 3), (384, 96, 24, 3, 1), torch.int16)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [index], Original ATen: [aten.sort]
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_sort_1.run(buf0, buf2, 512, 3, grid=grid(512), stream=stream0)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4, 8, 1), (128, 32, 8, 1, 1), torch.float32)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [values], Original ATen: [aten.gather]
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_gather_2.run(buf2, buf0, buf3, 512, grid=grid(512), stream=stream0)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf3, (4, 4, 4, 8), (128, 32, 8, 1), 0), )
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:31:31.209000 3636971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:31:31.211000 3636971 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/co/ccojsab6t7spzmcdt3sfez24nhhrsp3wq3o3e6iihoksl3b753lt.py
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['6_inference']
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qz/cqzypv6szuf3lsrrzcermmvmopzhkf3inyuyzhfe3l5jy2ihag44.py
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.cat]
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => cat
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%slice_8, %_unsafe_index_1], -1), kwargs = {})
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_0 = async_compile.triton('triton_poi_fused_cat_0', '''
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 640
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 10)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 10) % 4)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 40
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 4 + ((-1)*tl_math.abs((-5) + tl_math.abs(1 + (x0))))
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.full([1], 0, tl.int64)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 >= tmp6
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1], 4, tl.int64)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 < tmp8
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 & tmp9
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 & tmp4
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (16 + ((-1)*tl_math.abs((-5) + tl_math.abs(1 + (x0)))) + ((-4)*tl_math.abs((-3) + x1)) + 16*x2), tmp11 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full(tmp12.shape, 0.0, tmp12.dtype)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp4, tmp12, tmp13)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 >= tmp3
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 10, tl.int64)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp0 < tmp16
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 4 + ((-1)*tl_math.abs((-5) + tl_math.abs((-4) + x0)))
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.full([1], 0, tl.int64)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 >= tmp19
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 4, tl.int64)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp18 < tmp21
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 & tmp22
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 & tmp15
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (16 + ((-1)*tl_math.abs((-5) + tl_math.abs((-4) + x0))) + ((-4)*tl_math.abs((-3) + x1)) + 16*x2), tmp24 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full(tmp25.shape, 0.0, tmp25.dtype)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.where(tmp15, tmp25, tmp26)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp4, tmp14, tmp27)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp28, xmask)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [index], Original ATen: [aten.sort]
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   index => sort
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sort : [num_users=1] = call_function[target=torch.ops.aten.sort.default](args = (%unfold,), kwargs = {})
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_sort_1 = async_compile.triton('triton_per_fused_sort_1', '''
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512, 'r': 4},
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i16', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_sort_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_sort_1(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 512
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 3
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 4
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 8)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 8
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r2 + x0 + 10*x1), rmask & xmask, other=0.0)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = r2
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1.to(tl.int16)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5, tmp6, = triton_helpers.sort_with_index(tmp3, tmp4, rnumel, 1, stable=False, descending=False)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r2 + 3*x3), tmp6, rmask & xmask)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5l/c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [values], Original ATen: [aten.gather]
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   values => gather
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gather : [num_users=1] = call_function[target=torch.ops.aten.gather.default](args = (%unfold, -1, %slice_17), kwargs = {})
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_gather_2 = async_compile.triton('triton_poi_fused_gather_2', '''
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i16', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_gather_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_gather_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 512
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 8)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 8
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (1 + 3*x2), xmask, eviction_policy='evict_last')
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.int64)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.full([XBLOCK], 3, tl.int32)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 < 0
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp4, tmp3, tmp1)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp5) & (tmp5 < 3)) | ~(xmask), "index out of bounds: 0 <= tmp5 < 3")
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (tmp5 + x0 + 10*x1), xmask)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp7, xmask)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 10), (160, 40, 10, 1), torch.float32)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.cat]
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_0.run(arg0_1, buf0, 640, grid=grid(640), stream=stream0)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4, 8, 3), (384, 96, 24, 3, 1), torch.int16)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [index], Original ATen: [aten.sort]
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_sort_1.run(buf0, buf2, 512, 3, grid=grid(512), stream=stream0)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4, 8, 1), (128, 32, 8, 1, 1), torch.float32)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [values], Original ATen: [aten.gather]
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_gather_2.run(buf2, buf0, buf3, 512, grid=grid(512), stream=stream0)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf3, (4, 4, 4, 8), (128, 32, 8, 1), 0), )
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:21:48.607000 2253495 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:21:48.611000 2253495 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/bh/cbhuijfht42gxemtterznkunlnftsr5w47mvrbss4v4hbqqf5ke7.py
