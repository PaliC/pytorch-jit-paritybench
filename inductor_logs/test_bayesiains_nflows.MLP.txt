V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] Output code: 
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # AOT ID: ['5_inference']
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import torch
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import math
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import random
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import os
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import tempfile
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from math import inf, nan
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch import device, empty_strided
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] aten = torch.ops.aten
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile = AsyncCompile()
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] cpp_fused_lift_fresh_prod_0 = async_compile.cpp_pybinding(['int64_t*'], '''
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #include "/tmp/torchinductor_sahanp/2r/c2rnilspx43ivnzu4uieul65kx65dfhfbptbh5og4wk6rqebuxoo.h"
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] extern "C"  void kernel(int64_t* out_ptr0)
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] {
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     {
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         {
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             int64_t tmp_acc0 = 1;
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             at::vec::VectorizedN<int64_t,2> tmp_acc0_vec = at::vec::VectorizedN<int64_t,2>(1);
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(2L); x0+=static_cast<int64_t>(16L))
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             {
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                 {
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                     if(C10_LIKELY(x0 >= static_cast<int64_t>(0L) && x0 < static_cast<int64_t>(2L)))
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                     {
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         for (int64_t x0_tail = static_cast<int64_t>(0L);x0_tail < static_cast<int64_t>(2L); x0_tail++)
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         {
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             auto tmp0 = x0_tail;
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             auto tmp1 = c10::convert<int64_t>(tmp0);
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             auto tmp2 = static_cast<int64_t>(1);
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             auto tmp3 = tmp1 < tmp2;
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             auto tmp4 = static_cast<int64_t>(4);
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             auto tmp5 = tmp3 ? tmp4 : tmp4;
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             tmp_acc0 = tmp_acc0 * tmp5;
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         }
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                     }
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                 }
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             }
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             tmp_acc0 = tmp_acc0 * at::vec::vec_reduce_all<int64_t, 2>([](at::vec::Vectorized<int64_t>& x, at::vec::Vectorized<int64_t>& y) { return x * y; }, tmp_acc0_vec);
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             out_ptr0[static_cast<int64_t>(0L)] = static_cast<int64_t>(tmp_acc0);
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         }
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     }
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] }
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''')
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile.wait(globals())
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] del async_compile
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def call(args):
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     buf0 = empty_strided_cpu((), (), torch.int64)
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     cpp_fused_lift_fresh_prod_0(buf0)
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return (buf0, )
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     fn = lambda: call([])
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] if __name__ == "__main__":
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:06:56.153000 1121968 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:06:56.154000 1121968 site-packages/torch/_inductor/graph.py:2053] [0/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/h3/ch3eojfoqqcjaxtkn5dteuntffqlb7yobpqqitp57fv2c4byng43.py
I0204 15:06:57.520000 1121968 site-packages/torch/_inductor/graph.py:2087] [0/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/h3/ch3eojfoqqcjaxtkn5dteuntffqlb7yobpqqitp57fv2c4byng43.py
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] Output code: 
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] # AOT ID: ['6_forward']
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] import torch
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] import math
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] import random
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] import os
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] import tempfile
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] from math import inf, nan
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] from torch import device, empty_strided
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] import triton
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] import triton.language as tl
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     grid,
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     split_scan_grid,
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     grid_combo_kernels,
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     start_graph,
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     end_graph,
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     cooperative_reduction_grid,
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] )
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] 
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] aten = torch.ops.aten
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] async_compile = AsyncCompile()
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] 
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] 
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qh/cqhfhuqz2sib3ublo5xr75i74altlle67ijgifr4plz2uucgm6nd.py
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] # Topologically Sorted Source Nodes: [outputs, outputs_1], Original ATen: [aten.addmm, aten.relu]
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] # Source node to ATen node mapping:
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] #   outputs => add_tensor_1
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] #   outputs_1 => relu
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] # Graph fragment:
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] #   %add_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_1, %primals_3), kwargs = {})
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_tensor_1,), kwargs = {})
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] triton_poi_fused_addmm_relu_0 = async_compile.triton('triton_poi_fused_addmm_relu_0', '''
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] import triton
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] import triton.language as tl
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] 
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] 
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     filename=__file__,
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_relu_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     min_elem_per_thread=0
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] )
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] @triton.jit
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] def triton_poi_fused_addmm_relu_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     xnumel = 16
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     xmask = xindex < xnumel
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     x2 = xindex
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     x0 = (xindex % 4)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] ''', device_str='cuda')
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] 
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] 
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] async_compile.wait(globals())
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] del async_compile
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] 
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] def call(args):
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7 = args
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     args.clear()
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     assert_size_stride(primals_1, (4, 16), (16, 1))
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     assert_size_stride(primals_2, (4, 16), (16, 1))
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     assert_size_stride(primals_6, (16, 4), (4, 1))
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     assert_size_stride(primals_7, (16, ), (1, ))
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         # Topologically Sorted Source Nodes: [outputs], Original ATen: [aten.addmm]
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         extern_kernels.mm(primals_1, reinterpret_tensor(primals_2, (16, 4), (1, 16), 0), out=buf0)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         del primals_2
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         # Topologically Sorted Source Nodes: [outputs, outputs_1], Original ATen: [aten.addmm, aten.relu]
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         triton_poi_fused_addmm_relu_0.run(buf1, primals_3, 16, grid=grid(16), stream=stream0)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         del primals_3
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         buf2 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         # Topologically Sorted Source Nodes: [outputs_2], Original ATen: [aten.addmm]
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         extern_kernels.mm(buf1, reinterpret_tensor(primals_4, (4, 4), (1, 4), 0), out=buf2)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         # Topologically Sorted Source Nodes: [outputs_2, outputs_3], Original ATen: [aten.addmm, aten.relu]
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         triton_poi_fused_addmm_relu_0.run(buf3, primals_5, 16, grid=grid(16), stream=stream0)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         del primals_5
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         buf4 = empty_strided_cuda((4, 16), (16, 1), torch.float32)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         # Topologically Sorted Source Nodes: [outputs_4], Original ATen: [aten.addmm]
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         extern_kernels.addmm(primals_7, buf3, reinterpret_tensor(primals_6, (4, 16), (1, 4), 0), alpha=1, beta=1, out=buf4)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]         del primals_7
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     return (reinterpret_tensor(buf4, (4, 4, 4), (16, 4, 1), 0), primals_1, buf1, buf3, primals_6, primals_4, )
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] 
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] 
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     primals_1 = rand_strided((4, 16), (16, 1), device='cuda:0', dtype=torch.float32)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     primals_2 = rand_strided((4, 16), (16, 1), device='cuda:0', dtype=torch.float32)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     primals_6 = rand_strided((16, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     primals_7 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7])
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] 
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] 
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] if __name__ == "__main__":
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:06:57.688000 1121968 site-packages/torch/_inductor/graph.py:2045] [1/0] [__output_code] 
V0204 15:06:57.690000 1121968 site-packages/torch/_inductor/graph.py:2053] [1/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/fo/cfo77btdlst2tdi3xiob4mauridtzfddt7buowc4iiom36g2pli3.py
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] Output code: 
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # AOT ID: ['5_inference']
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import torch
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import math
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import random
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import os
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import tempfile
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from math import inf, nan
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch import device, empty_strided
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] aten = torch.ops.aten
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile = AsyncCompile()
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] cpp_fused_lift_fresh_prod_0 = async_compile.cpp_pybinding(['int64_t*'], '''
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #include "inductor_cache/2r/c2rnilspx43ivnzu4uieul65kx65dfhfbptbh5og4wk6rqebuxoo.h"
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] extern "C"  void kernel(int64_t* out_ptr0)
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] {
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     {
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         {
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             int64_t tmp_acc0 = 1;
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(2L); x0+=static_cast<int64_t>(1L))
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             {
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                 {
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                     {
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         auto tmp0 = x0;
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         auto tmp1 = c10::convert<int64_t>(tmp0);
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         auto tmp2 = static_cast<int64_t>(1);
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         auto tmp3 = tmp1 < tmp2;
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         auto tmp4 = static_cast<int64_t>(4);
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         auto tmp5 = tmp3 ? tmp4 : tmp4;
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         tmp_acc0 = tmp_acc0 * tmp5;
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                     }
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                 }
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             }
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             out_ptr0[static_cast<int64_t>(0L)] = tmp_acc0;
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         }
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     }
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] }
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''')
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile.wait(globals())
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] del async_compile
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def call(args):
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     buf0 = empty_strided_cpu((), (), torch.int64)
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     cpp_fused_lift_fresh_prod_0(buf0)
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return (buf0, )
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     fn = lambda: call([])
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] if __name__ == "__main__":
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:56:14.086000 2436317 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 19:56:14.087000 2436317 site-packages/torch/_inductor/graph.py:2053] [0/0_1] [__output_code] Output code written to: inductor_cache/s4/cs4ihxodlk4dhbwyio6lcpthw65qsiuzxo4oc5uqv5nbopx7kgt3.py
