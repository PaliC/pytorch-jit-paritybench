V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2z/c2zdebzlpnd7awx2bv4bx3ikwhjap5lzbh4xxpoa4vxpfsuttc6i.py
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [xx_channel], Original ATen: [aten.view]
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   xx_channel => full_default
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, 4, 1], 1.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_view_0 = async_compile.triton('triton_poi_fused_view_0', '''
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_view_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_view_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 1.0
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6s/c6saisjsdcwhtgmxxypervxzno36eydyny53lgxysjicppxv3aw6.py
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [arange], Original ATen: [aten.arange]
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   arange => add, convert_element_type, iota, mul
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%iota, 1), kwargs = {})
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, 0), kwargs = {})
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add, torch.float32), kwargs = {})
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_arange_1 = async_compile.triton('triton_poi_fused_arange_1', '''
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_arange_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_arange_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp1, xmask)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vo/cvogprkgyvetrpwa7rwfkbokt2klgwvpzd2zhxdnpkrnxdzr4ue5.py
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ret_1], Original ATen: [aten.cat]
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ret_1 => cat_1
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_1 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%cat, %sqrt], 1), kwargs = {})
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 128, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 112
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = ((yindex // 4) % 7)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y2 = yindex // 28
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex // 4
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = y1
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1, 1], 0, tl.int64)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 6, tl.int64)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(y1, [XBLOCK, YBLOCK])
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.full([1, 1], 0, tl.int64)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 >= tmp6
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1, 1], 4, tl.int64)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 < tmp8
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp4
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (y0 + 4*x3 + 16*(y1) + 64*y2), tmp10 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp5 >= tmp8
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full([1, 1], 5, tl.int64)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp5 < tmp13
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 & tmp14
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 & tmp4
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr1 + (x3 + 4*y0), tmp16 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.3333333333333333
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 2.0
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = 1.0
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 - tmp22
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.full(tmp23.shape, 0.0, tmp23.dtype)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.where(tmp16, tmp23, tmp24)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp5 >= tmp13
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.full([1, 1], 6, tl.int64)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp5 < tmp27
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp26 & tmp4
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr2 + (x3 + 4*y0), tmp29 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = 0.3333333333333333
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 * tmp31
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = 2.0
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 * tmp33
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = 1.0
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 - tmp35
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.full(tmp36.shape, 0.0, tmp36.dtype)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp29, tmp36, tmp37)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.where(tmp15, tmp25, tmp38)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.where(tmp9, tmp11, tmp39)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full(tmp40.shape, 0.0, tmp40.dtype)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.where(tmp4, tmp40, tmp41)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp0 >= tmp3
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.full([1, 1], 7, tl.int64)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp0 < tmp44
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.load(in_ptr1 + (x3 + 4*y0), tmp43 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = 0.3333333333333333
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 * tmp47
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = 2.0
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp48 * tmp49
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = 1.0
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp50 - tmp51
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = 0.5
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp52 - tmp53
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp54 * tmp54
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.load(in_ptr2 + (x3 + 4*y0), tmp43 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp56 * tmp47
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp57 * tmp49
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp58 - tmp51
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp59 - tmp53
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp60 * tmp60
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp55 + tmp61
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = libdevice.sqrt(tmp62)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.full(tmp63.shape, 0.0, tmp63.dtype)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.where(tmp43, tmp63, tmp64)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.where(tmp4, tmp42, tmp65)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x3 + 16*y4), tmp66, xmask & ymask)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hv/chvqzov6rrdilj4pa4ijcefqvp5lldzq4rag3ez2ioxdgg3elwy7.py
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ret_2], Original ATen: [aten.convolution]
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ret_2 => convolution
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%cat_1, %primals_2, %primals_3, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_3 = async_compile.triton('triton_poi_fused_convolution_3', '''
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_3(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3 = args
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 7, 4, 4), (112, 16, 4, 1))
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((1, 4, 1), (4, 1, 1), torch.float32)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xx_channel], Original ATen: [aten.view]
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_view_0.run(buf0, 4, grid=grid(4), stream=stream0)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [arange], Original ATen: [aten.arange]
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_arange_1.run(buf1, 4, grid=grid(4), stream=stream0)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((1, 4, 4), (16, 4, 1), torch.float32)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xx_channel], Original ATen: [aten.view, aten.bmm]
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(buf0, reinterpret_tensor(buf1, (1, 1, 4), (0, 0, 1), 0), out=buf2)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = reinterpret_tensor(buf0, (1, 1, 4), (4, 4, 1), 0); del buf0  # reuse
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [yy_channel], Original ATen: [aten.view]
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_view_0.run(buf3, 4, grid=grid(4), stream=stream0)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((1, 4, 4), (16, 4, 1), torch.float32)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [yy_channel], Original ATen: [aten.view, aten.bmm]
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf1, (1, 4, 1), (0, 1, 0), 0), buf3, out=buf4)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 7, 4, 4), (112, 16, 4, 1), torch.float32)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_1], Original ATen: [aten.cat]
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(primals_1, buf2, buf4, buf5, 112, 4, grid=grid(112, 4), stream=stream0)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_2], Original ATen: [aten.convolution]
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf5, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf6; del buf6  # reuse
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_2], Original ATen: [aten.convolution]
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_3.run(buf7, primals_3, 16, grid=grid(16), stream=stream0)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, primals_2, buf5, )
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 7, 4, 4), (112, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3])
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:16:50.799000 3647421 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:50.805000 3647421 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/4g/c4gymg6kvc4tz5r44tuchkbcae2544l2fqfldc4lmvplnt7pzvj5.py
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2z/c2zdebzlpnd7awx2bv4bx3ikwhjap5lzbh4xxpoa4vxpfsuttc6i.py
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [xx_channel], Original ATen: [aten.view]
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   xx_channel => full_default
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, 4, 1], 1.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_view_0 = async_compile.triton('triton_poi_fused_view_0', '''
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_view_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_view_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 1.0
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/6s/c6saisjsdcwhtgmxxypervxzno36eydyny53lgxysjicppxv3aw6.py
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [arange], Original ATen: [aten.arange]
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   arange => add, convert_element_type, iota, mul
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%iota, 1), kwargs = {})
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, 0), kwargs = {})
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add, torch.float32), kwargs = {})
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_arange_1 = async_compile.triton('triton_poi_fused_arange_1', '''
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_arange_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_arange_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp1, xmask)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vo/cvogprkgyvetrpwa7rwfkbokt2klgwvpzd2zhxdnpkrnxdzr4ue5.py
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ret_1], Original ATen: [aten.cat]
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ret_1 => cat_1
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_1 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%cat, %sqrt], 1), kwargs = {})
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 128, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 112
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = ((yindex // 4) % 7)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y2 = yindex // 28
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex // 4
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = y1
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1, 1], 0, tl.int64)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 6, tl.int64)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(y1, [XBLOCK, YBLOCK])
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.full([1, 1], 0, tl.int64)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 >= tmp6
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1, 1], 4, tl.int64)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 < tmp8
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 & tmp4
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (y0 + 4*x3 + 16*(y1) + 64*y2), tmp10 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp5 >= tmp8
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full([1, 1], 5, tl.int64)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp5 < tmp13
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 & tmp14
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 & tmp4
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr1 + (x3 + 4*y0), tmp16 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.3333333333333333
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 2.0
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = 1.0
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 - tmp22
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.full(tmp23.shape, 0.0, tmp23.dtype)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.where(tmp16, tmp23, tmp24)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp5 >= tmp13
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.full([1, 1], 6, tl.int64)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp5 < tmp27
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp26 & tmp4
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr2 + (x3 + 4*y0), tmp29 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = 0.3333333333333333
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 * tmp31
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = 2.0
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 * tmp33
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = 1.0
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 - tmp35
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.full(tmp36.shape, 0.0, tmp36.dtype)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp29, tmp36, tmp37)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.where(tmp15, tmp25, tmp38)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.where(tmp9, tmp11, tmp39)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full(tmp40.shape, 0.0, tmp40.dtype)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.where(tmp4, tmp40, tmp41)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp0 >= tmp3
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.full([1, 1], 7, tl.int64)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp0 < tmp44
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.load(in_ptr1 + (x3 + 4*y0), tmp43 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = 0.3333333333333333
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 * tmp47
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = 2.0
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp48 * tmp49
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = 1.0
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp50 - tmp51
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = 0.5
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp52 - tmp53
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp54 * tmp54
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.load(in_ptr2 + (x3 + 4*y0), tmp43 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp56 * tmp47
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp57 * tmp49
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp58 - tmp51
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp59 - tmp53
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp60 * tmp60
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp55 + tmp61
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = libdevice.sqrt(tmp62)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.full(tmp63.shape, 0.0, tmp63.dtype)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tl.where(tmp43, tmp63, tmp64)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.where(tmp4, tmp42, tmp65)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x3 + 16*y4), tmp66, xmask & ymask)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/hv/chvqzov6rrdilj4pa4ijcefqvp5lldzq4rag3ez2ioxdgg3elwy7.py
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [ret_2], Original ATen: [aten.convolution]
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ret_2 => convolution
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%cat_1, %primals_2, %primals_3, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_3 = async_compile.triton('triton_poi_fused_convolution_3', '''
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_3(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3 = args
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 7, 4, 4), (112, 16, 4, 1))
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((1, 4, 1), (4, 1, 1), torch.float32)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xx_channel], Original ATen: [aten.view]
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_view_0.run(buf0, 4, grid=grid(4), stream=stream0)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [arange], Original ATen: [aten.arange]
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_arange_1.run(buf1, 4, grid=grid(4), stream=stream0)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((1, 4, 4), (16, 4, 1), torch.float32)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xx_channel], Original ATen: [aten.view, aten.bmm]
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(buf0, reinterpret_tensor(buf1, (1, 1, 4), (0, 0, 1), 0), out=buf2)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = reinterpret_tensor(buf0, (1, 1, 4), (4, 4, 1), 0); del buf0  # reuse
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [yy_channel], Original ATen: [aten.view]
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_view_0.run(buf3, 4, grid=grid(4), stream=stream0)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((1, 4, 4), (16, 4, 1), torch.float32)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [yy_channel], Original ATen: [aten.view, aten.bmm]
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf1, (1, 4, 1), (0, 1, 0), 0), buf3, out=buf4)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 7, 4, 4), (112, 16, 4, 1), torch.float32)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_1], Original ATen: [aten.cat]
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(primals_1, buf2, buf4, buf5, 112, 4, grid=grid(112, 4), stream=stream0)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_2], Original ATen: [aten.convolution]
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf5, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf6; del buf6  # reuse
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [ret_2], Original ATen: [aten.convolution]
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_3.run(buf7, primals_3, 16, grid=grid(16), stream=stream0)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, primals_2, buf5, )
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 7, 4, 4), (112, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3])
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:05:54.740000 1031096 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:54.747000 1031096 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/xy/cxykfahxe2uh7naxrxo5budktnsxl2wbkdcyioasorgsq5gvlw5h.py
