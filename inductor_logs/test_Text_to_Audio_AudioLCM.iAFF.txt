V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['42_forward']
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xl/cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [xa, input_6], Original ATen: [aten.add, aten.mean]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => mean
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   xa => add
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %primals_2), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%add, [-1, -2], True), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_add_mean_0 = async_compile.triton('triton_red_fused_add_mean_0', '''
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256, 'r': 4096},
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_mean_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_add_mean_0(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4096
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r1 + 4096*x0), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r1 + 4096*x0), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 + tmp1
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask & xmask, tmp5, _tmp4)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(out_ptr0 + (r1 + 4096*x0), tmp2, rmask & xmask)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 4096.0
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 / tmp6
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp7, xmask)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dr/cdruom7auvbl4qkg6p7w53n6uekyinitvjusuu6ep6jreook5t22.py
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2, input_3], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_2, mul_1, mul_2, sub
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => relu
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%add, %primals_3, %primals_4, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_2,), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_1 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_1', '''
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 16)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x1), None, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, None)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp19, None)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4z/c4zpqtuboppf6g6ugsbb3kkq4mh6aeuvca5ynzoxxz7q372m2eks.py
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_7, input_8, input_9], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => convolution_2
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => add_6, mul_7, mul_8, sub_2
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => relu_1
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%mean, %primals_15, %primals_16, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_2, %unsqueeze_17), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %unsqueeze_19), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_7, %unsqueeze_21), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %unsqueeze_23), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_6,), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2', '''
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp19, xmask)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_4, input_5, input_10, input_11, xlg, wei, mul, sub, mul_1, xi, input_17], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.add, aten.sigmoid, aten.mul, aten.rsub, aten.mean]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_10 => convolution_3
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => add_8, mul_10, mul_11, sub_3
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_17 => mean_1
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => convolution_1
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_4, mul_4, mul_5, sub_1
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_12
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_13
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub_4
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   wei => sigmoid
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   xi => add_10
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   xlg => add_9
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu, %primals_9, %primals_10, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_11), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_13), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_15), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_1, %primals_21, %primals_22, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_3, %unsqueeze_25), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %unsqueeze_27), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_10, %unsqueeze_29), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_11, %unsqueeze_31), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, %add_8), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_9,), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_1, %sigmoid), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %sigmoid), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_2, %sub_4), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_12, %mul_13), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%add_10, [-1, -2], True), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3 = async_compile.triton('triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3', '''
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256, 'r': 4096},
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_out_ptr2': '*fp32', 'in_out_ptr3': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1', 'in_out_ptr2', 'in_out_ptr3'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 14, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3(in_out_ptr0, in_out_ptr1, in_out_ptr2, in_out_ptr3, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4096
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1, 1], 1, tl.int32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr7 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr8 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr9 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp42 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp18 = tl.load(in_out_ptr1 + (r2 + 4096*x3), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp35 = tl.load(in_ptr10 + (r2 + 4096*x3), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp37 = tl.load(in_ptr11 + (r2 + 4096*x3), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp20 = tmp18 + tmp19
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp22 = tmp20 - tmp21
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp24 = tmp23 + tmp6
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp25 = libdevice.sqrt(tmp24)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp26 = tmp9 / tmp25
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp27 = tmp26 * tmp11
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp28 = tmp22 * tmp27
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp30 = tmp28 * tmp29
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp32 = tmp30 + tmp31
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp33 = tmp32 + tmp17
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp34 = tl.sigmoid(tmp33)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp36 = tmp35 * tmp34
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp38 = tmp11 - tmp34
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp39 = tmp37 * tmp38
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp40 = tmp36 + tmp39
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp41 = tl.broadcast_to(tmp40, [XBLOCK, RBLOCK])
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp43 = _tmp42 + tmp41
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp42 = tl.where(rmask & xmask, tmp43, _tmp42)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(in_out_ptr1 + (r2 + 4096*x3), tmp20, rmask & xmask)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(in_out_ptr2 + (r2 + 4096*x3), tmp40, rmask & xmask)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.sum(_tmp42, 1)[:, None]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = 4096.0
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp42 / tmp44
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr3 + (x3), tmp45, xmask)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/j4/cj4vqmappzd4zvid7qgtdcvclgbou6fsf6p6qsrrvaltjrdrdqap.py
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_21, input_22], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_21 => convolution_7
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_22 => add_18, mul_24, mul_25, sub_8
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_7 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_3, %primals_21, %primals_22, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_7, %unsqueeze_25), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_24 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %unsqueeze_27), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_25 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_24, %unsqueeze_29), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_18 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_25, %unsqueeze_31), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_convolution_4 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_4', '''
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_convolution_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, xmask)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ly/clyp3s65ka6e6abtlkdskjxvmrz5sxma6chrm47xwzjlbctpdbtq.py
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_15, input_16, xlg2, wei2, mul_2, sub_1, mul_3, xo], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.add, aten.sigmoid, aten.mul, aten.rsub]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_15 => convolution_5
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_16 => add_14, mul_18, mul_19, sub_6
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_26
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_27
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_9
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   wei2 => sigmoid_1
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   xlg2 => add_19
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   xo => add_20
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_5 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_2, %primals_33, %primals_34, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_5, %unsqueeze_41), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_18 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %unsqueeze_43), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_18, %unsqueeze_45), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_14 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_19, %unsqueeze_47), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_19 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_14, %add_18), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_19,), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_26 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_1, %sigmoid_1), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %sigmoid_1), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_27 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_2, %sub_9), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_20 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_26, %mul_27), kwargs = {})
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_mul_rsub_sigmoid_5 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_mul_rsub_sigmoid_5', '''
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_mul_rsub_sigmoid_5', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_mul_rsub_sigmoid_5(in_out_ptr0, in_out_ptr1, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, xnumel, XBLOCK : tl.constexpr):
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 64)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 4096
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x1), None, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr5 + (x4), None, eviction_policy='evict_last')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr6 + (x3), None)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr7 + (x3), None)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.sigmoid(tmp19)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 * tmp20
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp11 - tmp20
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp24
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp22 + tmp25
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, None)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr1 + (x3), tmp26, None)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38 = args
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (16, 64, 1, 1), (64, 1, 1, 1))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (16, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (16, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (16, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (16, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (16, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (64, 16, 1, 1), (16, 1, 1, 1))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (64, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (64, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (64, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (64, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (64, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (16, 64, 1, 1), (64, 1, 1, 1))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (16, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (16, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (16, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (16, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (16, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (64, 16, 1, 1), (16, 1, 1, 1))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (64, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (64, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (64, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (64, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (64, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (16, 64, 1, 1), (64, 1, 1, 1))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (16, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (16, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (16, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (16, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (16, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (64, 16, 1, 1), (16, 1, 1, 1))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (64, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (64, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (64, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (64, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (64, ), (1, ))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 64, 1, 1), (64, 1, 256, 256), torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf6, (4, 64, 1, 1), (64, 1, 1, 1), 0); del buf6  # reuse
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xa, input_6], Original ATen: [aten.add, aten.mean]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_add_mean_0.run(buf7, primals_1, primals_2, buf0, 256, 4096, grid=grid(256), stream=stream0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_3, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 16, 64, 64), (65536, 4096, 64, 1))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 16, 64, 64), (65536, 4096, 64, 1), torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2, input_3], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_1.run(buf2, primals_4, primals_5, primals_6, primals_7, primals_8, buf3, 262144, grid=grid(262144), stream=stream0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf3, primals_9, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf7, primals_15, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 16, 1, 1), (16, 1, 1, 1))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf8; del buf8  # reuse
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 16, 1, 1), (16, 1, 1, 1), torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7, input_8, input_9], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2.run(buf9, primals_16, primals_17, primals_18, primals_19, primals_20, buf10, 64, grid=grid(64), stream=stream0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_10], Original ATen: [aten.convolution]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_21, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 64, 1, 1), (64, 1, 1, 1))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf11; del buf11  # reuse
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = buf14; del buf14  # reuse
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 64, 1, 1), (64, 1, 256, 256), torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = reinterpret_tensor(buf21, (4, 64, 1, 1), (64, 1, 1, 1), 0); del buf21  # reuse
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4, input_5, input_10, input_11, xlg, wei, mul, sub, mul_1, xi, input_17], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.add, aten.sigmoid, aten.mul, aten.rsub, aten.mean]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3.run(buf12, buf5, buf15, buf22, primals_22, primals_23, primals_24, primals_25, primals_26, primals_10, primals_11, primals_12, primals_13, primals_14, primals_1, primals_2, 256, 4096, grid=grid(256), stream=stream0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_12], Original ATen: [aten.convolution]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = extern_kernels.convolution(buf15, primals_27, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf16, (4, 16, 64, 64), (65536, 4096, 64, 1))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = buf16; del buf16  # reuse
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 16, 64, 64), (65536, 4096, 64, 1), torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_12, input_13, input_14], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_1.run(buf17, primals_28, primals_29, primals_30, primals_31, primals_32, buf18, 262144, grid=grid(262144), stream=stream0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_28
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_32
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_15], Original ATen: [aten.convolution]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = extern_kernels.convolution(buf18, primals_33, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf19, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_18], Original ATen: [aten.convolution]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = extern_kernels.convolution(buf22, primals_15, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf23, (4, 16, 1, 1), (16, 1, 1, 1))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = buf23; del buf23  # reuse
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((4, 16, 1, 1), (16, 1, 1, 1), torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_18, input_19, input_20], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2.run(buf24, primals_16, primals_17, primals_18, primals_19, primals_20, buf25, 64, grid=grid(64), stream=stream0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_16
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_20
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_21], Original ATen: [aten.convolution]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = extern_kernels.convolution(buf25, primals_21, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf26, (4, 64, 1, 1), (64, 1, 1, 1))
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = buf26; del buf26  # reuse
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = empty_strided_cuda((4, 64, 1, 1), (64, 1, 1, 1), torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_21, input_22], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_4.run(buf27, primals_22, primals_23, primals_24, primals_25, primals_26, buf28, 256, grid=grid(256), stream=stream0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_22
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = buf19; del buf19  # reuse
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = buf29; del buf29  # reuse
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_15, input_16, xlg2, wei2, mul_2, sub_1, mul_3, xo], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.add, aten.sigmoid, aten.mul, aten.rsub]
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_mul_rsub_sigmoid_5.run(buf20, buf30, primals_34, primals_35, primals_36, primals_37, primals_38, buf28, primals_1, primals_2, 1048576, grid=grid(1048576), stream=stream0)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_34
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf30, primals_1, primals_2, primals_3, primals_5, primals_6, primals_7, primals_9, primals_11, primals_12, primals_13, primals_14, primals_15, primals_17, primals_18, primals_19, primals_21, primals_23, primals_24, primals_25, primals_26, primals_27, primals_29, primals_30, primals_31, primals_33, primals_35, primals_36, primals_37, primals_38, buf0, buf2, buf3, buf5, buf7, buf9, buf10, buf12, buf15, buf17, buf18, buf20, buf22, buf24, buf25, buf27, buf28, )
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 64, 64, 64), (262144, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 64, 64, 64), (262144, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((16, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((64, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((16, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((64, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((16, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((64, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38])
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:06:01.682000 3099651 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:06:01.698000 3099651 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/3q/c3qoxmqqh3brul2dspkgmoefsp5u2v6fprfahs7szxmydr3opg4q.py
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['42_forward']
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/xl/cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [xa, input_6], Original ATen: [aten.add, aten.mean]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => mean
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   xa => add
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %primals_2), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%add, [-1, -2], True), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_add_mean_0 = async_compile.triton('triton_red_fused_add_mean_0', '''
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256, 'r': 4096},
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_mean_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_add_mean_0(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4096
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r1 + 4096*x0), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r1 + 4096*x0), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 + tmp1
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = _tmp4 + tmp3
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask & xmask, tmp5, _tmp4)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(out_ptr0 + (r1 + 4096*x0), tmp2, rmask & xmask)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(_tmp4, 1)[:, None]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 4096.0
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 / tmp6
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp7, xmask)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/dr/cdruom7auvbl4qkg6p7w53n6uekyinitvjusuu6ep6jreook5t22.py
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2, input_3], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_2, mul_1, mul_2, sub
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => relu
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%add, %primals_3, %primals_4, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_2,), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_1 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_1', '''
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 16)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x1), None, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, None)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp19, None)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4z/c4zpqtuboppf6g6ugsbb3kkq4mh6aeuvca5ynzoxxz7q372m2eks.py
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_7, input_8, input_9], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => convolution_2
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => add_6, mul_7, mul_8, sub_2
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => relu_1
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_2 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%mean, %primals_15, %primals_16, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_2, %unsqueeze_17), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %unsqueeze_19), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_7, %unsqueeze_21), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %unsqueeze_23), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_6,), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2', '''
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp19, xmask)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_4, input_5, input_10, input_11, xlg, wei, mul, sub, mul_1, xi, input_17], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.add, aten.sigmoid, aten.mul, aten.rsub, aten.mean]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_10 => convolution_3
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => add_8, mul_10, mul_11, sub_3
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_17 => mean_1
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => convolution_1
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_4, mul_4, mul_5, sub_1
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_12
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_13
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub_4
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   wei => sigmoid
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   xi => add_10
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   xlg => add_9
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_1 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu, %primals_9, %primals_10, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_11), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_13), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_15), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_1, %primals_21, %primals_22, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_3, %unsqueeze_25), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %unsqueeze_27), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_10, %unsqueeze_29), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_11, %unsqueeze_31), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, %add_8), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_9,), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_1, %sigmoid), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %sigmoid), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_2, %sub_4), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_12, %mul_13), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%add_10, [-1, -2], True), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3 = async_compile.triton('triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3', '''
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256, 'r': 4096},
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_out_ptr2': '*fp32', 'in_out_ptr3': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1', 'in_out_ptr2', 'in_out_ptr3'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 14, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3(in_out_ptr0, in_out_ptr1, in_out_ptr2, in_out_ptr3, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4096
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1, 1], 1, tl.int32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr7 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr8 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr9 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp42 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp18 = tl.load(in_out_ptr1 + (r2 + 4096*x3), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp35 = tl.load(in_ptr10 + (r2 + 4096*x3), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp37 = tl.load(in_ptr11 + (r2 + 4096*x3), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp20 = tmp18 + tmp19
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp22 = tmp20 - tmp21
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp24 = tmp23 + tmp6
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp25 = libdevice.sqrt(tmp24)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp26 = tmp9 / tmp25
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp27 = tmp26 * tmp11
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp28 = tmp22 * tmp27
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp30 = tmp28 * tmp29
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp32 = tmp30 + tmp31
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp33 = tmp32 + tmp17
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp34 = tl.sigmoid(tmp33)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp36 = tmp35 * tmp34
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp38 = tmp11 - tmp34
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp39 = tmp37 * tmp38
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp40 = tmp36 + tmp39
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp41 = tl.broadcast_to(tmp40, [XBLOCK, RBLOCK])
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp43 = _tmp42 + tmp41
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp42 = tl.where(rmask & xmask, tmp43, _tmp42)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(in_out_ptr1 + (r2 + 4096*x3), tmp20, rmask & xmask)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(in_out_ptr2 + (r2 + 4096*x3), tmp40, rmask & xmask)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.sum(_tmp42, 1)[:, None]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = 4096.0
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp42 / tmp44
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr3 + (x3), tmp45, xmask)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/j4/cj4vqmappzd4zvid7qgtdcvclgbou6fsf6p6qsrrvaltjrdrdqap.py
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_21, input_22], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_21 => convolution_7
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_22 => add_18, mul_24, mul_25, sub_8
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_7 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_3, %primals_21, %primals_22, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_7, %unsqueeze_25), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_24 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %unsqueeze_27), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_25 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_24, %unsqueeze_29), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_18 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_25, %unsqueeze_31), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_convolution_4 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_4', '''
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_convolution_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, xmask)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ly/clyp3s65ka6e6abtlkdskjxvmrz5sxma6chrm47xwzjlbctpdbtq.py
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_15, input_16, xlg2, wei2, mul_2, sub_1, mul_3, xo], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.add, aten.sigmoid, aten.mul, aten.rsub]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_15 => convolution_5
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_16 => add_14, mul_18, mul_19, sub_6
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_26
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_27
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_9
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   wei2 => sigmoid_1
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   xlg2 => add_19
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   xo => add_20
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_5 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_2, %primals_33, %primals_34, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_5, %unsqueeze_41), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_18 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %unsqueeze_43), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_18, %unsqueeze_45), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_14 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_19, %unsqueeze_47), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_19 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_14, %add_18), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_19,), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_26 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_1, %sigmoid_1), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %sigmoid_1), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_27 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_2, %sub_9), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_20 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_26, %mul_27), kwargs = {})
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_mul_rsub_sigmoid_5 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_mul_rsub_sigmoid_5', '''
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_mul_rsub_sigmoid_5', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_mul_rsub_sigmoid_5(in_out_ptr0, in_out_ptr1, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, xnumel, XBLOCK : tl.constexpr):
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 64)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 4096
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x1), None, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr5 + (x4), None, eviction_policy='evict_last')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr6 + (x3), None)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr7 + (x3), None)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.sigmoid(tmp19)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 * tmp20
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp11 - tmp20
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp24
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp22 + tmp25
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, None)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr1 + (x3), tmp26, None)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38 = args
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (16, 64, 1, 1), (64, 1, 1, 1))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (16, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (16, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (16, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (16, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (16, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (64, 16, 1, 1), (16, 1, 1, 1))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (64, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (64, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (64, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (64, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (64, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (16, 64, 1, 1), (64, 1, 1, 1))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (16, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (16, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (16, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (16, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (16, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (64, 16, 1, 1), (16, 1, 1, 1))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (64, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (64, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (64, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (64, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (64, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (16, 64, 1, 1), (64, 1, 1, 1))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (16, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (16, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (16, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (16, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (16, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (64, 16, 1, 1), (16, 1, 1, 1))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (64, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (64, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (64, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (64, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (64, ), (1, ))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 64, 1, 1), (64, 1, 256, 256), torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf6, (4, 64, 1, 1), (64, 1, 1, 1), 0); del buf6  # reuse
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xa, input_6], Original ATen: [aten.add, aten.mean]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_add_mean_0.run(buf7, primals_1, primals_2, buf0, 256, 4096, grid=grid(256), stream=stream0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_3, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 16, 64, 64), (65536, 4096, 64, 1))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 16, 64, 64), (65536, 4096, 64, 1), torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2, input_3], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_1.run(buf2, primals_4, primals_5, primals_6, primals_7, primals_8, buf3, 262144, grid=grid(262144), stream=stream0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf3, primals_9, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf7, primals_15, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 16, 1, 1), (16, 1, 1, 1))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf8; del buf8  # reuse
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 16, 1, 1), (16, 1, 1, 1), torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7, input_8, input_9], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2.run(buf9, primals_16, primals_17, primals_18, primals_19, primals_20, buf10, 64, grid=grid(64), stream=stream0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_10], Original ATen: [aten.convolution]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_21, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 64, 1, 1), (64, 1, 1, 1))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf11; del buf11  # reuse
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = buf14; del buf14  # reuse
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 64, 1, 1), (64, 1, 256, 256), torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = reinterpret_tensor(buf21, (4, 64, 1, 1), (64, 1, 1, 1), 0); del buf21  # reuse
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4, input_5, input_10, input_11, xlg, wei, mul, sub, mul_1, xi, input_17], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.add, aten.sigmoid, aten.mul, aten.rsub, aten.mean]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3.run(buf12, buf5, buf15, buf22, primals_22, primals_23, primals_24, primals_25, primals_26, primals_10, primals_11, primals_12, primals_13, primals_14, primals_1, primals_2, 256, 4096, grid=grid(256), stream=stream0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_12], Original ATen: [aten.convolution]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = extern_kernels.convolution(buf15, primals_27, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf16, (4, 16, 64, 64), (65536, 4096, 64, 1))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = buf16; del buf16  # reuse
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 16, 64, 64), (65536, 4096, 64, 1), torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_12, input_13, input_14], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_1.run(buf17, primals_28, primals_29, primals_30, primals_31, primals_32, buf18, 262144, grid=grid(262144), stream=stream0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_28
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_32
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_15], Original ATen: [aten.convolution]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = extern_kernels.convolution(buf18, primals_33, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf19, (4, 64, 64, 64), (262144, 4096, 64, 1))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_18], Original ATen: [aten.convolution]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = extern_kernels.convolution(buf22, primals_15, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf23, (4, 16, 1, 1), (16, 1, 1, 1))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = buf23; del buf23  # reuse
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((4, 16, 1, 1), (16, 1, 1, 1), torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_18, input_19, input_20], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2.run(buf24, primals_16, primals_17, primals_18, primals_19, primals_20, buf25, 64, grid=grid(64), stream=stream0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_16
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_20
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_21], Original ATen: [aten.convolution]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = extern_kernels.convolution(buf25, primals_21, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf26, (4, 64, 1, 1), (64, 1, 1, 1))
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = buf26; del buf26  # reuse
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = empty_strided_cuda((4, 64, 1, 1), (64, 1, 1, 1), torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_21, input_22], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_convolution_4.run(buf27, primals_22, primals_23, primals_24, primals_25, primals_26, buf28, 256, grid=grid(256), stream=stream0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_22
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = buf19; del buf19  # reuse
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = empty_strided_cuda((4, 64, 64, 64), (262144, 4096, 64, 1), torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = buf29; del buf29  # reuse
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_15, input_16, xlg2, wei2, mul_2, sub_1, mul_3, xo], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.add, aten.sigmoid, aten.mul, aten.rsub]
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_mul_rsub_sigmoid_5.run(buf20, buf30, primals_34, primals_35, primals_36, primals_37, primals_38, buf28, primals_1, primals_2, 1048576, grid=grid(1048576), stream=stream0)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_34
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf30, primals_1, primals_2, primals_3, primals_5, primals_6, primals_7, primals_9, primals_11, primals_12, primals_13, primals_14, primals_15, primals_17, primals_18, primals_19, primals_21, primals_23, primals_24, primals_25, primals_26, primals_27, primals_29, primals_30, primals_31, primals_33, primals_35, primals_36, primals_37, primals_38, buf0, buf2, buf3, buf5, buf7, buf9, buf10, buf12, buf15, buf17, buf18, buf20, buf22, buf24, buf25, buf27, buf28, )
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 64, 64, 64), (262144, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 64, 64, 64), (262144, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((16, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((64, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((16, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((64, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((16, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((64, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38])
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:55:27.651000 761384 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:55:27.665000 761384 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/v7/cv7xsbbivarbk2pbamdbv3uhk4fnorg2dz7mdb7epcoyc3mbtvmq.py
