V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['8_inference']
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rk/crkp2h6xv5437j6cobvtqwnqbukuwocsn5ju3mk7xujwggezzixo.py
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x2, x2_1], Original ATen: [aten._unsafe_index, aten.reflection_pad2d]
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x2 => _unsafe_index
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x2_1 => _unsafe_index_1, _unsafe_index_2
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%arg0_1, [None, None, %unsqueeze, %convert_element_type_3]), kwargs = {})
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index, [None, None, %sub_1, None]), kwargs = {})
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_2 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_1, [None, None, None, %sub_3]), kwargs = {})
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_reflection_pad2d_0 = async_compile.triton('triton_poi_fused__unsafe_index_reflection_pad2d_0', '''
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_reflection_pad2d_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_reflection_pad2d_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 7 + ((-1)*tl_math.abs((-5) + x1))
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3.to(tl.int32)
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 7 + ((-1)*tl_math.abs((-5) + x0))
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.float32)
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp2
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.int32)
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (tmp8 + 4*tmp4 + 16*x2), xmask, eviction_policy='evict_last')
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp9, xmask)
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x2, x2_1], Original ATen: [aten._unsafe_index, aten.reflection_pad2d]
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_reflection_pad2d_0.run(arg0_1, buf0, 256, grid=grid(256), stream=stream0)
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf0, )
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:20:57.416000 3823514 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:57.417000 3823514 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/au/caugqhilyhtmtbrsthr4zklpex4xwmrovdvefktjfpflh2lff6cq.py
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['8_inference']
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/rk/crkp2h6xv5437j6cobvtqwnqbukuwocsn5ju3mk7xujwggezzixo.py
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x2, x2_1], Original ATen: [aten._unsafe_index, aten.reflection_pad2d]
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x2 => _unsafe_index
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x2_1 => _unsafe_index_1, _unsafe_index_2
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%arg0_1, [None, None, %unsqueeze, %convert_element_type_3]), kwargs = {})
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index, [None, None, %sub_1, None]), kwargs = {})
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_2 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_1, [None, None, None, %sub_3]), kwargs = {})
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_reflection_pad2d_0 = async_compile.triton('triton_poi_fused__unsafe_index_reflection_pad2d_0', '''
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_reflection_pad2d_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_reflection_pad2d_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 7 + ((-1)*tl_math.abs((-5) + x1))
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.5
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3.to(tl.int32)
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 7 + ((-1)*tl_math.abs((-5) + x0))
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.float32)
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp2
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.int32)
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (tmp8 + 4*tmp4 + 16*x2), xmask, eviction_policy='evict_last')
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp9, xmask)
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x2, x2_1], Original ATen: [aten._unsafe_index, aten.reflection_pad2d]
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_reflection_pad2d_0.run(arg0_1, buf0, 256, grid=grid(256), stream=stream0)
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf0, )
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:09:55.408000 1123892 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:55.409000 1123892 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/b6/cb64pmhcagezn2tlaaqkwek73wfey5glajvj4kt6b4yidip6qc4o.py
