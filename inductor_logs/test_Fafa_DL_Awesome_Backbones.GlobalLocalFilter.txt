V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['11_forward']
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hp/chphk2tiqzce7ubnw5b554hkm3zbmrs5vgdlt5un6hh4j76pk4x5.py
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [u, sub], Original ATen: [aten.mean, aten.sub]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   u => mean
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_1, [1], True), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_1, %mean), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_sub_0 = async_compile.triton('triton_poi_fused_mean_sub_0', '''
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_sub_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_sub_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 4.0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 / tmp8
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp0 - tmp9
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xo/cxofk67i7cw2wboxqpcddylsq4ga265l4j6t32ewejbqdojxtb5i.py
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pow_1, s, add, sqrt, x, mul, x_1], Original ATen: [aten.pow, aten.mean, aten.add, aten.sqrt, aten.div, aten.mul]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   s => mean_1
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sqrt => sqrt
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => div
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_1
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub, 2), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%pow_1, [1], True), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_1, 1e-06), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%add,), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub, %sqrt), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze_1, %div), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %unsqueeze_3), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_mean_mul_pow_sqrt_1 = async_compile.triton('triton_poi_fused_add_div_mean_mul_pow_sqrt_1', '''
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_mean_mul_pow_sqrt_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_mean_mul_pow_sqrt_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x3), xmask)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 * tmp2
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 * tmp4
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 + tmp5
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 * tmp7
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 + tmp8
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 * tmp10
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 + tmp11
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 4.0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 / tmp13
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 1e-06
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = libdevice.sqrt(tmp16)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp1 / tmp17
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp0 * tmp18
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp21, xmask)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/k3/ck3ngxmjyhs5nnkce7b666eqqql27vdmkw2j3bhepzaf4pszpbed.py
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten._to_copy]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate => convert_element_type_1
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_2 = async_compile.triton('triton_poi_fused__to_copy_2', '''
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_2(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 4.333333333333333
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ja/cja2jgn5ltndpznuevl6nbe64xogotbwf6bzeyamniq5ltpzdspx.py
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.add, aten.clamp]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate => add_2, clamp_max
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_1, 1), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%add_2, 13), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_3 = async_compile.triton('triton_poi_fused_add_clamp_3', '''
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_3(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 4.333333333333333
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int64)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 13, tl.int64)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.minimum(tmp8, tmp9)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/24/c24pokda7cyu5c3x4m25hgobzwmvv3vaa35xymdvpyaqhd7jkyan.py
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate => clamp_min_1, convert_element_type_2, convert_element_type_3, iota_1, mul_2
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota_1 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (3,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_1, torch.float32), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_2, 3.5), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=2] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_2, 0.0), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_3 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%clamp_min_1, torch.int64), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_4 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_4', '''
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_4(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 3
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 3.5
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7u/c7ue7hf7vbmlnqhkxftp3qude3uhl2pum77xkybnlhq5xmbxwxb7.py
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.add, aten.clamp]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate => add_3, clamp_max_1
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_3, 1), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_1 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%add_3, 7), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_5 = async_compile.triton('triton_poi_fused_add_clamp_5', '''
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_5(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 3
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 3.5
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int64)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 7, tl.int64)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.minimum(tmp8, tmp9)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fo/cfour3sbnw5g64glzeeh7jdwrhdr2tfih6fehmaonw6goauu3csn.py
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate => clamp_max_2, clamp_min_1, clamp_min_2, convert_element_type_2, iota_1, mul_2, sub_2
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota_1 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (3,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_1, torch.float32), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_2, 3.5), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=2] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_2, 0.0), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_1, %convert_element_type_3), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_2, 0.0), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_sub_6 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_sub_6', '''
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_sub_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_sub_6(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 3
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 3.5
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6.to(tl.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 - tmp7
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp8, tmp4)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.minimum(tmp9, tmp10)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp11, xmask)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tv/ctvbbwzw6ykjhxmhxn72qwy4nkubtpfvas3n5hvdczcnhdpozzol.py
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.sub, aten.clamp]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate => clamp_max_3, clamp_min_3, sub_5
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %convert_element_type_1), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_5, 0.0), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_3 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_3, 1.0), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clamp_sub_7 = async_compile.triton('triton_poi_fused_clamp_sub_7', '''
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clamp_sub_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clamp_sub_7(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 4.333333333333333
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6.to(tl.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 - tmp7
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp8, tmp4)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.minimum(tmp9, tmp10)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp11, xmask)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/by/cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [interpolate, contiguous, weight_1], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add, aten.clone, aten.view_as_complex]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   contiguous => clone
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate => _unsafe_index, _unsafe_index_1, add_4, mul_3, sub_3
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weight_1 => view_as_complex
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%permute, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%permute, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %clamp_max_2), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_3), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_1,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %view_as_complex : [num_users=2] = call_function[target=torch.ops.aten.view_as_complex.default](args = (%clone,), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8 = async_compile.triton('triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8', '''
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'in_ptr5': '*i64', 'in_ptr6': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 4
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 12
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 3
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 3)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 2)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 2
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y5 = yindex
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask, eviction_policy='evict_last')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr3 + (x2), xmask, eviction_policy='evict_last')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr4 + (x2), xmask, eviction_policy='evict_last')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr5 + (x3), xmask, eviction_policy='evict_last')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr6 + (x3), xmask, eviction_policy='evict_last')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK, YBLOCK], 14, tl.int32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.full([XBLOCK, YBLOCK], 8, tl.int32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 < 0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(tmp8, tmp7, tmp5)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr2 + (y0 + 2*tmp9 + 16*tmp4 + 224*y1), xmask & ymask)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp6
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 < 0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp13, tmp12, tmp11)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr2 + (y0 + 2*tmp14 + 16*tmp4 + 224*y1), xmask & ymask)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 - tmp10
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp10 + tmp18
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 + tmp1
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 < 0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp22, tmp21, tmp20)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr2 + (y0 + 2*tmp9 + 16*tmp23 + 224*y1), xmask & ymask)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr2 + (y0 + 2*tmp14 + 16*tmp23 + 224*y1), xmask & ymask)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 - tmp24
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp17
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp24 + tmp27
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 - tmp19
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 * tmp30
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp19 + tmp31
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 2*x4 + 24*y1), tmp32, xmask & ymask)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/l2/cl2bnfttjmc2idgutftg5tknsn4hc6kfapnatjzsg3xb623diuha.py
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze_4, %unsqueeze_5], 2), kwargs = {})
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_9 = async_compile.triton('triton_poi_fused_cat_9', '''
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_9(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 2)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 32
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 2, tl.int64)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 16*x2), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7 = args
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (2, 1, 3, 3), (9, 9, 3, 1))
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (2, 14, 8, 2), (224, 16, 2, 1))
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, ), (1, ))
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [u, sub], Original ATen: [aten.mean, aten.sub]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_sub_0.run(primals_1, buf0, 256, grid=grid(256), stream=stream0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, s, add, sqrt, x, mul, x_1], Original ATen: [aten.pow, aten.mean, aten.add, aten.sqrt, aten.div, aten.mul]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_mean_mul_pow_sqrt_1.run(primals_2, buf0, primals_3, buf1, 256, grid=grid(256), stream=stream0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x1_1], Original ATen: [aten.convolution]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(reinterpret_tensor(buf1, (4, 2, 4, 4), (64, 16, 4, 1), 0), primals_4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=2, bias=None)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 2, 4, 4), (32, 16, 4, 1))
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x2_1], Original ATen: [aten._fft_r2c]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = torch.ops.aten._fft_r2c.default(reinterpret_tensor(buf1, (4, 2, 4, 4), (64, 16, 4, 1), 32), [2, 3], 1, True)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf3
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten._to_copy]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_2.run(buf5, 4, grid=grid(4), stream=stream0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.add, aten.clamp]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_3.run(buf6, 4, grid=grid(4), stream=stream0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((3, ), (1, ), torch.int64)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_4.run(buf7, 3, grid=grid(3), stream=stream0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((3, ), (1, ), torch.int64)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.add, aten.clamp]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_5.run(buf8, 3, grid=grid(3), stream=stream0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((3, ), (1, ), torch.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_6.run(buf9, 3, grid=grid(3), stream=stream0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 1), (1, 1), torch.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.sub, aten.clamp]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clamp_sub_7.run(buf11, 4, grid=grid(4), stream=stream0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((2, 4, 3, 2), (24, 6, 2, 1), torch.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [interpolate, contiguous, weight_1], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add, aten.clone, aten.view_as_complex]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8.run(buf5, buf7, primals_5, buf8, buf9, buf6, buf11, buf12, 4, 12, grid=grid(4, 12), stream=stream0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [contiguous, weight_1], Original ATen: [aten.clone, aten.view_as_complex]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = torch.ops.aten.view_as_complex.default(buf12)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = buf13
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x2_2], Original ATen: [aten.mul]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = torch.ops.aten.mul.Tensor(buf4, buf14)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf15
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf15
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x2_3], Original ATen: [aten._fft_c2r]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = torch.ops.aten._fft_c2r.default(buf16, [2, 3], 1, 4)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf16
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = buf17
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = reinterpret_tensor(buf0, (4, 2, 2, 4, 4), (64, 32, 16, 4, 1), 0); del buf0  # reuse
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_9.run(buf2, buf18, buf19, 256, grid=grid(256), stream=stream0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf18
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [u_1, sub_2], Original ATen: [aten.mean, aten.sub]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_sub_0.run(buf19, buf20, 256, grid=grid(256), stream=stream0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_2, s_1, add_2, sqrt_1, x_3, mul_2, x_4], Original ATen: [aten.pow, aten.mean, aten.add, aten.sqrt, aten.div, aten.mul]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_mean_mul_pow_sqrt_1.run(primals_6, buf20, primals_7, buf21, 256, grid=grid(256), stream=stream0)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf20
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten._conj]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = torch.ops.aten._conj.default(buf4)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = buf22
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten._conj]
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = torch.ops.aten._conj.default(buf14)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = buf24
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf21, primals_1, primals_4, primals_6, reinterpret_tensor(buf1, (4, 2, 4, 4), (64, 16, 4, 1), 0), buf5, buf6, buf7, buf8, buf9, buf11, buf19, buf23, buf25, )
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((2, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((2, 14, 8, 2), (224, 16, 2, 1), device='cuda:0', dtype=torch.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7])
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:56:09.554000 267263 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:56:09.565000 267263 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/lz/clzqaqbksxcxrhijctkdap7ocsdsqapib2hjdxxfuws6sexsoa6p.py
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['11_forward']
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/hp/chphk2tiqzce7ubnw5b554hkm3zbmrs5vgdlt5un6hh4j76pk4x5.py
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [u, sub], Original ATen: [aten.mean, aten.sub]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   u => mean
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_1, [1], True), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_1, %mean), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_sub_0 = async_compile.triton('triton_poi_fused_mean_sub_0', '''
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_sub_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_sub_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 4.0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 / tmp8
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp0 - tmp9
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/xo/cxofk67i7cw2wboxqpcddylsq4ga265l4j6t32ewejbqdojxtb5i.py
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pow_1, s, add, sqrt, x, mul, x_1], Original ATen: [aten.pow, aten.mean, aten.add, aten.sqrt, aten.div, aten.mul]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   s => mean_1
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sqrt => sqrt
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => div
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_1
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub, 2), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%pow_1, [1], True), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_1, 1e-06), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%add,), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub, %sqrt), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze_1, %div), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %unsqueeze_3), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_mean_mul_pow_sqrt_1 = async_compile.triton('triton_poi_fused_add_div_mean_mul_pow_sqrt_1', '''
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_mean_mul_pow_sqrt_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_mean_mul_pow_sqrt_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x3), xmask)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 * tmp2
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 * tmp4
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 + tmp5
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 * tmp7
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 + tmp8
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 * tmp10
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 + tmp11
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 4.0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 / tmp13
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 1e-06
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = libdevice.sqrt(tmp16)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp1 / tmp17
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp0 * tmp18
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp21, xmask)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/k3/ck3ngxmjyhs5nnkce7b666eqqql27vdmkw2j3bhepzaf4pszpbed.py
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten._to_copy]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate => convert_element_type_1
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_2 = async_compile.triton('triton_poi_fused__to_copy_2', '''
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_2(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 4.333333333333333
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ja/cja2jgn5ltndpznuevl6nbe64xogotbwf6bzeyamniq5ltpzdspx.py
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.add, aten.clamp]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate => add_2, clamp_max
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_1, 1), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%add_2, 13), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_3 = async_compile.triton('triton_poi_fused_add_clamp_3', '''
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_3(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 4.333333333333333
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int64)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 13, tl.int64)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.minimum(tmp8, tmp9)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/24/c24pokda7cyu5c3x4m25hgobzwmvv3vaa35xymdvpyaqhd7jkyan.py
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate => clamp_min_1, convert_element_type_2, convert_element_type_3, iota_1, mul_2
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota_1 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (3,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_1, torch.float32), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_2, 3.5), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=2] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_2, 0.0), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_3 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%clamp_min_1, torch.int64), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_4 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_4', '''
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_4(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 3
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 3.5
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7u/c7ue7hf7vbmlnqhkxftp3qude3uhl2pum77xkybnlhq5xmbxwxb7.py
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.add, aten.clamp]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate => add_3, clamp_max_1
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_3, 1), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_1 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%add_3, 7), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_5 = async_compile.triton('triton_poi_fused_add_clamp_5', '''
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_5(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 3
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 3.5
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int64)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 7, tl.int64)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.minimum(tmp8, tmp9)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fo/cfour3sbnw5g64glzeeh7jdwrhdr2tfih6fehmaonw6goauu3csn.py
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate => clamp_max_2, clamp_min_1, clamp_min_2, convert_element_type_2, iota_1, mul_2, sub_2
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota_1 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (3,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_1, torch.float32), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_2, 3.5), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=2] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_2, 0.0), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_1, %convert_element_type_3), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_2, 0.0), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_sub_6 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_sub_6', '''
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_sub_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_sub_6(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 3
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 3.5
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6.to(tl.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 - tmp7
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp8, tmp4)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.minimum(tmp9, tmp10)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp11, xmask)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/tv/ctvbbwzw6ykjhxmhxn72qwy4nkubtpfvas3n5hvdczcnhdpozzol.py
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.sub, aten.clamp]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate => clamp_max_3, clamp_min_3, sub_5
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %convert_element_type_1), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_5, 0.0), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_3 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_3, 1.0), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clamp_sub_7 = async_compile.triton('triton_poi_fused_clamp_sub_7', '''
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clamp_sub_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clamp_sub_7(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 4.333333333333333
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6.to(tl.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 - tmp7
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp8, tmp4)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.minimum(tmp9, tmp10)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp11, xmask)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/by/cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [interpolate, contiguous, weight_1], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add, aten.clone, aten.view_as_complex]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   contiguous => clone
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   interpolate => _unsafe_index, _unsafe_index_1, add_4, mul_3, sub_3
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weight_1 => view_as_complex
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%permute, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%permute, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %clamp_max_2), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_3), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_1,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %view_as_complex : [num_users=2] = call_function[target=torch.ops.aten.view_as_complex.default](args = (%clone,), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8 = async_compile.triton('triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8', '''
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'in_ptr5': '*i64', 'in_ptr6': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 4
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 12
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 3
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 3)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 2)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 2
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y5 = yindex
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask, eviction_policy='evict_last')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr3 + (x2), xmask, eviction_policy='evict_last')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr4 + (x2), xmask, eviction_policy='evict_last')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr5 + (x3), xmask, eviction_policy='evict_last')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr6 + (x3), xmask, eviction_policy='evict_last')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK, YBLOCK], 14, tl.int32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.full([XBLOCK, YBLOCK], 8, tl.int32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 < 0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(tmp8, tmp7, tmp5)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr2 + (y0 + 2*tmp9 + 16*tmp4 + 224*y1), xmask & ymask)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp6
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 < 0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp13, tmp12, tmp11)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr2 + (y0 + 2*tmp14 + 16*tmp4 + 224*y1), xmask & ymask)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 - tmp10
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp10 + tmp18
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 + tmp1
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 < 0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(tmp22, tmp21, tmp20)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr2 + (y0 + 2*tmp9 + 16*tmp23 + 224*y1), xmask & ymask)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr2 + (y0 + 2*tmp14 + 16*tmp23 + 224*y1), xmask & ymask)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 - tmp24
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp17
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp24 + tmp27
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 - tmp19
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 * tmp30
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp19 + tmp31
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 2*x4 + 24*y1), tmp32, xmask & ymask)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/l2/cl2bnfttjmc2idgutftg5tknsn4hc6kfapnatjzsg3xb623diuha.py
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze_4, %unsqueeze_5], 2), kwargs = {})
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_9 = async_compile.triton('triton_poi_fused_cat_9', '''
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_9(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 2)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 32
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 2, tl.int64)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 16*x2), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7 = args
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (2, 1, 3, 3), (9, 9, 3, 1))
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (2, 14, 8, 2), (224, 16, 2, 1))
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, ), (1, ))
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [u, sub], Original ATen: [aten.mean, aten.sub]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_sub_0.run(primals_1, buf0, 256, grid=grid(256), stream=stream0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, s, add, sqrt, x, mul, x_1], Original ATen: [aten.pow, aten.mean, aten.add, aten.sqrt, aten.div, aten.mul]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_mean_mul_pow_sqrt_1.run(primals_2, buf0, primals_3, buf1, 256, grid=grid(256), stream=stream0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x1_1], Original ATen: [aten.convolution]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(reinterpret_tensor(buf1, (4, 2, 4, 4), (64, 16, 4, 1), 0), primals_4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=2, bias=None)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 2, 4, 4), (32, 16, 4, 1))
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x2_1], Original ATen: [aten._fft_r2c]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = torch.ops.aten._fft_r2c.default(reinterpret_tensor(buf1, (4, 2, 4, 4), (64, 16, 4, 1), 32), [2, 3], 1, True)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf3
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten._to_copy]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_2.run(buf5, 4, grid=grid(4), stream=stream0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.add, aten.clamp]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_3.run(buf6, 4, grid=grid(4), stream=stream0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((3, ), (1, ), torch.int64)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_4.run(buf7, 3, grid=grid(3), stream=stream0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((3, ), (1, ), torch.int64)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.add, aten.clamp]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_5.run(buf8, 3, grid=grid(3), stream=stream0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((3, ), (1, ), torch.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_6.run(buf9, 3, grid=grid(3), stream=stream0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 1), (1, 1), torch.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [interpolate], Original ATen: [aten.sub, aten.clamp]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clamp_sub_7.run(buf11, 4, grid=grid(4), stream=stream0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((2, 4, 3, 2), (24, 6, 2, 1), torch.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [interpolate, contiguous, weight_1], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add, aten.clone, aten.view_as_complex]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8.run(buf5, buf7, primals_5, buf8, buf9, buf6, buf11, buf12, 4, 12, grid=grid(4, 12), stream=stream0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [contiguous, weight_1], Original ATen: [aten.clone, aten.view_as_complex]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = torch.ops.aten.view_as_complex.default(buf12)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = buf13
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x2_2], Original ATen: [aten.mul]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = torch.ops.aten.mul.Tensor(buf4, buf14)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf15
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf15
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x2_3], Original ATen: [aten._fft_c2r]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = torch.ops.aten._fft_c2r.default(buf16, [2, 3], 1, 4)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf16
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = buf17
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf17
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = reinterpret_tensor(buf0, (4, 2, 2, 4, 4), (64, 32, 16, 4, 1), 0); del buf0  # reuse
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_9.run(buf2, buf18, buf19, 256, grid=grid(256), stream=stream0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf18
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [u_1, sub_2], Original ATen: [aten.mean, aten.sub]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_sub_0.run(buf19, buf20, 256, grid=grid(256), stream=stream0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_2, s_1, add_2, sqrt_1, x_3, mul_2, x_4], Original ATen: [aten.pow, aten.mean, aten.add, aten.sqrt, aten.div, aten.mul]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_mean_mul_pow_sqrt_1.run(primals_6, buf20, primals_7, buf21, 256, grid=grid(256), stream=stream0)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf20
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten._conj]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = torch.ops.aten._conj.default(buf4)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = buf22
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten._conj]
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = torch.ops.aten._conj.default(buf14)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = buf24
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf21, primals_1, primals_4, primals_6, reinterpret_tensor(buf1, (4, 2, 4, 4), (64, 16, 4, 1), 0), buf5, buf6, buf7, buf8, buf9, buf11, buf19, buf23, buf25, )
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((2, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((2, 14, 8, 2), (224, 16, 2, 1), device='cuda:0', dtype=torch.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7])
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:46:23.836000 2884344 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:46:23.848000 2884344 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/d4/cd4qdlrzosmndjekcoayvd7fj7li6dfsj66vv6rbztr2q4tg3vsn.py
