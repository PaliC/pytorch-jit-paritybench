V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lb/clbiq24do23ixoype4idtqqreepwh6aygbaxotuu3qbls2psiqwh.py
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => amax, exp, sub
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%arg0_1, [-1], True), kwargs = {})
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, %amax), kwargs = {})
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_0 = async_compile.triton('triton_poi_fused__softmax_0', '''
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2t/c2tjj7b4das5tmkny2e34oseqwqpvo7dpy5zdvzaj2szbyxlyvki.py
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax, prediction], Original ATen: [aten._softmax, aten.argmax]
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   prediction => argmax
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => div, sum_1
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %argmax : [num_users=1] = call_function[target=torch.ops.aten.argmax.default](args = (%div, -2), kwargs = {})
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_argmax_1 = async_compile.triton('triton_poi_fused__softmax_argmax_1', '''
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_argmax_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 20, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_argmax_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 16*x1), xmask)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (16*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 16*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 16*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 16*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (4 + x0 + 16*x1), xmask)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (4 + 16*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (5 + 16*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (6 + 16*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (7 + 16*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr0 + (8 + x0 + 16*x1), xmask)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (8 + 16*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr0 + (9 + 16*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (10 + 16*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr0 + (11 + 16*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.load(in_ptr0 + (12 + x0 + 16*x1), xmask)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.load(in_ptr0 + (12 + 16*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.load(in_ptr0 + (13 + 16*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.load(in_ptr0 + (14 + 16*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tl.load(in_ptr0 + (15 + 16*x1), xmask, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 + tmp13
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp9 / tmp16
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp8 > tmp17
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp8 == tmp17
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp8 != tmp8
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 != tmp17
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 > tmp21
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp18 | tmp22
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 & tmp21
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp19 | tmp24
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int64)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.full([1], 1, tl.int64)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 < tmp27
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp25 & tmp28
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp23 | tmp29
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp30, tmp8, tmp17)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp30, tmp26, tmp27)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 + tmp35
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 + tmp37
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 + tmp39
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp33 / tmp40
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp31 > tmp41
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp31 == tmp41
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp31 != tmp31
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp41 != tmp41
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp44 > tmp45
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp42 | tmp46
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp44 & tmp45
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp43 | tmp48
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.full([1], 2, tl.int64)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp32 < tmp50
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp49 & tmp51
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp47 | tmp52
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.where(tmp53, tmp31, tmp41)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.where(tmp53, tmp32, tmp50)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp57 + tmp58
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp59 + tmp60
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp61 + tmp62
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp56 / tmp63
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp54 > tmp64
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp54 == tmp64
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp54 != tmp54
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp64 != tmp64
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp67 > tmp68
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp65 | tmp69
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp67 & tmp68
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp66 | tmp71
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.full([1], 3, tl.int64)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp55 < tmp73
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp72 & tmp74
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp70 | tmp75
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.where(tmp76, tmp54, tmp64)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.where(tmp76, tmp55, tmp73)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp78, xmask)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/my/cmyhwbqznzdoy2b75iljmflbwo2frt6mmmbwq6b4p52kau4oeywh.py
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [scores, sum_1, truediv], Original ATen: [aten.eq, aten.sum, aten.div]
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   scores => eq
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_2
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div_1
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Tensor](args = (%argmax, %arg1_1), kwargs = {})
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%eq,), kwargs = {})
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_2, 256.0), kwargs = {})
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_div_eq_sum_2 = async_compile.triton('triton_per_fused_div_eq_sum_2', '''
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_div_eq_sum_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_div_eq_sum_2(in_ptr0, in_ptr1, out_ptr1, xnumel, rnumel):
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 64)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None, eviction_policy='evict_last')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (r2), None)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 == tmp2
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3.to(tl.int64)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [RBLOCK])
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.promote_to_tensor(tl.sum(tmp5, 0))
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.float32)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 0.00390625
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.full([1], 0, tl.int32)), tmp10, None)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_0.run(arg0_1, buf0, 256, grid=grid(256), stream=stream0)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.int64)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax, prediction], Original ATen: [aten._softmax, aten.argmax]
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_argmax_1.run(buf0, buf1, 64, grid=grid(64), stream=stream0)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((), (), torch.float32)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [scores, sum_1, truediv], Original ATen: [aten.eq, aten.sum, aten.div]
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_div_eq_sum_2.run(buf1, arg1_1, buf3, 1, 256, grid=grid(1), stream=stream0)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf3, )
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:22:04.314000 1476672 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:22:04.320000 1476672 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/s3/cs3eyayyfxfcl6wzzmxi3h4ivxftqapv4ypcfjci6eelxwovta3m.py
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/lb/clbiq24do23ixoype4idtqqreepwh6aygbaxotuu3qbls2psiqwh.py
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => amax, exp, sub
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%arg0_1, [-1], True), kwargs = {})
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, %amax), kwargs = {})
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_0 = async_compile.triton('triton_poi_fused__softmax_0', '''
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2t/c2tjj7b4das5tmkny2e34oseqwqpvo7dpy5zdvzaj2szbyxlyvki.py
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax, prediction], Original ATen: [aten._softmax, aten.argmax]
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   prediction => argmax
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => div, sum_1
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %argmax : [num_users=1] = call_function[target=torch.ops.aten.argmax.default](args = (%div, -2), kwargs = {})
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_argmax_1 = async_compile.triton('triton_poi_fused__softmax_argmax_1', '''
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_argmax_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 20, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_argmax_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 16*x1), xmask)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (16*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 16*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 16*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 16*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (4 + x0 + 16*x1), xmask)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (4 + 16*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (5 + 16*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (6 + 16*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr0 + (7 + 16*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr0 + (8 + x0 + 16*x1), xmask)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (8 + 16*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr0 + (9 + 16*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (10 + 16*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr0 + (11 + 16*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.load(in_ptr0 + (12 + x0 + 16*x1), xmask)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.load(in_ptr0 + (12 + 16*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.load(in_ptr0 + (13 + 16*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.load(in_ptr0 + (14 + 16*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tl.load(in_ptr0 + (15 + 16*x1), xmask, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 + tmp13
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp9 / tmp16
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp8 > tmp17
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp8 == tmp17
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp8 != tmp8
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 != tmp17
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 > tmp21
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp18 | tmp22
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 & tmp21
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp19 | tmp24
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 0, tl.int64)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.full([1], 1, tl.int64)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 < tmp27
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp25 & tmp28
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp23 | tmp29
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp30, tmp8, tmp17)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp30, tmp26, tmp27)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 + tmp35
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 + tmp37
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 + tmp39
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp33 / tmp40
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp31 > tmp41
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp31 == tmp41
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp31 != tmp31
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp41 != tmp41
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp44 > tmp45
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp42 | tmp46
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp44 & tmp45
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp43 | tmp48
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.full([1], 2, tl.int64)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp32 < tmp50
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp49 & tmp51
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp47 | tmp52
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.where(tmp53, tmp31, tmp41)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.where(tmp53, tmp32, tmp50)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp57 + tmp58
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp59 + tmp60
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp61 + tmp62
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp56 / tmp63
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp54 > tmp64
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp54 == tmp64
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp54 != tmp54
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp64 != tmp64
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp67 > tmp68
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp65 | tmp69
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp67 & tmp68
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp66 | tmp71
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.full([1], 3, tl.int64)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp55 < tmp73
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp72 & tmp74
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp70 | tmp75
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.where(tmp76, tmp54, tmp64)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.where(tmp76, tmp55, tmp73)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp78, xmask)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/my/cmyhwbqznzdoy2b75iljmflbwo2frt6mmmbwq6b4p52kau4oeywh.py
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [scores, sum_1, truediv], Original ATen: [aten.eq, aten.sum, aten.div]
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   scores => eq
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_2
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div_1
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Tensor](args = (%argmax, %arg1_1), kwargs = {})
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%eq,), kwargs = {})
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_2, 256.0), kwargs = {})
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_div_eq_sum_2 = async_compile.triton('triton_per_fused_div_eq_sum_2', '''
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_div_eq_sum_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_div_eq_sum_2(in_ptr0, in_ptr1, out_ptr1, xnumel, rnumel):
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 64)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None, eviction_policy='evict_last')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (r2), None)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 == tmp2
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3.to(tl.int64)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [RBLOCK])
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.promote_to_tensor(tl.sum(tmp5, 0))
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7.to(tl.float32)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 0.00390625
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.full([1], 0, tl.int32)), tmp10, None)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_0.run(arg0_1, buf0, 256, grid=grid(256), stream=stream0)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.int64)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax, prediction], Original ATen: [aten._softmax, aten.argmax]
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_argmax_1.run(buf0, buf1, 64, grid=grid(64), stream=stream0)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((), (), torch.float32)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [scores, sum_1, truediv], Original ATen: [aten.eq, aten.sum, aten.div]
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_div_eq_sum_2.run(buf1, arg1_1, buf3, 1, 256, grid=grid(1), stream=stream0)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf3, )
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:11:51.409000 2905971 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:11:51.415000 2905971 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/uh/cuhikocrz7seqg7r2x342dpcua3dq3yglaya27ki3u37ytaxrxx3.py
