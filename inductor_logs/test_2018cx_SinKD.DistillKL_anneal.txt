V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['1_inference']
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/mf/cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub, truediv, mul, temperature, truediv_2, p_t, truediv_1, p_s, mul_1, sum_1, mean, loss], Original ATen: [aten.sub, aten.reciprocal, aten.mul, aten.add, aten.div, aten._softmax, aten._log_softmax, aten.sum, aten.mean, aten.neg]
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => neg
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_1
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_2
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   p_s => amax, exp, log, sub_1, sub_2, sum_1
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   p_t => amax_1, div_2, exp_1, sub_3, sum_2
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_3
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   temperature => add
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => mul, reciprocal
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_1 => div
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_2 => div_1
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, 1), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %reciprocal : [num_users=1] = call_function[target=torch.ops.aten.reciprocal.default](args = (%sub,), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%reciprocal, -3), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %arg1_1), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, 4), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%arg3_1, %add), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_1 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%div_1, [-1], True), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_1, %amax_1), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_3,), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [-1], True), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_1, %sum_2), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%arg2_1, %add), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%div, [-1], True), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div, %amax), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_1,), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_1, %log), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_2, %sub_2), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_2, [-1]), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sum_3,), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%mean,), kwargs = {})
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0 = async_compile.triton('triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0', '''
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 6), 'tt.equal_to': (5,)}, 'cls': 'AttrsDescriptor'})]},
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0', 'mutated_arg_names': ['in_out_ptr1'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0(in_out_ptr1, in_ptr0, in_ptr1, in_ptr2, in_ptr3, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*r0), None, eviction_policy='evict_last')
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4*r0), None, eviction_policy='evict_last')
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr2 + (4*r0), None, eviction_policy='evict_last')
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (1 + 4*r0), None, eviction_policy='evict_last')
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr1 + (1 + 4*r0), None, eviction_policy='evict_last')
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr2 + (1 + 4*r0), None, eviction_policy='evict_last')
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (2 + 4*r0), None, eviction_policy='evict_last')
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (2 + 4*r0), None, eviction_policy='evict_last')
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr2 + (2 + 4*r0), None, eviction_policy='evict_last')
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr0 + (3 + 4*r0), None, eviction_policy='evict_last')
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr1 + (3 + 4*r0), None, eviction_policy='evict_last')
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr2 + (3 + 4*r0), None, eviction_policy='evict_last')
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr3 + (4*r0), None, eviction_policy='evict_last')
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr3 + (1 + 4*r0), None, eviction_policy='evict_last')
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.load(in_ptr3 + (2 + 4*r0), None, eviction_policy='evict_last')
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr3 + (3 + 4*r0), None, eviction_policy='evict_last')
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 1.0
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 - tmp2
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([1, 1], 1, tl.int32)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 / tmp3
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = -3.0
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 * tmp6
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 * tmp8
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 4.0
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp0 / tmp11
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 - tmp2
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp4 / tmp15
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 * tmp6
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp10
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp13 / tmp20
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp12, tmp21)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 - tmp2
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp4 / tmp25
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp6
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 * tmp28
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 + tmp10
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp23 / tmp30
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = triton_helpers.maximum(tmp22, tmp31)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 - tmp2
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp4 / tmp35
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 * tmp6
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 * tmp38
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 + tmp10
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp33 / tmp40
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = triton_helpers.maximum(tmp32, tmp41)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 / tmp11
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 / tmp20
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = triton_helpers.maximum(tmp44, tmp46)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp48 / tmp30
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = triton_helpers.maximum(tmp47, tmp49)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 / tmp40
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = triton_helpers.maximum(tmp50, tmp52)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp44 - tmp53
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl_math.exp(tmp54)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp46 - tmp53
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl_math.exp(tmp56)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp55 + tmp57
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp49 - tmp53
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl_math.exp(tmp59)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp58 + tmp60
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp52 - tmp53
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl_math.exp(tmp62)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp61 + tmp63
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp12 - tmp42
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl_math.exp(tmp65)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp21 - tmp42
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tl_math.exp(tmp67)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp66 + tmp68
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp31 - tmp42
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl_math.exp(tmp70)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp69 + tmp71
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp41 - tmp42
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl_math.exp(tmp73)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp72 + tmp74
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp55 / tmp64
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl_math.log(tmp75)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp65 - tmp77
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp76 * tmp78
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp57 / tmp64
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp67 - tmp77
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp80 * tmp81
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp79 + tmp82
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp60 / tmp64
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp70 - tmp77
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp84 * tmp85
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp83 + tmp86
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp63 / tmp64
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tmp73 - tmp77
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp88 * tmp89
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp87 + tmp90
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tl.broadcast_to(tmp91, [XBLOCK, RBLOCK])
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tl.sum(tmp92, 1)[:, None]
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = 64.0
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp94 / tmp95
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = -tmp96
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr1 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp97, None)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg3_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((), (), torch.float32)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf5; del buf5  # reuse
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub, truediv, mul, temperature, truediv_2, p_t, truediv_1, p_s, mul_1, sum_1, mean, loss], Original ATen: [aten.sub, aten.reciprocal, aten.mul, aten.add, aten.div, aten._softmax, aten._log_softmax, aten.sum, aten.mean, aten.neg]
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0.run(buf6, arg2_1, arg0_1, arg1_1, arg3_1, 1, 64, grid=grid(1), stream=stream0)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg3_1
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf6, )
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg3_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:21:26.161000 3326316 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:21:26.164000 3326316 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/xe/cxeway4xmukrccexjhzcgttr6ixt3oioyfwvpo3i4prsftlqb6he.py
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['1_inference']
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/mf/cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub, truediv, mul, temperature, truediv_2, p_t, truediv_1, p_s, mul_1, sum_1, mean, loss], Original ATen: [aten.sub, aten.reciprocal, aten.mul, aten.add, aten.div, aten._softmax, aten._log_softmax, aten.sum, aten.mean, aten.neg]
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => neg
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_1
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_2
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   p_s => amax, exp, log, sub_1, sub_2, sum_1
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   p_t => amax_1, div_2, exp_1, sub_3, sum_2
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_3
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   temperature => add
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => mul, reciprocal
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_1 => div
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_2 => div_1
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, 1), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %reciprocal : [num_users=1] = call_function[target=torch.ops.aten.reciprocal.default](args = (%sub,), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%reciprocal, -3), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %arg1_1), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, 4), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%arg3_1, %add), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_1 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%div_1, [-1], True), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_1, %amax_1), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_3,), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [-1], True), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_1, %sum_2), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%arg2_1, %add), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%div, [-1], True), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div, %amax), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_1,), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_1, %log), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_2, %sub_2), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_2, [-1]), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sum_3,), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%mean,), kwargs = {})
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0 = async_compile.triton('triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0', '''
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 6), 'tt.equal_to': (5,)}, 'cls': 'AttrsDescriptor'})]},
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0', 'mutated_arg_names': ['in_out_ptr1'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0(in_out_ptr1, in_ptr0, in_ptr1, in_ptr2, in_ptr3, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*r0), None, eviction_policy='evict_last')
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4*r0), None, eviction_policy='evict_last')
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr2 + (4*r0), None, eviction_policy='evict_last')
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (1 + 4*r0), None, eviction_policy='evict_last')
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr1 + (1 + 4*r0), None, eviction_policy='evict_last')
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr2 + (1 + 4*r0), None, eviction_policy='evict_last')
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (2 + 4*r0), None, eviction_policy='evict_last')
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (2 + 4*r0), None, eviction_policy='evict_last')
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr2 + (2 + 4*r0), None, eviction_policy='evict_last')
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr0 + (3 + 4*r0), None, eviction_policy='evict_last')
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr1 + (3 + 4*r0), None, eviction_policy='evict_last')
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr2 + (3 + 4*r0), None, eviction_policy='evict_last')
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr3 + (4*r0), None, eviction_policy='evict_last')
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.load(in_ptr3 + (1 + 4*r0), None, eviction_policy='evict_last')
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.load(in_ptr3 + (2 + 4*r0), None, eviction_policy='evict_last')
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr3 + (3 + 4*r0), None, eviction_policy='evict_last')
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 1.0
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 - tmp2
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([1, 1], 1, tl.int32)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 / tmp3
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = -3.0
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 * tmp6
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 * tmp8
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 4.0
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp0 / tmp11
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 - tmp2
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp4 / tmp15
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 * tmp6
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp10
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp13 / tmp20
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp12, tmp21)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 - tmp2
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp4 / tmp25
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp6
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 * tmp28
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 + tmp10
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp23 / tmp30
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = triton_helpers.maximum(tmp22, tmp31)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 - tmp2
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp4 / tmp35
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 * tmp6
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 * tmp38
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 + tmp10
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp33 / tmp40
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = triton_helpers.maximum(tmp32, tmp41)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 / tmp11
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp45 / tmp20
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = triton_helpers.maximum(tmp44, tmp46)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp48 / tmp30
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = triton_helpers.maximum(tmp47, tmp49)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 / tmp40
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = triton_helpers.maximum(tmp50, tmp52)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp44 - tmp53
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl_math.exp(tmp54)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp46 - tmp53
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl_math.exp(tmp56)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp55 + tmp57
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp49 - tmp53
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl_math.exp(tmp59)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp58 + tmp60
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp52 - tmp53
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl_math.exp(tmp62)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp61 + tmp63
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp12 - tmp42
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl_math.exp(tmp65)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp21 - tmp42
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tl_math.exp(tmp67)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp66 + tmp68
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp31 - tmp42
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl_math.exp(tmp70)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp69 + tmp71
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp41 - tmp42
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl_math.exp(tmp73)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp72 + tmp74
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp55 / tmp64
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl_math.log(tmp75)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp65 - tmp77
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp76 * tmp78
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp57 / tmp64
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp67 - tmp77
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp80 * tmp81
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp79 + tmp82
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp60 / tmp64
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp70 - tmp77
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp84 * tmp85
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp83 + tmp86
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp63 / tmp64
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tmp73 - tmp77
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp88 * tmp89
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp87 + tmp90
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tl.broadcast_to(tmp91, [XBLOCK, RBLOCK])
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tl.sum(tmp92, 1)[:, None]
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = 64.0
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp94 / tmp95
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = -tmp96
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr1 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp97, None)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg3_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((), (), torch.float32)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf5; del buf5  # reuse
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub, truediv, mul, temperature, truediv_2, p_t, truediv_1, p_s, mul_1, sum_1, mean, loss], Original ATen: [aten.sub, aten.reciprocal, aten.mul, aten.add, aten.div, aten._softmax, aten._log_softmax, aten.sum, aten.mean, aten.neg]
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0.run(buf6, arg2_1, arg0_1, arg1_1, arg3_1, 1, 64, grid=grid(1), stream=stream0)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg3_1
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf6, )
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg3_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:11:28.344000 1954318 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:11:28.349000 1954318 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/dn/cdnztmzli6wupb7qj2b5ytscdgldc5g4pyv2yoalv3ql4q7p47oi.py
