V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['18_forward']
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/s4/cs4ldyhblxgwadizz3jjaknyygoops7xwlhwdi3omnuhxbt3qaym.py
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 32, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 24
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 27*y1), tmp0, xmask & ymask)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/f3/cf3yvvrx2dp4pn5dwcyzm6qhg7y76yekqxcww4ry23bgzk3jew7k.py
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4096}, tile_hint=TileHint.SQUARE,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 12
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 4096*y3), ymask, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 12288*y1), tmp0, ymask)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fb/cfbtq7ddhl4c5b4ap7y2tcwtjlcdppsviuwhlqjox7ynokb7i36y.py
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_1, mul_1, mul_2, sub
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => gt, mul_3, where
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_1, 0), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, 0.1), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt, %add_1, %mul_3), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_2', '''
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 8)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/66/c66d3hhhxgi4gjtcasyrzpdp5yzkhsesifqpw6xb2q6yk4urlrab.py
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_8, input_9], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => add_5, mul_10, mul_9, sub_2
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => gt_2, mul_11, where_2
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_2, %unsqueeze_17), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %unsqueeze_19), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_9, %unsqueeze_21), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_10, %unsqueeze_23), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_2 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_5, 0), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_5, 0.1), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_2 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_2, %add_5, %mul_11), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_3', '''
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_3(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 65536
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/aa/caaxiaakdiefq4q72c6jyxx3qeuylbqam6wp5ny24hrmifjmrgik.py
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => add_7, mul_13, mul_14, sub_3
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => gt_3, mul_15, where_3
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_3, %unsqueeze_25), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %unsqueeze_27), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, %unsqueeze_29), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_14, %unsqueeze_31), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_3 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_7, 0), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_7, 0.1), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_3 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_3, %add_7, %mul_15), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4', '''
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/e3/ce3yyuknlbcmzwhno5onbfnzs7kpktikr6mqc4g2lhqf5yqau2s2.py
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_14, input_15], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_14 => add_9, mul_17, mul_18, sub_4
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_15 => gt_4, mul_19, where_4
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_4, %unsqueeze_33), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_35), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_18 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_17, %unsqueeze_37), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_18, %unsqueeze_39), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_4 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_9, 0), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_9, 0.1), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_4 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_4, %add_9, %mul_19), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_5 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_5', '''
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_5(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/m3/cm3crsxzxrvaztpxq7b6xmjfybi2l2zv6vammzioe2pjxdbiggz6.py
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_23, input_24], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_23 => add_15, mul_29, mul_30, sub_7
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_24 => gt_7, mul_31, where_7
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_7, %unsqueeze_57), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_29 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_7, %unsqueeze_59), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_30 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_29, %unsqueeze_61), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_15 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_30, %unsqueeze_63), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_7 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_15, 0), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_31 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_15, 0.1), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_7 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_7, %add_15, %mul_31), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_6 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_6', '''
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_6', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_6(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8192
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/y4/cy45mjpvqutg4bvczwzgb7whpbr4ayf4rim4ew5c32xtui2qsjam.py
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_26, input_27], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_26 => add_17, mul_33, mul_34, sub_8
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_27 => gt_8, mul_35, where_8
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_8, %unsqueeze_65), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_33 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %unsqueeze_67), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_34 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_33, %unsqueeze_69), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_17 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_34, %unsqueeze_71), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_8 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_17, 0), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_35 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_17, 0.1), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_8 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_8, %add_17, %mul_35), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7', '''
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lj/cljgagjv2il7o7thxo77mbussoala53zka2acohdtnlbmarntzr4.py
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_35, input_36], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_35 => add_23, mul_45, mul_46, sub_11
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_36 => gt_11, mul_47, where_11
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_11, %unsqueeze_89), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_45 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %unsqueeze_91), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_46 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_45, %unsqueeze_93), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_23 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_46, %unsqueeze_95), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_11 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_23, 0), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_47 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_23, 0.1), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_11 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_11, %add_23, %mul_47), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_8 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_8', '''
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_8', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_8(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5d/c5d3sfk6vtwspr4vj6gvxzh73xm4yiggza2y4dzaym6tn4rj77jb.py
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_38, input_39], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_38 => add_25, mul_49, mul_50, sub_12
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_39 => gt_12, mul_51, where_12
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_12 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_12, %unsqueeze_97), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_49 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_12, %unsqueeze_99), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_50 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_49, %unsqueeze_101), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_25 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_50, %unsqueeze_103), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_12 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_25, 0), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_51 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_25, 0.1), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_12 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_12, %add_25, %mul_51), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9', '''
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8192
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3l/c3llxi2sjdaws6mbr6yjqukoo3cm72afrnbclmy3mwrssnl5fhtv.py
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_71, input_72], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_71 => add_47, mul_93, mul_94, sub_23
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_72 => gt_23, mul_95, where_23
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_23 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_23, %unsqueeze_185), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_93 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_23, %unsqueeze_187), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_94 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_93, %unsqueeze_189), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_47 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_94, %unsqueeze_191), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_23 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_47, 0), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_95 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_47, 0.1), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_23 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_23, %add_47, %mul_95), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10', '''
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2048
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, xmask)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/j7/cj7jzaghftzyh6t65d6oeatajiq6nllpxj4iiykf6htlc4seouf4.py
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_74, input_75], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_74 => add_49, mul_97, mul_98, sub_24
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_75 => gt_24, mul_99, where_24
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_24 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_24, %unsqueeze_193), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_97 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_24, %unsqueeze_195), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_98 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_97, %unsqueeze_197), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_49 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_98, %unsqueeze_199), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_24 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_49, 0), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_99 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_49, 0.1), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_24 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_24, %add_49, %mul_99), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_11 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_11', '''
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_11', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_11(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/64/c64oewfopdkwp6akiffzs7vbsaxyouewjocn74qs5hlwxwpjlqir.py
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_80], Original ATen: [aten._native_batch_norm_legit_no_training]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_80 => add_53, mul_105, mul_106, sub_26
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_26 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_26, %unsqueeze_209), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_105 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_26, %unsqueeze_211), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_106 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_105, %unsqueeze_213), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_53 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_106, %unsqueeze_215), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_12 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_12', '''
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_12', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_12(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp15, None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/e4/ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_81, x], Original ATen: [aten.leaky_relu, aten.mean]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_81 => gt_26, mul_107, where_26
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => mean
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_26 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_53, 0), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_107 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_53, 0.1), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_26 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_26, %add_53, %mul_107), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%where_26, [-1, -2], True), kwargs = {})
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_leaky_relu_mean_13 = async_compile.triton('triton_poi_fused_leaky_relu_mean_13', '''
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_leaky_relu_mean_13', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_leaky_relu_mean_13(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 256
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 1024*x1), xmask)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (256 + x0 + 1024*x1), xmask)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (512 + x0 + 1024*x1), xmask)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (768 + x0 + 1024*x1), xmask)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp0, tmp4)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 > tmp1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp3
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(tmp7, tmp6, tmp8)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp5 + tmp9
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 > tmp1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp3
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp12, tmp11, tmp13)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp10 + tmp14
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 > tmp1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp3
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp17, tmp16, tmp18)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp15 + tmp19
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 4.0
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 / tmp21
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp22, xmask)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138 = args
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (8, 3, 3, 3), (27, 9, 3, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 3, 64, 64), (12288, 4096, 64, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (8, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (8, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (8, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (8, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (8, 1, 3, 3), (9, 9, 3, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (8, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (8, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (8, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (8, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (16, 8, 1, 1), (8, 1, 1, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (16, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (16, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (16, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (16, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (16, 1, 3, 3), (9, 9, 3, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (16, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (16, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (16, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (16, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (32, 16, 1, 1), (16, 1, 1, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (32, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (32, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (32, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (32, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (32, 1, 3, 3), (9, 9, 3, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (32, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (32, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (32, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (32, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (32, 32, 1, 1), (32, 1, 1, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (32, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (32, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (32, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (32, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (32, 1, 3, 3), (9, 9, 3, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (32, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (32, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_40, (32, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_41, (32, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_42, (64, 32, 1, 1), (32, 1, 1, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_43, (64, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_44, (64, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_45, (64, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_46, (64, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_47, (64, 1, 3, 3), (9, 9, 3, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_48, (64, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_49, (64, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_50, (64, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_51, (64, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_52, (64, 64, 1, 1), (64, 1, 1, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_53, (64, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_54, (64, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_55, (64, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_56, (64, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_57, (64, 1, 3, 3), (9, 9, 3, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_58, (64, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_59, (64, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_60, (64, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_61, (64, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_62, (128, 64, 1, 1), (64, 1, 1, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_63, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_64, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_65, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_66, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_67, (128, 1, 3, 3), (9, 9, 3, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_68, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_69, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_70, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_71, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_72, (128, 128, 1, 1), (128, 1, 1, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_73, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_74, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_75, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_76, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_77, (128, 1, 3, 3), (9, 9, 3, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_78, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_79, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_80, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_81, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_82, (128, 128, 1, 1), (128, 1, 1, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_83, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_84, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_85, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_86, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_87, (128, 1, 3, 3), (9, 9, 3, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_88, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_89, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_90, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_91, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_92, (128, 128, 1, 1), (128, 1, 1, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_93, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_94, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_95, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_96, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_97, (128, 1, 3, 3), (9, 9, 3, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_98, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_99, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_100, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_101, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_102, (128, 128, 1, 1), (128, 1, 1, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_103, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_104, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_105, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_106, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_107, (128, 1, 3, 3), (9, 9, 3, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_108, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_109, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_110, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_111, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_112, (128, 128, 1, 1), (128, 1, 1, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_113, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_114, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_115, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_116, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_117, (128, 1, 3, 3), (9, 9, 3, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_118, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_119, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_120, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_121, (128, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_122, (256, 128, 1, 1), (128, 1, 1, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_123, (256, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_124, (256, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_125, (256, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_126, (256, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_127, (256, 1, 3, 3), (9, 9, 3, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_128, (256, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_129, (256, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_130, (256, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_131, (256, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_132, (256, 256, 1, 1), (256, 1, 1, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_133, (256, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_134, (256, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_135, (256, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_136, (256, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_137, (1000, 256), (256, 1))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_138, (1000, ), (1, ))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((8, 3, 3, 3), (27, 1, 9, 3), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_1, buf0, 24, 9, grid=grid(24, 9), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 3, 64, 64), (12288, 1, 192, 3), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_2, buf1, 12, 4096, grid=grid(12, 4096), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, buf0, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 8, 32, 32), (8192, 1, 256, 8))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 8, 32, 32), (8192, 1, 256, 8), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf3; del buf3  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_2.run(buf4, buf2, primals_3, primals_4, primals_5, primals_6, 32768, grid=grid(32768), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, primals_7, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=8, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 8, 32, 32), (8192, 1, 256, 8))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 8, 32, 32), (8192, 1, 256, 8), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf6; del buf6  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_2.run(buf7, buf5, primals_8, primals_9, primals_10, primals_11, 32768, grid=grid(32768), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf7, primals_12, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 16, 32, 32), (16384, 1, 512, 16))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 16, 32, 32), (16384, 1, 512, 16), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf9; del buf9  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8, input_9], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_3.run(buf10, buf8, primals_13, primals_14, primals_15, primals_16, 65536, grid=grid(65536), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_16
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_10], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_17, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=16, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 16, 16, 16), (4096, 1, 256, 16))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 16, 16, 16), (4096, 1, 256, 16), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = buf12; del buf12  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4.run(buf13, buf11, primals_18, primals_19, primals_20, primals_21, 16384, grid=grid(16384), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_21
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_13], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = extern_kernels.convolution(buf13, primals_22, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf14, (4, 32, 16, 16), (8192, 1, 512, 32))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 32, 16, 16), (8192, 1, 512, 32), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf15; del buf15  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_14, input_15], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_5.run(buf16, buf14, primals_23, primals_24, primals_25, primals_26, 32768, grid=grid(32768), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_26
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_16], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = extern_kernels.convolution(buf16, primals_27, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=32, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf17, (4, 32, 16, 16), (8192, 1, 512, 32))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 32, 16, 16), (8192, 1, 512, 32), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = buf18; del buf18  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_17, input_18], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_5.run(buf19, buf17, primals_28, primals_29, primals_30, primals_31, 32768, grid=grid(32768), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_31
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_19], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = extern_kernels.convolution(buf19, primals_32, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf20, (4, 32, 16, 16), (8192, 1, 512, 32))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 32, 16, 16), (8192, 1, 512, 32), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = buf21; del buf21  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_20, input_21], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_5.run(buf22, buf20, primals_33, primals_34, primals_35, primals_36, 32768, grid=grid(32768), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_36
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_22], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = extern_kernels.convolution(buf22, primals_37, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=32, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf23, (4, 32, 8, 8), (2048, 1, 256, 32))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((4, 32, 8, 8), (2048, 1, 256, 32), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = buf24; del buf24  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_23, input_24], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_6.run(buf25, buf23, primals_38, primals_39, primals_40, primals_41, 8192, grid=grid(8192), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_41
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_25], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = extern_kernels.convolution(buf25, primals_42, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf26, (4, 64, 8, 8), (4096, 1, 512, 64))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = empty_strided_cuda((4, 64, 8, 8), (4096, 1, 512, 64), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = buf27; del buf27  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_26, input_27], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7.run(buf28, buf26, primals_43, primals_44, primals_45, primals_46, 16384, grid=grid(16384), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_46
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_28], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = extern_kernels.convolution(buf28, primals_47, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=64, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf29, (4, 64, 8, 8), (4096, 1, 512, 64))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((4, 64, 8, 8), (4096, 1, 512, 64), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = buf30; del buf30  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_29, input_30], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7.run(buf31, buf29, primals_48, primals_49, primals_50, primals_51, 16384, grid=grid(16384), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_51
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_31], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = extern_kernels.convolution(buf31, primals_52, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf32, (4, 64, 8, 8), (4096, 1, 512, 64))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = empty_strided_cuda((4, 64, 8, 8), (4096, 1, 512, 64), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = buf33; del buf33  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_32, input_33], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7.run(buf34, buf32, primals_53, primals_54, primals_55, primals_56, 16384, grid=grid(16384), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_56
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_34], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = extern_kernels.convolution(buf34, primals_57, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=64, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf35, (4, 64, 4, 4), (1024, 1, 256, 64))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = empty_strided_cuda((4, 64, 4, 4), (1024, 1, 256, 64), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = buf36; del buf36  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_35, input_36], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_8.run(buf37, buf35, primals_58, primals_59, primals_60, primals_61, 4096, grid=grid(4096), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_61
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_37], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf38 = extern_kernels.convolution(buf37, primals_62, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf38, (4, 128, 4, 4), (2048, 1, 512, 128))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf39 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf40 = buf39; del buf39  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_38, input_39], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf40, buf38, primals_63, primals_64, primals_65, primals_66, 8192, grid=grid(8192), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_66
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_40], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf41 = extern_kernels.convolution(buf40, primals_67, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=128, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf41, (4, 128, 4, 4), (2048, 1, 512, 128))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf42 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf43 = buf42; del buf42  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_41, input_42], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf43, buf41, primals_68, primals_69, primals_70, primals_71, 8192, grid=grid(8192), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_71
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_43], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf44 = extern_kernels.convolution(buf43, primals_72, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf44, (4, 128, 4, 4), (2048, 1, 512, 128))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf45 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf46 = buf45; del buf45  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_44, input_45], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf46, buf44, primals_73, primals_74, primals_75, primals_76, 8192, grid=grid(8192), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_76
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_46], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf47 = extern_kernels.convolution(buf46, primals_77, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=128, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf47, (4, 128, 4, 4), (2048, 1, 512, 128))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf48 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf49 = buf48; del buf48  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_47, input_48], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf49, buf47, primals_78, primals_79, primals_80, primals_81, 8192, grid=grid(8192), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_81
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_49], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf50 = extern_kernels.convolution(buf49, primals_82, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf50, (4, 128, 4, 4), (2048, 1, 512, 128))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf51 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf52 = buf51; del buf51  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_50, input_51], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf52, buf50, primals_83, primals_84, primals_85, primals_86, 8192, grid=grid(8192), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_86
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_52], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf53 = extern_kernels.convolution(buf52, primals_87, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=128, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf53, (4, 128, 4, 4), (2048, 1, 512, 128))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf54 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf55 = buf54; del buf54  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_53, input_54], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf55, buf53, primals_88, primals_89, primals_90, primals_91, 8192, grid=grid(8192), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_91
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_55], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf56 = extern_kernels.convolution(buf55, primals_92, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf56, (4, 128, 4, 4), (2048, 1, 512, 128))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf57 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf58 = buf57; del buf57  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_56, input_57], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf58, buf56, primals_93, primals_94, primals_95, primals_96, 8192, grid=grid(8192), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_96
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_58], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf59 = extern_kernels.convolution(buf58, primals_97, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=128, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf59, (4, 128, 4, 4), (2048, 1, 512, 128))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf60 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf61 = buf60; del buf60  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_59, input_60], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf61, buf59, primals_98, primals_99, primals_100, primals_101, 8192, grid=grid(8192), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_101
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_61], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf62 = extern_kernels.convolution(buf61, primals_102, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf62, (4, 128, 4, 4), (2048, 1, 512, 128))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf63 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf64 = buf63; del buf63  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_62, input_63], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf64, buf62, primals_103, primals_104, primals_105, primals_106, 8192, grid=grid(8192), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_106
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_64], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf65 = extern_kernels.convolution(buf64, primals_107, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=128, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf65, (4, 128, 4, 4), (2048, 1, 512, 128))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf66 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf67 = buf66; del buf66  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_65, input_66], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf67, buf65, primals_108, primals_109, primals_110, primals_111, 8192, grid=grid(8192), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_111
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_67], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf68 = extern_kernels.convolution(buf67, primals_112, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf68, (4, 128, 4, 4), (2048, 1, 512, 128))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf69 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf70 = buf69; del buf69  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_68, input_69], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf70, buf68, primals_113, primals_114, primals_115, primals_116, 8192, grid=grid(8192), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_116
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_70], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf71 = extern_kernels.convolution(buf70, primals_117, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=128, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf71, (4, 128, 2, 2), (512, 1, 256, 128))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf72 = empty_strided_cuda((4, 128, 2, 2), (512, 1, 256, 128), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf73 = buf72; del buf72  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_71, input_72], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10.run(buf73, buf71, primals_118, primals_119, primals_120, primals_121, 2048, grid=grid(2048), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_121
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_73], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf74 = extern_kernels.convolution(buf73, primals_122, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf74, (4, 256, 2, 2), (1024, 1, 512, 256))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf75 = empty_strided_cuda((4, 256, 2, 2), (1024, 1, 512, 256), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf76 = buf75; del buf75  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_74, input_75], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_11.run(buf76, buf74, primals_123, primals_124, primals_125, primals_126, 4096, grid=grid(4096), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_126
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_76], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf77 = extern_kernels.convolution(buf76, primals_127, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=256, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf77, (4, 256, 2, 2), (1024, 1, 512, 256))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf78 = empty_strided_cuda((4, 256, 2, 2), (1024, 1, 512, 256), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf79 = buf78; del buf78  # reuse
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_77, input_78], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_11.run(buf79, buf77, primals_128, primals_129, primals_130, primals_131, 4096, grid=grid(4096), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_131
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_79], Original ATen: [aten.convolution]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf80 = extern_kernels.convolution(buf79, primals_132, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf80, (4, 256, 2, 2), (1024, 1, 512, 256))
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf81 = empty_strided_cuda((4, 256, 2, 2), (1024, 1, 512, 256), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_80], Original ATen: [aten._native_batch_norm_legit_no_training]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_12.run(buf80, primals_133, primals_134, primals_135, primals_136, buf81, 4096, grid=grid(4096), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf82 = empty_strided_cuda((4, 256, 1, 1), (256, 1, 1024, 1024), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_81, x], Original ATen: [aten.leaky_relu, aten.mean]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_mean_13.run(buf81, buf82, 1024, grid=grid(1024), stream=stream0)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf81
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf83 = empty_strided_cuda((4, 1000), (1000, 1), torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.addmm]
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_138, reinterpret_tensor(buf82, (4, 256), (256, 1), 0), reinterpret_tensor(primals_137, (256, 1000), (1, 256), 0), alpha=1, beta=1, out=buf83)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_138
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf83, buf0, buf1, primals_3, primals_4, primals_5, primals_7, primals_8, primals_9, primals_10, primals_12, primals_13, primals_14, primals_15, primals_17, primals_18, primals_19, primals_20, primals_22, primals_23, primals_24, primals_25, primals_27, primals_28, primals_29, primals_30, primals_32, primals_33, primals_34, primals_35, primals_37, primals_38, primals_39, primals_40, primals_42, primals_43, primals_44, primals_45, primals_47, primals_48, primals_49, primals_50, primals_52, primals_53, primals_54, primals_55, primals_57, primals_58, primals_59, primals_60, primals_62, primals_63, primals_64, primals_65, primals_67, primals_68, primals_69, primals_70, primals_72, primals_73, primals_74, primals_75, primals_77, primals_78, primals_79, primals_80, primals_82, primals_83, primals_84, primals_85, primals_87, primals_88, primals_89, primals_90, primals_92, primals_93, primals_94, primals_95, primals_97, primals_98, primals_99, primals_100, primals_102, primals_103, primals_104, primals_105, primals_107, primals_108, primals_109, primals_110, primals_112, primals_113, primals_114, primals_115, primals_117, primals_118, primals_119, primals_120, primals_122, primals_123, primals_124, primals_125, primals_127, primals_128, primals_129, primals_130, primals_132, primals_133, primals_134, primals_135, primals_136, buf2, buf4, buf5, buf7, buf8, buf10, buf11, buf13, buf14, buf16, buf17, buf19, buf20, buf22, buf23, buf25, buf26, buf28, buf29, buf31, buf32, buf34, buf35, buf37, buf38, buf40, buf41, buf43, buf44, buf46, buf47, buf49, buf50, buf52, buf53, buf55, buf56, buf58, buf59, buf61, buf62, buf64, buf65, buf67, buf68, buf70, buf71, buf73, buf74, buf76, buf77, buf79, buf80, reinterpret_tensor(buf82, (4, 256), (256, 1), 0), primals_137, )
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((8, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((8, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((16, 8, 1, 1), (8, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((16, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((32, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((32, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((32, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((32, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_40 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_41 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_42 = rand_strided((64, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_43 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_44 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_45 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_46 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_47 = rand_strided((64, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_48 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_49 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_50 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_51 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_52 = rand_strided((64, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_53 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_54 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_55 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_56 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_57 = rand_strided((64, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_58 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_59 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_60 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_61 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_62 = rand_strided((128, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_63 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_64 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_65 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_66 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_67 = rand_strided((128, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_68 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_69 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_70 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_71 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_72 = rand_strided((128, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_73 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_74 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_75 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_76 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_77 = rand_strided((128, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_78 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_79 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_80 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_81 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_82 = rand_strided((128, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_83 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_84 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_85 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_86 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_87 = rand_strided((128, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_88 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_89 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_90 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_91 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_92 = rand_strided((128, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_93 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_94 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_95 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_96 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_97 = rand_strided((128, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_98 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_99 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_100 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_101 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_102 = rand_strided((128, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_103 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_104 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_105 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_106 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_107 = rand_strided((128, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_108 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_109 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_110 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_111 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_112 = rand_strided((128, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_113 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_114 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_115 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_116 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_117 = rand_strided((128, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_118 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_119 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_120 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_121 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_122 = rand_strided((256, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_123 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_124 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_125 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_126 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_127 = rand_strided((256, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_128 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_129 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_130 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_131 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_132 = rand_strided((256, 256, 1, 1), (256, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_133 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_134 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_135 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_136 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_137 = rand_strided((1000, 256), (256, 1), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_138 = rand_strided((1000, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138])
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:48:43.883000 2081666 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:48:43.913000 2081666 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/am/camzesfeqeyxbesefwenljp4sls5fkcxnpfjwurd4bd4h5e6r5v7.py
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['18_forward']
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/s4/cs4ldyhblxgwadizz3jjaknyygoops7xwlhwdi3omnuhxbt3qaym.py
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 32, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 24
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 27*y1), tmp0, xmask & ymask)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/f3/cf3yvvrx2dp4pn5dwcyzm6qhg7y76yekqxcww4ry23bgzk3jew7k.py
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4096}, tile_hint=TileHint.SQUARE,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 12
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 4096*y3), ymask, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 12288*y1), tmp0, ymask)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fb/cfbtq7ddhl4c5b4ap7y2tcwtjlcdppsviuwhlqjox7ynokb7i36y.py
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_1, mul_1, mul_2, sub
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => gt, mul_3, where
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_1, 0), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, 0.1), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt, %add_1, %mul_3), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_2', '''
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 8)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/66/c66d3hhhxgi4gjtcasyrzpdp5yzkhsesifqpw6xb2q6yk4urlrab.py
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_8, input_9], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => add_5, mul_10, mul_9, sub_2
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => gt_2, mul_11, where_2
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_2, %unsqueeze_17), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %unsqueeze_19), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_9, %unsqueeze_21), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_10, %unsqueeze_23), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_2 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_5, 0), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_5, 0.1), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_2 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_2, %add_5, %mul_11), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_3', '''
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_3(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 65536
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/aa/caaxiaakdiefq4q72c6jyxx3qeuylbqam6wp5ny24hrmifjmrgik.py
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => add_7, mul_13, mul_14, sub_3
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => gt_3, mul_15, where_3
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_3, %unsqueeze_25), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %unsqueeze_27), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, %unsqueeze_29), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_14, %unsqueeze_31), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_3 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_7, 0), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_7, 0.1), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_3 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_3, %add_7, %mul_15), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4', '''
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/e3/ce3yyuknlbcmzwhno5onbfnzs7kpktikr6mqc4g2lhqf5yqau2s2.py
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_14, input_15], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_14 => add_9, mul_17, mul_18, sub_4
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_15 => gt_4, mul_19, where_4
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_4, %unsqueeze_33), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_35), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_18 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_17, %unsqueeze_37), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_18, %unsqueeze_39), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_4 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_9, 0), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_9, 0.1), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_4 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_4, %add_9, %mul_19), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_5 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_5', '''
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 32768}, 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_5(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 32768
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/m3/cm3crsxzxrvaztpxq7b6xmjfybi2l2zv6vammzioe2pjxdbiggz6.py
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_23, input_24], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_23 => add_15, mul_29, mul_30, sub_7
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_24 => gt_7, mul_31, where_7
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_7, %unsqueeze_57), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_29 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_7, %unsqueeze_59), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_30 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_29, %unsqueeze_61), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_15 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_30, %unsqueeze_63), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_7 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_15, 0), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_31 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_15, 0.1), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_7 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_7, %add_15, %mul_31), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_6 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_6', '''
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_6', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_6(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8192
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/y4/cy45mjpvqutg4bvczwzgb7whpbr4ayf4rim4ew5c32xtui2qsjam.py
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_26, input_27], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_26 => add_17, mul_33, mul_34, sub_8
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_27 => gt_8, mul_35, where_8
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_8, %unsqueeze_65), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_33 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %unsqueeze_67), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_34 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_33, %unsqueeze_69), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_17 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_34, %unsqueeze_71), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_8 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_17, 0), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_35 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_17, 0.1), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_8 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_8, %add_17, %mul_35), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7', '''
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/lj/cljgagjv2il7o7thxo77mbussoala53zka2acohdtnlbmarntzr4.py
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_35, input_36], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_35 => add_23, mul_45, mul_46, sub_11
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_36 => gt_11, mul_47, where_11
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_11, %unsqueeze_89), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_45 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %unsqueeze_91), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_46 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_45, %unsqueeze_93), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_23 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_46, %unsqueeze_95), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_11 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_23, 0), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_47 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_23, 0.1), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_11 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_11, %add_23, %mul_47), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_8 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_8', '''
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_8', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_8(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5d/c5d3sfk6vtwspr4vj6gvxzh73xm4yiggza2y4dzaym6tn4rj77jb.py
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_38, input_39], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_38 => add_25, mul_49, mul_50, sub_12
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_39 => gt_12, mul_51, where_12
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_12 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_12, %unsqueeze_97), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_49 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_12, %unsqueeze_99), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_50 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_49, %unsqueeze_101), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_25 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_50, %unsqueeze_103), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_12 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_25, 0), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_51 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_25, 0.1), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_12 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_12, %add_25, %mul_51), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9', '''
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8192
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3l/c3llxi2sjdaws6mbr6yjqukoo3cm72afrnbclmy3mwrssnl5fhtv.py
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_71, input_72], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_71 => add_47, mul_93, mul_94, sub_23
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_72 => gt_23, mul_95, where_23
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_23 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_23, %unsqueeze_185), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_93 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_23, %unsqueeze_187), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_94 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_93, %unsqueeze_189), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_47 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_94, %unsqueeze_191), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_23 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_47, 0), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_95 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_47, 0.1), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_23 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_23, %add_47, %mul_95), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10', '''
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2048
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, xmask)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/j7/cj7jzaghftzyh6t65d6oeatajiq6nllpxj4iiykf6htlc4seouf4.py
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_74, input_75], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_74 => add_49, mul_97, mul_98, sub_24
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_75 => gt_24, mul_99, where_24
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_24 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_24, %unsqueeze_193), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_97 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_24, %unsqueeze_195), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_98 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_97, %unsqueeze_197), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_49 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_98, %unsqueeze_199), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_24 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_49, 0), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_99 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_49, 0.1), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_24 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_24, %add_49, %mul_99), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_11 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_11', '''
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_11', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_11(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 * tmp18
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp20, None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/64/c64oewfopdkwp6akiffzs7vbsaxyouewjocn74qs5hlwxwpjlqir.py
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_80], Original ATen: [aten._native_batch_norm_legit_no_training]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_80 => add_53, mul_105, mul_106, sub_26
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_26 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_26, %unsqueeze_209), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_105 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_26, %unsqueeze_211), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_106 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_105, %unsqueeze_213), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_53 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_106, %unsqueeze_215), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_12 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_12', '''
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_12', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_12(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp15, None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/e4/ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_81, x], Original ATen: [aten.leaky_relu, aten.mean]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_81 => gt_26, mul_107, where_26
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => mean
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_26 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_53, 0), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_107 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_53, 0.1), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_26 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_26, %add_53, %mul_107), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%where_26, [-1, -2], True), kwargs = {})
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_leaky_relu_mean_13 = async_compile.triton('triton_poi_fused_leaky_relu_mean_13', '''
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_leaky_relu_mean_13', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_leaky_relu_mean_13(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 256
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 1024*x1), xmask)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (256 + x0 + 1024*x1), xmask)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (512 + x0 + 1024*x1), xmask)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (768 + x0 + 1024*x1), xmask)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp0, tmp4)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 > tmp1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp3
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(tmp7, tmp6, tmp8)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp5 + tmp9
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 > tmp1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp3
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp12, tmp11, tmp13)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp10 + tmp14
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 > tmp1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp3
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp17, tmp16, tmp18)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp15 + tmp19
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 4.0
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 / tmp21
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp22, xmask)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138 = args
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (8, 3, 3, 3), (27, 9, 3, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 3, 64, 64), (12288, 4096, 64, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (8, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (8, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (8, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (8, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (8, 1, 3, 3), (9, 9, 3, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (8, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (8, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (8, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (8, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (16, 8, 1, 1), (8, 1, 1, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (16, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (16, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (16, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (16, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (16, 1, 3, 3), (9, 9, 3, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (16, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (16, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (16, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (16, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (32, 16, 1, 1), (16, 1, 1, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (32, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (32, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (32, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (32, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (32, 1, 3, 3), (9, 9, 3, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (32, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (32, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (32, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (32, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (32, 32, 1, 1), (32, 1, 1, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (32, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (32, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (32, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (32, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (32, 1, 3, 3), (9, 9, 3, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (32, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (32, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_40, (32, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_41, (32, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_42, (64, 32, 1, 1), (32, 1, 1, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_43, (64, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_44, (64, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_45, (64, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_46, (64, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_47, (64, 1, 3, 3), (9, 9, 3, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_48, (64, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_49, (64, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_50, (64, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_51, (64, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_52, (64, 64, 1, 1), (64, 1, 1, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_53, (64, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_54, (64, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_55, (64, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_56, (64, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_57, (64, 1, 3, 3), (9, 9, 3, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_58, (64, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_59, (64, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_60, (64, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_61, (64, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_62, (128, 64, 1, 1), (64, 1, 1, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_63, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_64, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_65, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_66, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_67, (128, 1, 3, 3), (9, 9, 3, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_68, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_69, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_70, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_71, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_72, (128, 128, 1, 1), (128, 1, 1, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_73, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_74, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_75, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_76, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_77, (128, 1, 3, 3), (9, 9, 3, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_78, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_79, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_80, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_81, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_82, (128, 128, 1, 1), (128, 1, 1, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_83, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_84, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_85, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_86, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_87, (128, 1, 3, 3), (9, 9, 3, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_88, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_89, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_90, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_91, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_92, (128, 128, 1, 1), (128, 1, 1, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_93, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_94, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_95, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_96, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_97, (128, 1, 3, 3), (9, 9, 3, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_98, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_99, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_100, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_101, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_102, (128, 128, 1, 1), (128, 1, 1, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_103, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_104, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_105, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_106, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_107, (128, 1, 3, 3), (9, 9, 3, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_108, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_109, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_110, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_111, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_112, (128, 128, 1, 1), (128, 1, 1, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_113, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_114, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_115, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_116, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_117, (128, 1, 3, 3), (9, 9, 3, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_118, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_119, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_120, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_121, (128, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_122, (256, 128, 1, 1), (128, 1, 1, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_123, (256, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_124, (256, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_125, (256, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_126, (256, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_127, (256, 1, 3, 3), (9, 9, 3, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_128, (256, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_129, (256, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_130, (256, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_131, (256, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_132, (256, 256, 1, 1), (256, 1, 1, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_133, (256, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_134, (256, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_135, (256, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_136, (256, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_137, (1000, 256), (256, 1))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_138, (1000, ), (1, ))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((8, 3, 3, 3), (27, 1, 9, 3), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_1, buf0, 24, 9, grid=grid(24, 9), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 3, 64, 64), (12288, 1, 192, 3), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_2, buf1, 12, 4096, grid=grid(12, 4096), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, buf0, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 8, 32, 32), (8192, 1, 256, 8))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 8, 32, 32), (8192, 1, 256, 8), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf3; del buf3  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_2.run(buf4, buf2, primals_3, primals_4, primals_5, primals_6, 32768, grid=grid(32768), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, primals_7, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=8, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 8, 32, 32), (8192, 1, 256, 8))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 8, 32, 32), (8192, 1, 256, 8), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf6; del buf6  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_2.run(buf7, buf5, primals_8, primals_9, primals_10, primals_11, 32768, grid=grid(32768), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf7, primals_12, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 16, 32, 32), (16384, 1, 512, 16))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 16, 32, 32), (16384, 1, 512, 16), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf9; del buf9  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8, input_9], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_3.run(buf10, buf8, primals_13, primals_14, primals_15, primals_16, 65536, grid=grid(65536), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_16
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_10], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_17, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=16, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 16, 16, 16), (4096, 1, 256, 16))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 16, 16, 16), (4096, 1, 256, 16), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = buf12; del buf12  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_4.run(buf13, buf11, primals_18, primals_19, primals_20, primals_21, 16384, grid=grid(16384), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_21
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_13], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = extern_kernels.convolution(buf13, primals_22, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf14, (4, 32, 16, 16), (8192, 1, 512, 32))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 32, 16, 16), (8192, 1, 512, 32), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = buf15; del buf15  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_14, input_15], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_5.run(buf16, buf14, primals_23, primals_24, primals_25, primals_26, 32768, grid=grid(32768), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_26
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_16], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = extern_kernels.convolution(buf16, primals_27, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=32, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf17, (4, 32, 16, 16), (8192, 1, 512, 32))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 32, 16, 16), (8192, 1, 512, 32), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = buf18; del buf18  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_17, input_18], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_5.run(buf19, buf17, primals_28, primals_29, primals_30, primals_31, 32768, grid=grid(32768), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_31
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_19], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = extern_kernels.convolution(buf19, primals_32, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf20, (4, 32, 16, 16), (8192, 1, 512, 32))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 32, 16, 16), (8192, 1, 512, 32), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = buf21; del buf21  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_20, input_21], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_5.run(buf22, buf20, primals_33, primals_34, primals_35, primals_36, 32768, grid=grid(32768), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_36
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_22], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = extern_kernels.convolution(buf22, primals_37, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=32, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf23, (4, 32, 8, 8), (2048, 1, 256, 32))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((4, 32, 8, 8), (2048, 1, 256, 32), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = buf24; del buf24  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_23, input_24], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_6.run(buf25, buf23, primals_38, primals_39, primals_40, primals_41, 8192, grid=grid(8192), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_41
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_25], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = extern_kernels.convolution(buf25, primals_42, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf26, (4, 64, 8, 8), (4096, 1, 512, 64))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = empty_strided_cuda((4, 64, 8, 8), (4096, 1, 512, 64), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = buf27; del buf27  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_26, input_27], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7.run(buf28, buf26, primals_43, primals_44, primals_45, primals_46, 16384, grid=grid(16384), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_46
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_28], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = extern_kernels.convolution(buf28, primals_47, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=64, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf29, (4, 64, 8, 8), (4096, 1, 512, 64))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((4, 64, 8, 8), (4096, 1, 512, 64), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = buf30; del buf30  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_29, input_30], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7.run(buf31, buf29, primals_48, primals_49, primals_50, primals_51, 16384, grid=grid(16384), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_51
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_31], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = extern_kernels.convolution(buf31, primals_52, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf32, (4, 64, 8, 8), (4096, 1, 512, 64))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = empty_strided_cuda((4, 64, 8, 8), (4096, 1, 512, 64), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = buf33; del buf33  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_32, input_33], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_7.run(buf34, buf32, primals_53, primals_54, primals_55, primals_56, 16384, grid=grid(16384), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_56
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_34], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = extern_kernels.convolution(buf34, primals_57, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=64, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf35, (4, 64, 4, 4), (1024, 1, 256, 64))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = empty_strided_cuda((4, 64, 4, 4), (1024, 1, 256, 64), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = buf36; del buf36  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_35, input_36], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_8.run(buf37, buf35, primals_58, primals_59, primals_60, primals_61, 4096, grid=grid(4096), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_61
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_37], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf38 = extern_kernels.convolution(buf37, primals_62, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf38, (4, 128, 4, 4), (2048, 1, 512, 128))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf39 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf40 = buf39; del buf39  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_38, input_39], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf40, buf38, primals_63, primals_64, primals_65, primals_66, 8192, grid=grid(8192), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_66
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_40], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf41 = extern_kernels.convolution(buf40, primals_67, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=128, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf41, (4, 128, 4, 4), (2048, 1, 512, 128))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf42 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf43 = buf42; del buf42  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_41, input_42], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf43, buf41, primals_68, primals_69, primals_70, primals_71, 8192, grid=grid(8192), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_71
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_43], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf44 = extern_kernels.convolution(buf43, primals_72, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf44, (4, 128, 4, 4), (2048, 1, 512, 128))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf45 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf46 = buf45; del buf45  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_44, input_45], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf46, buf44, primals_73, primals_74, primals_75, primals_76, 8192, grid=grid(8192), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_76
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_46], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf47 = extern_kernels.convolution(buf46, primals_77, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=128, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf47, (4, 128, 4, 4), (2048, 1, 512, 128))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf48 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf49 = buf48; del buf48  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_47, input_48], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf49, buf47, primals_78, primals_79, primals_80, primals_81, 8192, grid=grid(8192), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_81
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_49], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf50 = extern_kernels.convolution(buf49, primals_82, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf50, (4, 128, 4, 4), (2048, 1, 512, 128))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf51 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf52 = buf51; del buf51  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_50, input_51], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf52, buf50, primals_83, primals_84, primals_85, primals_86, 8192, grid=grid(8192), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_86
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_52], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf53 = extern_kernels.convolution(buf52, primals_87, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=128, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf53, (4, 128, 4, 4), (2048, 1, 512, 128))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf54 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf55 = buf54; del buf54  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_53, input_54], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf55, buf53, primals_88, primals_89, primals_90, primals_91, 8192, grid=grid(8192), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_91
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_55], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf56 = extern_kernels.convolution(buf55, primals_92, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf56, (4, 128, 4, 4), (2048, 1, 512, 128))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf57 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf58 = buf57; del buf57  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_56, input_57], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf58, buf56, primals_93, primals_94, primals_95, primals_96, 8192, grid=grid(8192), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_96
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_58], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf59 = extern_kernels.convolution(buf58, primals_97, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=128, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf59, (4, 128, 4, 4), (2048, 1, 512, 128))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf60 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf61 = buf60; del buf60  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_59, input_60], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf61, buf59, primals_98, primals_99, primals_100, primals_101, 8192, grid=grid(8192), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_101
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_61], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf62 = extern_kernels.convolution(buf61, primals_102, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf62, (4, 128, 4, 4), (2048, 1, 512, 128))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf63 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf64 = buf63; del buf63  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_62, input_63], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf64, buf62, primals_103, primals_104, primals_105, primals_106, 8192, grid=grid(8192), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_106
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_64], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf65 = extern_kernels.convolution(buf64, primals_107, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=128, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf65, (4, 128, 4, 4), (2048, 1, 512, 128))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf66 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf67 = buf66; del buf66  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_65, input_66], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf67, buf65, primals_108, primals_109, primals_110, primals_111, 8192, grid=grid(8192), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_111
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_67], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf68 = extern_kernels.convolution(buf67, primals_112, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf68, (4, 128, 4, 4), (2048, 1, 512, 128))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf69 = empty_strided_cuda((4, 128, 4, 4), (2048, 1, 512, 128), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf70 = buf69; del buf69  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_68, input_69], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_9.run(buf70, buf68, primals_113, primals_114, primals_115, primals_116, 8192, grid=grid(8192), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_116
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_70], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf71 = extern_kernels.convolution(buf70, primals_117, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=128, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf71, (4, 128, 2, 2), (512, 1, 256, 128))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf72 = empty_strided_cuda((4, 128, 2, 2), (512, 1, 256, 128), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf73 = buf72; del buf72  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_71, input_72], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10.run(buf73, buf71, primals_118, primals_119, primals_120, primals_121, 2048, grid=grid(2048), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_121
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_73], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf74 = extern_kernels.convolution(buf73, primals_122, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf74, (4, 256, 2, 2), (1024, 1, 512, 256))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf75 = empty_strided_cuda((4, 256, 2, 2), (1024, 1, 512, 256), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf76 = buf75; del buf75  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_74, input_75], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_11.run(buf76, buf74, primals_123, primals_124, primals_125, primals_126, 4096, grid=grid(4096), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_126
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_76], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf77 = extern_kernels.convolution(buf76, primals_127, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=256, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf77, (4, 256, 2, 2), (1024, 1, 512, 256))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf78 = empty_strided_cuda((4, 256, 2, 2), (1024, 1, 512, 256), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf79 = buf78; del buf78  # reuse
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_77, input_78], Original ATen: [aten._native_batch_norm_legit_no_training, aten.leaky_relu]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_11.run(buf79, buf77, primals_128, primals_129, primals_130, primals_131, 4096, grid=grid(4096), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_131
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_79], Original ATen: [aten.convolution]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf80 = extern_kernels.convolution(buf79, primals_132, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf80, (4, 256, 2, 2), (1024, 1, 512, 256))
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf81 = empty_strided_cuda((4, 256, 2, 2), (1024, 1, 512, 256), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_80], Original ATen: [aten._native_batch_norm_legit_no_training]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_12.run(buf80, primals_133, primals_134, primals_135, primals_136, buf81, 4096, grid=grid(4096), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf82 = empty_strided_cuda((4, 256, 1, 1), (256, 1, 1024, 1024), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_81, x], Original ATen: [aten.leaky_relu, aten.mean]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_leaky_relu_mean_13.run(buf81, buf82, 1024, grid=grid(1024), stream=stream0)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf81
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf83 = empty_strided_cuda((4, 1000), (1000, 1), torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.addmm]
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_138, reinterpret_tensor(buf82, (4, 256), (256, 1), 0), reinterpret_tensor(primals_137, (256, 1000), (1, 256), 0), alpha=1, beta=1, out=buf83)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_138
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf83, buf0, buf1, primals_3, primals_4, primals_5, primals_7, primals_8, primals_9, primals_10, primals_12, primals_13, primals_14, primals_15, primals_17, primals_18, primals_19, primals_20, primals_22, primals_23, primals_24, primals_25, primals_27, primals_28, primals_29, primals_30, primals_32, primals_33, primals_34, primals_35, primals_37, primals_38, primals_39, primals_40, primals_42, primals_43, primals_44, primals_45, primals_47, primals_48, primals_49, primals_50, primals_52, primals_53, primals_54, primals_55, primals_57, primals_58, primals_59, primals_60, primals_62, primals_63, primals_64, primals_65, primals_67, primals_68, primals_69, primals_70, primals_72, primals_73, primals_74, primals_75, primals_77, primals_78, primals_79, primals_80, primals_82, primals_83, primals_84, primals_85, primals_87, primals_88, primals_89, primals_90, primals_92, primals_93, primals_94, primals_95, primals_97, primals_98, primals_99, primals_100, primals_102, primals_103, primals_104, primals_105, primals_107, primals_108, primals_109, primals_110, primals_112, primals_113, primals_114, primals_115, primals_117, primals_118, primals_119, primals_120, primals_122, primals_123, primals_124, primals_125, primals_127, primals_128, primals_129, primals_130, primals_132, primals_133, primals_134, primals_135, primals_136, buf2, buf4, buf5, buf7, buf8, buf10, buf11, buf13, buf14, buf16, buf17, buf19, buf20, buf22, buf23, buf25, buf26, buf28, buf29, buf31, buf32, buf34, buf35, buf37, buf38, buf40, buf41, buf43, buf44, buf46, buf47, buf49, buf50, buf52, buf53, buf55, buf56, buf58, buf59, buf61, buf62, buf64, buf65, buf67, buf68, buf70, buf71, buf73, buf74, buf76, buf77, buf79, buf80, reinterpret_tensor(buf82, (4, 256), (256, 1), 0), primals_137, )
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((8, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((8, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((16, 8, 1, 1), (8, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((16, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((32, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((32, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((32, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((32, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_40 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_41 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_42 = rand_strided((64, 32, 1, 1), (32, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_43 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_44 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_45 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_46 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_47 = rand_strided((64, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_48 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_49 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_50 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_51 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_52 = rand_strided((64, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_53 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_54 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_55 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_56 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_57 = rand_strided((64, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_58 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_59 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_60 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_61 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_62 = rand_strided((128, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_63 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_64 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_65 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_66 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_67 = rand_strided((128, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_68 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_69 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_70 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_71 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_72 = rand_strided((128, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_73 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_74 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_75 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_76 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_77 = rand_strided((128, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_78 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_79 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_80 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_81 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_82 = rand_strided((128, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_83 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_84 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_85 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_86 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_87 = rand_strided((128, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_88 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_89 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_90 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_91 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_92 = rand_strided((128, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_93 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_94 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_95 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_96 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_97 = rand_strided((128, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_98 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_99 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_100 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_101 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_102 = rand_strided((128, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_103 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_104 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_105 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_106 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_107 = rand_strided((128, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_108 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_109 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_110 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_111 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_112 = rand_strided((128, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_113 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_114 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_115 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_116 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_117 = rand_strided((128, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_118 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_119 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_120 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_121 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_122 = rand_strided((256, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_123 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_124 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_125 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_126 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_127 = rand_strided((256, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_128 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_129 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_130 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_131 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_132 = rand_strided((256, 256, 1, 1), (256, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_133 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_134 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_135 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_136 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_137 = rand_strided((1000, 256), (256, 1), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_138 = rand_strided((1000, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138])
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:38:16.004000 3611566 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:38:16.035000 3611566 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/ep/cepxcqbzmgvk2abvmdrlewgkjehivzpkac6k3sgg5xilky6jfoo5.py
