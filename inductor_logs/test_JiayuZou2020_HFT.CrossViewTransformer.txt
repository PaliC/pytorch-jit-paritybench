V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_forward']
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4p/c4plrobvgpnjc3xvlxsd34xorqu3wyrshqificqftg56rxqxcttx.py
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d => convolution
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_4, %primals_2, %primals_3, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_0 = async_compile.triton('triton_poi_fused_convolution_0', '''
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 16)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, None)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7h/c7hevtyihr3tq7obijr3wmgma2jxzmpxmvgrve2krrsoxdpvcjsm.py
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_1], Original ATen: [aten.max]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=2] = call_function[target=torch.ops.aten.max.dim](args = (%bmm, 1), kwargs = {})
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_max_1 = async_compile.triton('triton_red_fused_max_1', '''
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384, 'r': 4096},
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i64', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_max_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_max_1(in_ptr0, out_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4096
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4096)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4096
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp2 = tl.full([XBLOCK, RBLOCK], float("-inf"), tl.float32)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], float("-inf"), tl.float32)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4_index = tl.full([XBLOCK, RBLOCK], 9223372036854775807, tl.int64)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0 + 4096*r2 + 16777216*x1), rmask, eviction_policy='evict_first', other=0.0)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = triton_helpers.maximum(_tmp2, tmp1)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp2 = tl.where(rmask, tmp3, _tmp2)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4_next, _tmp4_index_next = triton_helpers.maximum_with_index(
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             _tmp4, _tmp4_index, tmp1, rindex
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         )
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask, _tmp4_next, _tmp4)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4_index = tl.where(rmask, _tmp4_index_next, _tmp4_index)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.max2(_tmp2, 1)[:, None]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4_val, tmp4_idx = triton_helpers.max_with_index(_tmp4, _tmp4_index, 1)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp4_idx[:, None]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp2, None)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp4, None)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/o6/co6a6wbus7xphwilv2u63yh7yu2nlmoy2lyeo5cszbe2tlrspyun.py
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [front_res], Original ATen: [aten.cat]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   front_res => cat
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_4, %view_4], 1), kwargs = {})
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2097152}, 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2097152
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 524288)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 524288
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 1048576*x1), tmp0, None)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qq/cqqriiodoes3nphmv6fo2u7lewdqluf7khotolsful2hbnzayyd2.py
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [front_res], Original ATen: [aten.cat]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   front_res => cat
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_4, %view_4], 1), kwargs = {})
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_3 = async_compile.triton('triton_poi_fused_cat_3', '''
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2097152}, 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_3(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2097152
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4096)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 524288
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 4096
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 128)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 524288)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4096*x2), None, eviction_policy='evict_last')
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (x1), None, eviction_policy='evict_last')
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 4096, tl.int32)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp4) & (tmp4 < 4096), "index out of bounds: 0 <= tmp4 < 4096")
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (4096*x3 + ((tmp4 % 4096))), None, eviction_policy='evict_last')
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4 + 1048576*x2), tmp8, None)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2a/c2ay7cxrnmiwnrg7nckskmxmohi3o7ch2b4mgvwwx6uzrmqpmeig.py
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [front_res_1, front_res_2, output], Original ATen: [aten.convolution, aten.mul, aten.add]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   front_res_1 => convolution_3
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   front_res_2 => mul
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output => add
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%cat, %primals_10, %primals_11, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_3, %view_5), kwargs = {})
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_4, %mul), kwargs = {})
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_convolution_mul_4 = async_compile.triton('triton_poi_fused_add_convolution_mul_4', '''
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2097152}, 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_mul_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_convolution_mul_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2097152
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 128)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4096)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 524288
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x3), None)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (x0 + 4096*x2), None, eviction_policy='evict_last')
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 * tmp4
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 + tmp5
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, None)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp6, None)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11 = args
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 128, 64, 64), (524288, 4096, 64, 1))
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (16, 128, 1, 1), (128, 1, 1, 1))
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (16, ), (1, ))
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 128, 64, 64), (524288, 4096, 64, 1))
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (16, 128, 1, 1), (128, 1, 1, 1))
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (16, ), (1, ))
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (128, 128, 1, 1), (128, 1, 1, 1))
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (128, ), (1, ))
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, 128, 64, 64), (524288, 4096, 64, 1))
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (128, 256, 3, 3), (2304, 9, 3, 1))
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (128, ), (1, ))
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_4, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 16, 64, 64), (65536, 4096, 64, 1))
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(buf1, primals_3, 262144, grid=grid(262144), stream=stream0)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(primals_1, primals_5, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 16, 64, 64), (65536, 4096, 64, 1))
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(buf3, primals_6, 262144, grid=grid(262144), stream=stream0)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4096, 4096), (16777216, 4096, 1), torch.float32)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [energy], Original ATen: [aten.bmm]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf3, (4, 4096, 16), (65536, 1, 4096), 0), reinterpret_tensor(buf1, (4, 16, 4096), (65536, 4096, 1), 0), out=buf4)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4096), (4096, 1), torch.float32)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4096), (4096, 1), torch.int64)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_1], Original ATen: [aten.max]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_max_1.run(buf4, buf5, buf6, 16384, 4096, grid=grid(16384), stream=stream0)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_2], Original ATen: [aten.convolution]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(primals_9, primals_7, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 128, 64, 64), (524288, 4096, 64, 1))
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 256, 64, 64), (1048576, 4096, 64, 1), torch.float32)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf10, (4, 128, 64, 64), (1048576, 4096, 64, 1), 0)  # alias
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [front_res], Original ATen: [aten.cat]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(primals_4, buf8, 2097152, grid=grid(2097152), stream=stream0)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf10, (4, 128, 64, 64), (1048576, 4096, 64, 1), 524288)  # alias
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [front_res], Original ATen: [aten.cat]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_3.run(buf6, buf7, primals_8, buf9, 2097152, grid=grid(2097152), stream=stream0)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [front_res_1], Original ATen: [aten.convolution]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_10, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 128, 64, 64), (524288, 4096, 64, 1))
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf11; del buf11  # reuse
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = buf7; del buf7  # reuse
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [front_res_1, front_res_2, output], Original ATen: [aten.convolution, aten.mul, aten.add]
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_convolution_mul_4.run(buf12, primals_11, primals_4, buf5, buf13, 2097152, grid=grid(2097152), stream=stream0)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf13, primals_1, primals_2, primals_4, primals_5, primals_7, primals_9, primals_10, buf6, reinterpret_tensor(buf5, (4, 1, 64, 64), (4096, 4096, 64, 1), 0), buf10, buf12, reinterpret_tensor(buf3, (4, 16, 4096), (65536, 4096, 1), 0), reinterpret_tensor(buf1, (4, 4096, 16), (65536, 1, 4096), 0), )
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 128, 64, 64), (524288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((16, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 128, 64, 64), (524288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((16, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((128, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, 128, 64, 64), (524288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((128, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11])
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:11:53.627000 678337 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:11:53.633000 678337 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/dk/cdkf4jylp7udjuv2tsbkbbwpqkv6lq5uwdhuw4qe2jazdkdjewmq.py
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_forward']
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4p/c4plrobvgpnjc3xvlxsd34xorqu3wyrshqificqftg56rxqxcttx.py
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   conv2d => convolution
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_4, %primals_2, %primals_3, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_0 = async_compile.triton('triton_poi_fused_convolution_0', '''
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 16)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, None)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7h/c7hevtyihr3tq7obijr3wmgma2jxzmpxmvgrve2krrsoxdpvcjsm.py
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_1], Original ATen: [aten.max]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=2] = call_function[target=torch.ops.aten.max.dim](args = (%bmm, 1), kwargs = {})
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_max_1 = async_compile.triton('triton_red_fused_max_1', '''
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384, 'r': 4096},
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i64', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_max_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_max_1(in_ptr0, out_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 4096
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4096)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4096
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp2 = tl.full([XBLOCK, RBLOCK], float("-inf"), tl.float32)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], float("-inf"), tl.float32)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4_index = tl.full([XBLOCK, RBLOCK], 9223372036854775807, tl.int64)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0 + 4096*r2 + 16777216*x1), rmask, eviction_policy='evict_first', other=0.0)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = triton_helpers.maximum(_tmp2, tmp1)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp2 = tl.where(rmask, tmp3, _tmp2)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4_next, _tmp4_index_next = triton_helpers.maximum_with_index(
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             _tmp4, _tmp4_index, tmp1, rindex
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         )
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask, _tmp4_next, _tmp4)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4_index = tl.where(rmask, _tmp4_index_next, _tmp4_index)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.max2(_tmp2, 1)[:, None]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4_val, tmp4_idx = triton_helpers.max_with_index(_tmp4, _tmp4_index, 1)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp4_idx[:, None]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp2, None)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp4, None)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/o6/co6a6wbus7xphwilv2u63yh7yu2nlmoy2lyeo5cszbe2tlrspyun.py
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [front_res], Original ATen: [aten.cat]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   front_res => cat
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_4, %view_4], 1), kwargs = {})
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2097152}, 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2097152
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 524288)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 524288
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 1048576*x1), tmp0, None)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qq/cqqriiodoes3nphmv6fo2u7lewdqluf7khotolsful2hbnzayyd2.py
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [front_res], Original ATen: [aten.cat]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   front_res => cat
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_4, %view_4], 1), kwargs = {})
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_3 = async_compile.triton('triton_poi_fused_cat_3', '''
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2097152}, 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_3(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2097152
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4096)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 524288
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 4096
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 128)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 524288)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4096*x2), None, eviction_policy='evict_last')
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (x1), None, eviction_policy='evict_last')
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 4096, tl.int32)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp4) & (tmp4 < 4096), "index out of bounds: 0 <= tmp4 < 4096")
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (4096*x3 + ((tmp4 % 4096))), None, eviction_policy='evict_last')
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4 + 1048576*x2), tmp8, None)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2a/c2ay7cxrnmiwnrg7nckskmxmohi3o7ch2b4mgvwwx6uzrmqpmeig.py
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [front_res_1, front_res_2, output], Original ATen: [aten.convolution, aten.mul, aten.add]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   front_res_1 => convolution_3
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   front_res_2 => mul
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output => add
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%cat, %primals_10, %primals_11, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_3, %view_5), kwargs = {})
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_4, %mul), kwargs = {})
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_convolution_mul_4 = async_compile.triton('triton_poi_fused_add_convolution_mul_4', '''
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2097152}, 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_mul_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_convolution_mul_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2097152
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4096) % 128)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4096)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 524288
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x3), None)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (x0 + 4096*x2), None, eviction_policy='evict_last')
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 * tmp4
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 + tmp5
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, None)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp6, None)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11 = args
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 128, 64, 64), (524288, 4096, 64, 1))
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (16, 128, 1, 1), (128, 1, 1, 1))
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (16, ), (1, ))
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 128, 64, 64), (524288, 4096, 64, 1))
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (16, 128, 1, 1), (128, 1, 1, 1))
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (16, ), (1, ))
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (128, 128, 1, 1), (128, 1, 1, 1))
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (128, ), (1, ))
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, 128, 64, 64), (524288, 4096, 64, 1))
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (128, 256, 3, 3), (2304, 9, 3, 1))
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (128, ), (1, ))
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_4, primals_2, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 16, 64, 64), (65536, 4096, 64, 1))
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(buf1, primals_3, 262144, grid=grid(262144), stream=stream0)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(primals_1, primals_5, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 16, 64, 64), (65536, 4096, 64, 1))
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(buf3, primals_6, 262144, grid=grid(262144), stream=stream0)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4096, 4096), (16777216, 4096, 1), torch.float32)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [energy], Original ATen: [aten.bmm]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf3, (4, 4096, 16), (65536, 1, 4096), 0), reinterpret_tensor(buf1, (4, 16, 4096), (65536, 4096, 1), 0), out=buf4)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4096), (4096, 1), torch.float32)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4096), (4096, 1), torch.int64)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_1], Original ATen: [aten.max]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_max_1.run(buf4, buf5, buf6, 16384, 4096, grid=grid(16384), stream=stream0)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_2], Original ATen: [aten.convolution]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = extern_kernels.convolution(primals_9, primals_7, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf7, (4, 128, 64, 64), (524288, 4096, 64, 1))
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 256, 64, 64), (1048576, 4096, 64, 1), torch.float32)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf10, (4, 128, 64, 64), (1048576, 4096, 64, 1), 0)  # alias
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [front_res], Original ATen: [aten.cat]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(primals_4, buf8, 2097152, grid=grid(2097152), stream=stream0)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf10, (4, 128, 64, 64), (1048576, 4096, 64, 1), 524288)  # alias
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [front_res], Original ATen: [aten.cat]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_3.run(buf6, buf7, primals_8, buf9, 2097152, grid=grid(2097152), stream=stream0)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [front_res_1], Original ATen: [aten.convolution]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_10, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 128, 64, 64), (524288, 4096, 64, 1))
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf11; del buf11  # reuse
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = buf7; del buf7  # reuse
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [front_res_1, front_res_2, output], Original ATen: [aten.convolution, aten.mul, aten.add]
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_convolution_mul_4.run(buf12, primals_11, primals_4, buf5, buf13, 2097152, grid=grid(2097152), stream=stream0)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf13, primals_1, primals_2, primals_4, primals_5, primals_7, primals_9, primals_10, buf6, reinterpret_tensor(buf5, (4, 1, 64, 64), (4096, 4096, 64, 1), 0), buf10, buf12, reinterpret_tensor(buf3, (4, 16, 4096), (65536, 4096, 1), 0), reinterpret_tensor(buf1, (4, 4096, 16), (65536, 1, 4096), 0), )
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 128, 64, 64), (524288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((16, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 128, 64, 64), (524288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((16, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((128, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, 128, 64, 64), (524288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((128, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11])
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:02:07.521000 3406561 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:02:07.527000 3406561 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/qt/cqtt5knoea33hf4jvxgoatxquq6qoj5urgmvpgodnodfb2qnfqnf.py
