V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_forward']
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/t4/ct4wkqchvwoefr3jqasznllepykyouhgfzbz4hdtsbduxytt5ui7.py
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [h], Original ATen: [aten.mul]
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h => mul
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_1, %primals_2), kwargs = {})
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_0 = async_compile.triton('triton_poi_fused_mul_0', '''
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': 'fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = in_ptr1
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5h/c5h5ec3lcxojk4exv4yqkwxxkanc5k3ecmuyr5mpcr7ik5mflglc.py
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [h_1], Original ATen: [aten.convolution]
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h_1 => convolution
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=4] = call_function[target=torch.ops.aten.convolution.default](args = (%mul, %primals_3, %primals_4, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_1 = async_compile.triton('triton_poi_fused_convolution_1', '''
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_1(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sb/csb6rj2k2j2rrslactdzk4lfut4h6ygxgrhjgj56iblobyy67wrs.py
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [h_2, mul_1, mean, add, dom, h_3, h_4], Original ATen: [aten.leaky_relu, aten.mul, aten.mean, aten.add, aten.rsqrt]
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   dom => rsqrt
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h_2 => gt, mul_1, where
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h_3 => mul_3
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h_4 => mul_4
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_2
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution, 0), kwargs = {})
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 0.2), kwargs = {})
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt, %convolution, %mul_1), kwargs = {})
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where, %where), kwargs = {})
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul_2, [1], True), kwargs = {})
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, 1e-08), kwargs = {})
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where, %rsqrt), kwargs = {})
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_3, %primals_5), kwargs = {})
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_2 = async_compile.triton('triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_2', '''
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': 'fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_2(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = in_ptr1
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.2
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp0, tmp4)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 > tmp1
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp3
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(tmp7, tmp6, tmp8)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 > tmp1
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp3
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp12, tmp11, tmp13)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 * tmp14
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp10 + tmp15
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 > tmp1
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp3
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp18, tmp17, tmp19)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 * tmp20
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp16 + tmp21
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 > tmp1
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp3
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp24, tmp23, tmp25)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp26
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp22 + tmp27
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = 4.0
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 / tmp29
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = 1e-08
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 + tmp31
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = libdevice.rsqrt(tmp32)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp5 * tmp33
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 * tmp35
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp36, xmask)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yo/cyojmrgvuxbhtiaqcl2gts6unwxbhbhdyzopb4hqviilthmewuhx.py
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [h_6, mul_4, mean_2, add_1, dom_1, h_7], Original ATen: [aten.leaky_relu, aten.mul, aten.mean, aten.add, aten.rsqrt]
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   dom_1 => rsqrt_1
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h_6 => gt_1, mul_5, where_1
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h_7 => mul_7
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_2 => mean_1
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_6
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_1 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_1, 0), kwargs = {})
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_1, 0.2), kwargs = {})
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_1, %convolution_1, %mul_5), kwargs = {})
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where_1, %where_1), kwargs = {})
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul_6, [1], True), kwargs = {})
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_1, 1e-08), kwargs = {})
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt_1 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_1,), kwargs = {})
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where_1, %rsqrt_1), kwargs = {})
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_3 = async_compile.triton('triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_3', '''
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.2
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp0, tmp4)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 > tmp1
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp3
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(tmp7, tmp6, tmp8)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 > tmp1
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp3
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp12, tmp11, tmp13)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 * tmp14
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp10 + tmp15
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 > tmp1
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp3
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp18, tmp17, tmp19)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 * tmp20
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp16 + tmp21
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 > tmp1
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp3
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp24, tmp23, tmp25)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp26
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp22 + tmp27
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = 4.0
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 / tmp29
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = 1e-08
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 + tmp31
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = libdevice.rsqrt(tmp32)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp5 * tmp33
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp34, xmask)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7 = args
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (), ())
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 3, 3), (36, 9, 3, 1))
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (), ())
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4, 3, 3), (36, 9, 3, 1))
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h], Original ATen: [aten.mul]
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_0.run(primals_1, primals_2.item(), buf0, 256, grid=grid(256), stream=stream0)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h_1], Original ATen: [aten.convolution]
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_3, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h_1], Original ATen: [aten.convolution]
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_1.run(buf2, primals_4, 256, grid=grid(256), stream=stream0)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf3; del buf3  # reuse
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h_2, mul_1, mean, add, dom, h_3, h_4], Original ATen: [aten.leaky_relu, aten.mul, aten.mean, aten.add, aten.rsqrt]
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_2.run(buf4, buf2, primals_5.item(), 256, grid=grid(256), stream=stream0)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h_5], Original ATen: [aten.convolution]
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, primals_6, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf5; del buf5  # reuse
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h_5], Original ATen: [aten.convolution]
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_1.run(buf6, primals_7, 256, grid=grid(256), stream=stream0)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h_6, mul_4, mean_2, add_1, dom_1, h_7], Original ATen: [aten.leaky_relu, aten.mul, aten.mean, aten.add, aten.rsqrt]
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_3.run(buf6, buf7, 256, grid=grid(256), stream=stream0)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, primals_3, primals_5, primals_6, buf0, buf2, buf4, buf6, )
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((), (), device='cpu', dtype=torch.float32)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((), (), device='cpu', dtype=torch.float32)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7])
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:57:00.663000 2266232 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:00.669000 2266232 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ba/cbab7rcmm7pbrehqrrntzyvdjnqwapf3jjyftrnmhd5kdvy5r3ie.py
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_forward']
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/t4/ct4wkqchvwoefr3jqasznllepykyouhgfzbz4hdtsbduxytt5ui7.py
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [h], Original ATen: [aten.mul]
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h => mul
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_1, %primals_2), kwargs = {})
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_0 = async_compile.triton('triton_poi_fused_mul_0', '''
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': 'fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = in_ptr1
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5h/c5h5ec3lcxojk4exv4yqkwxxkanc5k3ecmuyr5mpcr7ik5mflglc.py
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [h_1], Original ATen: [aten.convolution]
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h_1 => convolution
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=4] = call_function[target=torch.ops.aten.convolution.default](args = (%mul, %primals_3, %primals_4, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_1 = async_compile.triton('triton_poi_fused_convolution_1', '''
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_1(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sb/csb6rj2k2j2rrslactdzk4lfut4h6ygxgrhjgj56iblobyy67wrs.py
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [h_2, mul_1, mean, add, dom, h_3, h_4], Original ATen: [aten.leaky_relu, aten.mul, aten.mean, aten.add, aten.rsqrt]
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   dom => rsqrt
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h_2 => gt, mul_1, where
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h_3 => mul_3
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h_4 => mul_4
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_2
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution, 0), kwargs = {})
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 0.2), kwargs = {})
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt, %convolution, %mul_1), kwargs = {})
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where, %where), kwargs = {})
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul_2, [1], True), kwargs = {})
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, 1e-08), kwargs = {})
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where, %rsqrt), kwargs = {})
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_3, %primals_5), kwargs = {})
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_2 = async_compile.triton('triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_2', '''
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': 'fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_2(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = in_ptr1
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.2
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp0, tmp4)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 > tmp1
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp3
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(tmp7, tmp6, tmp8)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 > tmp1
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp3
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp12, tmp11, tmp13)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 * tmp14
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp10 + tmp15
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 > tmp1
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp3
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp18, tmp17, tmp19)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 * tmp20
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp16 + tmp21
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 > tmp1
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp3
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp24, tmp23, tmp25)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp26
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp22 + tmp27
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = 4.0
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 / tmp29
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = 1e-08
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 + tmp31
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = libdevice.rsqrt(tmp32)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp5 * tmp33
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 * tmp35
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp36, xmask)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/yo/cyojmrgvuxbhtiaqcl2gts6unwxbhbhdyzopb4hqviilthmewuhx.py
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [h_6, mul_4, mean_2, add_1, dom_1, h_7], Original ATen: [aten.leaky_relu, aten.mul, aten.mean, aten.add, aten.rsqrt]
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   dom_1 => rsqrt_1
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h_6 => gt_1, mul_5, where_1
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h_7 => mul_7
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean_2 => mean_1
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_6
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_1 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_1, 0), kwargs = {})
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_1, 0.2), kwargs = {})
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_1, %convolution_1, %mul_5), kwargs = {})
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where_1, %where_1), kwargs = {})
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul_6, [1], True), kwargs = {})
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_1, 1e-08), kwargs = {})
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt_1 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_1,), kwargs = {})
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where_1, %rsqrt_1), kwargs = {})
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_3 = async_compile.triton('triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_3', '''
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.2
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 * tmp3
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp0, tmp4)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 > tmp1
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp3
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(tmp7, tmp6, tmp8)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 > tmp1
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp3
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp12, tmp11, tmp13)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 * tmp14
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp10 + tmp15
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 > tmp1
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp3
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp18, tmp17, tmp19)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 * tmp20
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp16 + tmp21
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 > tmp1
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp3
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(tmp24, tmp23, tmp25)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp26
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp22 + tmp27
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = 4.0
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 / tmp29
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = 1e-08
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 + tmp31
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = libdevice.rsqrt(tmp32)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp5 * tmp33
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp34, xmask)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7 = args
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (), ())
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 3, 3), (36, 9, 3, 1))
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (), ())
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4, 3, 3), (36, 9, 3, 1))
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h], Original ATen: [aten.mul]
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_0.run(primals_1, primals_2.item(), buf0, 256, grid=grid(256), stream=stream0)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h_1], Original ATen: [aten.convolution]
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_3, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h_1], Original ATen: [aten.convolution]
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_1.run(buf2, primals_4, 256, grid=grid(256), stream=stream0)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf3; del buf3  # reuse
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h_2, mul_1, mean, add, dom, h_3, h_4], Original ATen: [aten.leaky_relu, aten.mul, aten.mean, aten.add, aten.rsqrt]
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_2.run(buf4, buf2, primals_5.item(), 256, grid=grid(256), stream=stream0)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h_5], Original ATen: [aten.convolution]
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, primals_6, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf5, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf5; del buf5  # reuse
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h_5], Original ATen: [aten.convolution]
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_1.run(buf6, primals_7, 256, grid=grid(256), stream=stream0)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h_6, mul_4, mean_2, add_1, dom_1, h_7], Original ATen: [aten.leaky_relu, aten.mul, aten.mean, aten.add, aten.rsqrt]
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_leaky_relu_mean_mul_rsqrt_3.run(buf6, buf7, 256, grid=grid(256), stream=stream0)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, primals_3, primals_5, primals_6, buf0, buf2, buf4, buf6, )
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((), (), device='cpu', dtype=torch.float32)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((), (), device='cpu', dtype=torch.float32)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7])
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:46:20.427000 3809558 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:20.434000 3809558 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/d7/cd7emgiacii3iud4jnimaqtdyuaxkzm6y4yd3thzjqznqefvdj3g.py
