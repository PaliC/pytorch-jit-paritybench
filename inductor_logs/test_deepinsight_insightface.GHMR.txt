V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] Output code: 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # AOT ID: ['26_inference']
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import torch
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import math
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import random
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import os
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import tempfile
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from math import inf, nan
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch import device, empty_strided
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid,
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     split_scan_grid,
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid_combo_kernels,
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     start_graph,
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     end_graph,
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     cooperative_reduction_grid,
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] aten = torch.ops.aten
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile = AsyncCompile()
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/mm/cmm6ytuckc5wwfeglgxgt4huz7xuixbepxdhmop3zdsmdklmex6n.py
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [sum_1, valid], Original ATen: [aten.sum, aten.gt]
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sum_1 => sum_1
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   valid => gt
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%arg2_1,), kwargs = {})
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%arg2_1, 0), kwargs = {})
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_per_fused_gt_sum_0 = async_compile.triton('triton_per_fused_gt_sum_0', '''
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 1, 'r': 256},
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_gt_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': True, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_per_fused_gt_sum_0(in_ptr0, out_ptr0, out_ptr1, xnumel, rnumel):
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 1
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rnumel = 256
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     RBLOCK: tl.constexpr = 256
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     roffset = 0
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     r0 = rindex
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [RBLOCK])
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = triton_helpers.promote_to_tensor(tl.sum(tmp1, 0))
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = 0.0
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp0 > tmp4
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r0, [RBLOCK])), tmp5, None)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (tl.full([1], 0, tl.int32)), tmp3, None)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ye/cye5ilsvrjcr7cyh6cejmi2dsj3wyxendudmtwgw6gl7w4ks2inf.py
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [diff, mul, add, sqrt, loss, mul_1, add_1, sqrt_1, truediv, abs_1], Original ATen: [aten.sub, aten.mul, aten.add, aten.sqrt, aten.div, aten.abs]
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   abs_1 => abs_1
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add => add
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add_1 => add_1
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   diff => sub
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   loss => sub_1
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul => mul
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul_1 => mul_1
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sqrt => sqrt
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sqrt_1 => sqrt_1
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   truediv => div
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub : [num_users=3] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, %arg1_1), kwargs = {})
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %sub), kwargs = {})
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, 0.0004), kwargs = {})
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%add,), kwargs = {})
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sqrt, 0.02), kwargs = {})
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %sub), kwargs = {})
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, 0.0004), kwargs = {})
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sqrt_1 : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%add_1,), kwargs = {})
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub, %sqrt_1), kwargs = {})
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%div,), kwargs = {})
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_abs_add_div_mul_sqrt_sub_1 = async_compile.triton('triton_poi_fused_abs_add_div_mul_sqrt_sub_1', '''
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 256}, 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_abs_add_div_mul_sqrt_sub_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_abs_add_div_mul_sqrt_sub_1(in_ptr0, in_ptr1, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 256
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = xindex
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tmp2 * tmp2
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = 0.0004
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = 0.02
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp6 - tmp7
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tmp2 / tmp6
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tl_math.abs(tmp9)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp8, xmask)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp10, xmask)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/x6/cx67yrc2xzs4qv6fszimkcjrzuts5voyr6q2sbh5obyrbfe4j6hx.py
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [weights], Original ATen: [aten.zeros_like]
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   weights => full_default
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([4, 4, 4, 4], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_zeros_like_2 = async_compile.triton('triton_poi_fused_zeros_like_2', '''
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 256}, 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_zeros_like_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_zeros_like_2(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 256
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = xindex
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = 0.0
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile.wait(globals())
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] del async_compile
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def call(args):
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     args.clear()
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg2_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         torch.cuda.set_device(0)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf0 = empty_strided_cuda((), (), torch.float32)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [sum_1, valid], Original ATen: [aten.sum, aten.gt]
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_per_fused_gt_sum_0.run(arg2_1, buf0, buf4, 1, 256, grid=grid(1), stream=stream0)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del arg2_1
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [diff, mul, add, sqrt, loss, mul_1, add_1, sqrt_1, truediv, abs_1], Original ATen: [aten.sub, aten.mul, aten.add, aten.sqrt, aten.div, aten.abs]
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_abs_add_div_mul_sqrt_sub_1.run(arg0_1, arg1_1, buf1, buf2, 256, grid=grid(256), stream=stream0)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del arg0_1
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del arg1_1
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [weights], Original ATen: [aten.zeros_like]
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_zeros_like_2.run(buf3, 256, grid=grid(256), stream=stream0)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return (buf0, buf1, buf2, buf3, buf4, )
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg2_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] if __name__ == "__main__":
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:56:03.310000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:56:03.314000 2240541 site-packages/torch/_inductor/graph.py:2053] [0/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/kf/ckfhyjocm3kjv35bit4hipaxv6akohia5ykuzaueifzchzva2k6k.py
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] Output code: 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # AOT ID: ['26_inference']
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import torch
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import math
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import random
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import os
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import tempfile
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from math import inf, nan
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch import device, empty_strided
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid,
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     split_scan_grid,
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid_combo_kernels,
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     start_graph,
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     end_graph,
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     cooperative_reduction_grid,
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] aten = torch.ops.aten
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile = AsyncCompile()
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/mm/cmm6ytuckc5wwfeglgxgt4huz7xuixbepxdhmop3zdsmdklmex6n.py
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [sum_1, valid], Original ATen: [aten.sum, aten.gt]
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sum_1 => sum_1
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   valid => gt
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%arg2_1,), kwargs = {})
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%arg2_1, 0), kwargs = {})
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_per_fused_gt_sum_0 = async_compile.triton('triton_per_fused_gt_sum_0', '''
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 1, 'r': 256},
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_gt_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': True, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_per_fused_gt_sum_0(in_ptr0, out_ptr0, out_ptr1, xnumel, rnumel):
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 1
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rnumel = 256
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     RBLOCK: tl.constexpr = 256
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     roffset = 0
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     r0 = rindex
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [RBLOCK])
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = triton_helpers.promote_to_tensor(tl.sum(tmp1, 0))
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = 0.0
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp0 > tmp4
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r0, [RBLOCK])), tmp5, None)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (tl.full([1], 0, tl.int32)), tmp3, None)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/ye/cye5ilsvrjcr7cyh6cejmi2dsj3wyxendudmtwgw6gl7w4ks2inf.py
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [diff, mul, add, sqrt, loss, mul_1, add_1, sqrt_1, truediv, abs_1], Original ATen: [aten.sub, aten.mul, aten.add, aten.sqrt, aten.div, aten.abs]
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   abs_1 => abs_1
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add => add
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add_1 => add_1
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   diff => sub
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   loss => sub_1
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul => mul
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul_1 => mul_1
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sqrt => sqrt
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sqrt_1 => sqrt_1
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   truediv => div
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub : [num_users=3] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, %arg1_1), kwargs = {})
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %sub), kwargs = {})
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, 0.0004), kwargs = {})
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%add,), kwargs = {})
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sqrt, 0.02), kwargs = {})
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %sub), kwargs = {})
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, 0.0004), kwargs = {})
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sqrt_1 : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%add_1,), kwargs = {})
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub, %sqrt_1), kwargs = {})
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%div,), kwargs = {})
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_abs_add_div_mul_sqrt_sub_1 = async_compile.triton('triton_poi_fused_abs_add_div_mul_sqrt_sub_1', '''
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 256}, 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_abs_add_div_mul_sqrt_sub_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_abs_add_div_mul_sqrt_sub_1(in_ptr0, in_ptr1, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 256
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = xindex
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tmp2 * tmp2
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = 0.0004
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = 0.02
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp6 - tmp7
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tmp2 / tmp6
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tl_math.abs(tmp9)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp8, xmask)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp10, xmask)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/x6/cx67yrc2xzs4qv6fszimkcjrzuts5voyr6q2sbh5obyrbfe4j6hx.py
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [weights], Original ATen: [aten.zeros_like]
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   weights => full_default
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([4, 4, 4, 4], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_zeros_like_2 = async_compile.triton('triton_poi_fused_zeros_like_2', '''
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 256}, 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_zeros_like_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_zeros_like_2(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 256
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = xindex
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = 0.0
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile.wait(globals())
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] del async_compile
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def call(args):
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     args.clear()
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg2_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf0 = empty_strided_cuda((), (), torch.float32)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [sum_1, valid], Original ATen: [aten.sum, aten.gt]
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_per_fused_gt_sum_0.run(arg2_1, buf0, buf4, 1, 256, grid=grid(1), stream=stream0)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del arg2_1
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [diff, mul, add, sqrt, loss, mul_1, add_1, sqrt_1, truediv, abs_1], Original ATen: [aten.sub, aten.mul, aten.add, aten.sqrt, aten.div, aten.abs]
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_abs_add_div_mul_sqrt_sub_1.run(arg0_1, arg1_1, buf1, buf2, 256, grid=grid(256), stream=stream0)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del arg0_1
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del arg1_1
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [weights], Original ATen: [aten.zeros_like]
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_zeros_like_2.run(buf3, 256, grid=grid(256), stream=stream0)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return (buf0, buf1, buf2, buf3, buf4, )
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg2_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] if __name__ == "__main__":
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:45:21.978000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:45:21.982000 3778217 site-packages/torch/_inductor/graph.py:2053] [0/0_1] [__output_code] Output code written to: inductor_cache/2i/c2iqh5qzqdcm6d6kcfue75pmt2gx5dvggvk33hbmxsxd4det4gce.py
