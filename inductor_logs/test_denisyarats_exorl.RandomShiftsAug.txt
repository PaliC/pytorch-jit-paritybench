V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sp/cspueeaughrekodd5iceuclbouwwe4ndtk6youyidhw3t2vvgp25.py
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [base_grid_1, shift_1, grid], Original ATen: [aten.repeat, aten.mul, aten.add]
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   base_grid_1 => repeat_1
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   grid => add_1
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   shift_1 => mul_2
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %repeat_1 : [num_users=1] = call_function[target=torch.ops.aten.repeat.default](args = (%unsqueeze_2, [4, 1, 1, 1]), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%randint, 0.16666666666666666), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%repeat_1, %mul_2), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_repeat_0 = async_compile.triton('triton_poi_fused_add_mul_repeat_0', '''
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_repeat_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_repeat_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 2)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 2) % 4)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 8) % 4)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 32
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x7 = xindex
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr0 + (x0 + 2*x3), xmask, eviction_policy='evict_last')
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = x1
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.float32)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 6.0
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 < tmp7
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 0.16666666666666666
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp6 * tmp9
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = -0.9166666666666666
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 11 + ((-1)*x1)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13.to(tl.float32)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 * tmp9
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.9166666666666666
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 - tmp15
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp8, tmp12, tmp17)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.full(tmp18.shape, 0.0, tmp18.dtype)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp4, tmp18, tmp19)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp0 >= tmp3
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([1], 2, tl.int64)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp0 < tmp22
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = x2
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24.to(tl.float32)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = 6.0
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 < tmp26
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 0.16666666666666666
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp25 * tmp28
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = -0.9166666666666666
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 + tmp30
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 11 + ((-1)*x2)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32.to(tl.float32)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 * tmp28
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = 0.9166666666666666
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 - tmp34
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.where(tmp27, tmp31, tmp36)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.full(tmp37.shape, 0.0, tmp37.dtype)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.where(tmp21, tmp37, tmp38)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.where(tmp4, tmp20, tmp39)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = 0.16666666666666666
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp41 * tmp42
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp40 + tmp43
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x7), tmp44, xmask)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/j3/cj3pziczbs44jnzqfizqx6rtn3pbfvkuwrposmc47oe4tdl7g32k.py
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_1, grid_sample], Original ATen: [aten.replication_pad2d, aten.grid_sampler_2d]
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   grid_sample => add_2, add_3, add_4, add_5, add_6, add_7, add_8, floor, floor_1, full_default_11, full_default_2, full_default_5, full_default_8, ge, ge_1, ge_2, ge_3, ge_4, ge_5, ge_6, ge_7, index, index_1, index_2, index_3, logical_and, logical_and_1, logical_and_10, logical_and_11, logical_and_2, logical_and_3, logical_and_4, logical_and_5, logical_and_6, logical_and_7, logical_and_8, logical_and_9, lt_1, lt_2, lt_3, lt_4, lt_5, lt_6, lt_7, lt_8, mul_10, mul_11, mul_12, mul_3, mul_4, mul_5, mul_6, mul_7, mul_8, mul_9, sub_2, sub_3, sub_4, sub_5, sub_6, sub_7, sub_8, sub_9, where_12, where_3, where_6, where_9
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => _unsafe_index, _unsafe_index_1
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%arg0_1, [None, None, %clamp_max, None]), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=4] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index, [None, None, None, %clamp_max_1]), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select, 6.0), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=5] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_3, 5.5), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor : [num_users=9] = call_function[target=torch.ops.aten.floor.default](args = (%add_2,), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor, 0), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_1 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor, 12), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_1, 6.0), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=5] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, 5.5), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor_1 : [num_users=9] = call_function[target=torch.ops.aten.floor.default](args = (%add_3,), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_1 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor_1, 0), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_2 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor_1, 12), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_1, %lt_2), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_1 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_1, %logical_and), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_2 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge, %logical_and_1), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%_unsafe_index_1, [%view_1, %view_2, %where_2, %where_1]), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=8] = call_function[target=torch.ops.aten.add.Tensor](args = (%floor, 1), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %add_2), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=8] = call_function[target=torch.ops.aten.add.Tensor](args = (%floor_1, 1), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_5, %add_3), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %sub_3), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_3 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_2, %mul_5, %full_default_2), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index, %where_3), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_2 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_4, 0), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_3 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_4, 12), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_3 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor_1, 0), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_4 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor_1, 12), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_3 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_3, %lt_4), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_4 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_3, %logical_and_3), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_5 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_2, %logical_and_4), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_1 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%_unsafe_index_1, [%view_1, %view_2, %where_5, %where_4]), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_2, %floor), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_5, %add_3), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %sub_5), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_5 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_6 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_5, %mul_6, %full_default_5), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_1, %where_6), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_9, %mul_10), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_4 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor, 0), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_5 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor, 12), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_5 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_5, 0), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_6 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_5, 12), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_6 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_5, %lt_6), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_7 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_5, %logical_and_6), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_8 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_4, %logical_and_7), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_2 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%_unsafe_index_1, [%view_1, %view_2, %where_8, %where_7]), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %add_2), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_3, %floor_1), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %sub_7), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_8 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_9 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_8, %mul_7, %full_default_8), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_2, %where_9), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_6, %mul_11), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_6 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_4, 0), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_7 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_4, 12), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_7 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_5, 0), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_8 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_5, 12), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_9 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_7, %lt_8), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_10 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_7, %logical_and_9), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_11 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_6, %logical_and_10), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_3 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%_unsafe_index_1, [%view_1, %view_2, %where_11, %where_10]), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_2, %floor), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_3, %floor_1), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %sub_9), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_11 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_12 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_11, %mul_8, %full_default_11), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_3, %where_12), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_7, %mul_12), kwargs = {})
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_grid_sampler_2d_replication_pad2d_1 = async_compile.triton('triton_poi_fused_grid_sampler_2d_replication_pad2d_1', '''
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_grid_sampler_2d_replication_pad2d_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_grid_sampler_2d_replication_pad2d_1(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 16
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0 + 32*x2), xmask, eviction_policy='evict_last')
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (1 + 2*x0 + 32*x2), xmask, eviction_policy='evict_last')
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 6.0
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 5.5
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.floor(tmp4)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.0
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 >= tmp6
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 12.0
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 < tmp8
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 * tmp1
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp3
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = libdevice.floor(tmp12)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 >= tmp6
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 < tmp8
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 & tmp15
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp9 & tmp16
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp7 & tmp17
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp13.to(tl.int64)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.full([1], 0, tl.int64)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.where(tmp18, tmp19, tmp20)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([XBLOCK], 12, tl.int32)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp21 < 0
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.where(tmp24, tmp23, tmp21)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp25) & (tmp25 < 12)) | ~(xmask), "index out of bounds: 0 <= tmp25 < 12")
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp5.to(tl.int64)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp18, tmp27, tmp20)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 + tmp22
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 < 0
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp30, tmp29, tmp28)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp31) & (tmp31 < 12)) | ~(xmask), "index out of bounds: 0 <= tmp31 < 12")
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr1 + (4*((3) * ((3) <= (((0) * ((0) >= ((-4) + tmp25)) + ((-4) + tmp25) * (((-4) + tmp25) > (0))))) + (((0) * ((0) >= ((-4) + tmp25)) + ((-4) + tmp25) * (((-4) + tmp25) > (0)))) * ((((0) * ((0) >= ((-4) + tmp25)) + ((-4) + tmp25) * (((-4) + tmp25) > (0)))) < (3))) + 16*x3 + ((3) * ((3) <= (((0) * ((0) >= ((-4) + tmp31)) + ((-4) + tmp31) * (((-4) + tmp31) > (0))))) + (((0) * ((0) >= ((-4) + tmp31)) + ((-4) + tmp31) * (((-4) + tmp31) > (0)))) * ((((0) * ((0) >= ((-4) + tmp31)) + ((-4) + tmp31) * (((-4) + tmp31) > (0)))) < (3)))), xmask, eviction_policy='evict_last')
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = 1.0
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp5 + tmp34
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 >= tmp6
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 < tmp8
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 & tmp16
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp36 & tmp38
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.where(tmp39, tmp19, tmp20)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 + tmp22
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 < 0
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.where(tmp42, tmp41, tmp40)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp43) & (tmp43 < 12)) | ~(xmask), "index out of bounds: 0 <= tmp43 < 12")
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp35.to(tl.int64)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp39, tmp45, tmp20)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 + tmp22
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 < 0
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp48, tmp47, tmp46)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp49) & (tmp49 < 12)) | ~(xmask), "index out of bounds: 0 <= tmp49 < 12")
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr1 + (4*((3) * ((3) <= (((0) * ((0) >= ((-4) + tmp43)) + ((-4) + tmp43) * (((-4) + tmp43) > (0))))) + (((0) * ((0) >= ((-4) + tmp43)) + ((-4) + tmp43) * (((-4) + tmp43) > (0)))) * ((((0) * ((0) >= ((-4) + tmp43)) + ((-4) + tmp43) * (((-4) + tmp43) > (0)))) < (3))) + 16*x3 + ((3) * ((3) <= (((0) * ((0) >= ((-4) + tmp49)) + ((-4) + tmp49) * (((-4) + tmp49) > (0))))) + (((0) * ((0) >= ((-4) + tmp49)) + ((-4) + tmp49) * (((-4) + tmp49) > (0)))) * ((((0) * ((0) >= ((-4) + tmp49)) + ((-4) + tmp49) * (((-4) + tmp49) > (0)))) < (3)))), xmask, eviction_policy='evict_last')
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp35 - tmp4
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp13 + tmp34
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp53 - tmp12
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp52 * tmp54
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.where(tmp18, tmp55, tmp6)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp33 * tmp56
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp4 - tmp5
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp58 * tmp54
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.where(tmp39, tmp59, tmp6)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp51 * tmp60
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp57 + tmp61
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp53 >= tmp6
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp53 < tmp8
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp63 & tmp64
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp9 & tmp65
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp7 & tmp66
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp53.to(tl.int64)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.where(tmp67, tmp68, tmp20)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp69 + tmp22
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp69 < 0
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tl.where(tmp71, tmp70, tmp69)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp72) & (tmp72 < 12)) | ~(xmask), "index out of bounds: 0 <= tmp72 < 12")
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.where(tmp67, tmp27, tmp20)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp74 + tmp22
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp74 < 0
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.where(tmp76, tmp75, tmp74)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp77) & (tmp77 < 12)) | ~(xmask), "index out of bounds: 0 <= tmp77 < 12")
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tl.load(in_ptr1 + (4*((3) * ((3) <= (((0) * ((0) >= ((-4) + tmp72)) + ((-4) + tmp72) * (((-4) + tmp72) > (0))))) + (((0) * ((0) >= ((-4) + tmp72)) + ((-4) + tmp72) * (((-4) + tmp72) > (0)))) * ((((0) * ((0) >= ((-4) + tmp72)) + ((-4) + tmp72) * (((-4) + tmp72) > (0)))) < (3))) + 16*x3 + ((3) * ((3) <= (((0) * ((0) >= ((-4) + tmp77)) + ((-4) + tmp77) * (((-4) + tmp77) > (0))))) + (((0) * ((0) >= ((-4) + tmp77)) + ((-4) + tmp77) * (((-4) + tmp77) > (0)))) * ((((0) * ((0) >= ((-4) + tmp77)) + ((-4) + tmp77) * (((-4) + tmp77) > (0)))) < (3)))), xmask, eviction_policy='evict_last')
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp12 - tmp13
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp52 * tmp80
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tl.where(tmp67, tmp81, tmp6)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp79 * tmp82
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp62 + tmp83
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp37 & tmp65
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp36 & tmp85
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tl.where(tmp86, tmp68, tmp20)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp87 + tmp22
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tmp87 < 0
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tl.where(tmp89, tmp88, tmp87)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp90) & (tmp90 < 12)) | ~(xmask), "index out of bounds: 0 <= tmp90 < 12")
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tl.where(tmp86, tmp45, tmp20)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tmp92 + tmp22
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tmp92 < 0
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tl.where(tmp94, tmp93, tmp92)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp95) & (tmp95 < 12)) | ~(xmask), "index out of bounds: 0 <= tmp95 < 12")
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.load(in_ptr1 + (4*((3) * ((3) <= (((0) * ((0) >= ((-4) + tmp90)) + ((-4) + tmp90) * (((-4) + tmp90) > (0))))) + (((0) * ((0) >= ((-4) + tmp90)) + ((-4) + tmp90) * (((-4) + tmp90) > (0)))) * ((((0) * ((0) >= ((-4) + tmp90)) + ((-4) + tmp90) * (((-4) + tmp90) > (0)))) < (3))) + 16*x3 + ((3) * ((3) <= (((0) * ((0) >= ((-4) + tmp95)) + ((-4) + tmp95) * (((-4) + tmp95) > (0))))) + (((0) * ((0) >= ((-4) + tmp95)) + ((-4) + tmp95) * (((-4) + tmp95) > (0)))) * ((((0) * ((0) >= ((-4) + tmp95)) + ((-4) + tmp95) * (((-4) + tmp95) > (0)))) < (3)))), xmask, eviction_policy='evict_last')
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tmp58 * tmp80
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tl.where(tmp86, tmp98, tmp6)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tmp97 * tmp99
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tmp84 + tmp100
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x4), tmp101, xmask)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [shift], Original ATen: [aten.randint]
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = torch.ops.aten.randint.low(0, 9, [4, 1, 1, 2], dtype=torch.float32, device=device(type='cuda', index=0), pin_memory=False)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4, 2), (32, 8, 2, 1), torch.float32)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [base_grid_1, shift_1, grid], Original ATen: [aten.repeat, aten.mul, aten.add]
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_repeat_0.run(buf2, buf3, 128, grid=grid(128), stream=stream0)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf4; del buf4  # reuse
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = buf6; del buf6  # reuse
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf8; del buf8  # reuse
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1, grid_sample], Original ATen: [aten.replication_pad2d, aten.grid_sampler_2d]
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_grid_sampler_2d_replication_pad2d_1.run(buf10, buf3, arg0_1, 256, grid=grid(256), stream=stream0)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf10, )
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:57:10.491000 2268839 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:57:10.499000 2268839 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/wp/cwpf5xoodzy4vofoeivgiyj73deucxmwj5hmwl4yfdbypahaseg5.py
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sp/cspueeaughrekodd5iceuclbouwwe4ndtk6youyidhw3t2vvgp25.py
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [base_grid_1, shift_1, grid], Original ATen: [aten.repeat, aten.mul, aten.add]
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   base_grid_1 => repeat_1
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   grid => add_1
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   shift_1 => mul_2
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %repeat_1 : [num_users=1] = call_function[target=torch.ops.aten.repeat.default](args = (%unsqueeze_2, [4, 1, 1, 1]), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%randint, 0.16666666666666666), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%repeat_1, %mul_2), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_repeat_0 = async_compile.triton('triton_poi_fused_add_mul_repeat_0', '''
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_repeat_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_repeat_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 2)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 2) % 4)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 8) % 4)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 32
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x7 = xindex
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr0 + (x0 + 2*x3), xmask, eviction_policy='evict_last')
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = x1
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.float32)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 6.0
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 < tmp7
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 0.16666666666666666
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp6 * tmp9
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = -0.9166666666666666
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 11 + ((-1)*x1)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13.to(tl.float32)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 * tmp9
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.9166666666666666
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 - tmp15
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp8, tmp12, tmp17)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.full(tmp18.shape, 0.0, tmp18.dtype)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp4, tmp18, tmp19)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp0 >= tmp3
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([1], 2, tl.int64)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp0 < tmp22
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = x2
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24.to(tl.float32)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = 6.0
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 < tmp26
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 0.16666666666666666
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp25 * tmp28
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = -0.9166666666666666
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 + tmp30
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = 11 + ((-1)*x2)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32.to(tl.float32)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 * tmp28
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = 0.9166666666666666
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 - tmp34
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.where(tmp27, tmp31, tmp36)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.full(tmp37.shape, 0.0, tmp37.dtype)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.where(tmp21, tmp37, tmp38)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.where(tmp4, tmp20, tmp39)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = 0.16666666666666666
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp41 * tmp42
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp40 + tmp43
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x7), tmp44, xmask)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/j3/cj3pziczbs44jnzqfizqx6rtn3pbfvkuwrposmc47oe4tdl7g32k.py
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_1, grid_sample], Original ATen: [aten.replication_pad2d, aten.grid_sampler_2d]
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   grid_sample => add_2, add_3, add_4, add_5, add_6, add_7, add_8, floor, floor_1, full_default_11, full_default_2, full_default_5, full_default_8, ge, ge_1, ge_2, ge_3, ge_4, ge_5, ge_6, ge_7, index, index_1, index_2, index_3, logical_and, logical_and_1, logical_and_10, logical_and_11, logical_and_2, logical_and_3, logical_and_4, logical_and_5, logical_and_6, logical_and_7, logical_and_8, logical_and_9, lt_1, lt_2, lt_3, lt_4, lt_5, lt_6, lt_7, lt_8, mul_10, mul_11, mul_12, mul_3, mul_4, mul_5, mul_6, mul_7, mul_8, mul_9, sub_2, sub_3, sub_4, sub_5, sub_6, sub_7, sub_8, sub_9, where_12, where_3, where_6, where_9
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => _unsafe_index, _unsafe_index_1
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%arg0_1, [None, None, %clamp_max, None]), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=4] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index, [None, None, None, %clamp_max_1]), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select, 6.0), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=5] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_3, 5.5), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor : [num_users=9] = call_function[target=torch.ops.aten.floor.default](args = (%add_2,), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor, 0), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_1 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor, 12), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_1, 6.0), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=5] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, 5.5), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor_1 : [num_users=9] = call_function[target=torch.ops.aten.floor.default](args = (%add_3,), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_1 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor_1, 0), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_2 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor_1, 12), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_1, %lt_2), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_1 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_1, %logical_and), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_2 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge, %logical_and_1), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%_unsafe_index_1, [%view_1, %view_2, %where_2, %where_1]), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=8] = call_function[target=torch.ops.aten.add.Tensor](args = (%floor, 1), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %add_2), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=8] = call_function[target=torch.ops.aten.add.Tensor](args = (%floor_1, 1), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_5, %add_3), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %sub_3), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_3 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_2, %mul_5, %full_default_2), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index, %where_3), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_2 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_4, 0), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_3 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_4, 12), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_3 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor_1, 0), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_4 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor_1, 12), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_3 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_3, %lt_4), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_4 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_3, %logical_and_3), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_5 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_2, %logical_and_4), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_1 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%_unsafe_index_1, [%view_1, %view_2, %where_5, %where_4]), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_2, %floor), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_5, %add_3), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %sub_5), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_5 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_6 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_5, %mul_6, %full_default_5), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_1, %where_6), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_9, %mul_10), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_4 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%floor, 0), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_5 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%floor, 12), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_5 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_5, 0), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_6 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_5, 12), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_6 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_5, %lt_6), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_7 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_5, %logical_and_6), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_8 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_4, %logical_and_7), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_2 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%_unsafe_index_1, [%view_1, %view_2, %where_8, %where_7]), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %add_2), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_3, %floor_1), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %sub_7), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_8 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_9 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_8, %mul_7, %full_default_8), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_2, %where_9), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_6, %mul_11), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_6 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_4, 0), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_7 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_4, 12), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge_7 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_5, 0), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_8 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_5, 12), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_9 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_7, %lt_8), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_10 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%lt_7, %logical_and_9), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and_11 : [num_users=3] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_6, %logical_and_10), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_3 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%_unsafe_index_1, [%view_1, %view_2, %where_11, %where_10]), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_2, %floor), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_3, %floor_1), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %sub_9), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_11 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_12 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_and_11, %mul_8, %full_default_11), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%index_3, %where_12), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_7, %mul_12), kwargs = {})
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_grid_sampler_2d_replication_pad2d_1 = async_compile.triton('triton_poi_fused_grid_sampler_2d_replication_pad2d_1', '''
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_grid_sampler_2d_replication_pad2d_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_grid_sampler_2d_replication_pad2d_1(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 16
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0 + 32*x2), xmask, eviction_policy='evict_last')
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (1 + 2*x0 + 32*x2), xmask, eviction_policy='evict_last')
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 6.0
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 5.5
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = libdevice.floor(tmp4)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 0.0
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 >= tmp6
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 12.0
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 < tmp8
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 * tmp1
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 + tmp3
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = libdevice.floor(tmp12)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 >= tmp6
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 < tmp8
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 & tmp15
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp9 & tmp16
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp7 & tmp17
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp13.to(tl.int64)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.full([1], 0, tl.int64)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.where(tmp18, tmp19, tmp20)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([XBLOCK], 12, tl.int32)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp21 < 0
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.where(tmp24, tmp23, tmp21)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp25) & (tmp25 < 12)) | ~(xmask), "index out of bounds: 0 <= tmp25 < 12")
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp5.to(tl.int64)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp18, tmp27, tmp20)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 + tmp22
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 < 0
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp30, tmp29, tmp28)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp31) & (tmp31 < 12)) | ~(xmask), "index out of bounds: 0 <= tmp31 < 12")
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr1 + (4*((3) * ((3) <= (((0) * ((0) >= ((-4) + tmp25)) + ((-4) + tmp25) * (((-4) + tmp25) > (0))))) + (((0) * ((0) >= ((-4) + tmp25)) + ((-4) + tmp25) * (((-4) + tmp25) > (0)))) * ((((0) * ((0) >= ((-4) + tmp25)) + ((-4) + tmp25) * (((-4) + tmp25) > (0)))) < (3))) + 16*x3 + ((3) * ((3) <= (((0) * ((0) >= ((-4) + tmp31)) + ((-4) + tmp31) * (((-4) + tmp31) > (0))))) + (((0) * ((0) >= ((-4) + tmp31)) + ((-4) + tmp31) * (((-4) + tmp31) > (0)))) * ((((0) * ((0) >= ((-4) + tmp31)) + ((-4) + tmp31) * (((-4) + tmp31) > (0)))) < (3)))), xmask, eviction_policy='evict_last')
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = 1.0
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp5 + tmp34
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 >= tmp6
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 < tmp8
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 & tmp16
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp36 & tmp38
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.where(tmp39, tmp19, tmp20)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 + tmp22
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 < 0
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.where(tmp42, tmp41, tmp40)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp43) & (tmp43 < 12)) | ~(xmask), "index out of bounds: 0 <= tmp43 < 12")
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp35.to(tl.int64)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp39, tmp45, tmp20)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 + tmp22
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 < 0
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp48, tmp47, tmp46)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp49) & (tmp49 < 12)) | ~(xmask), "index out of bounds: 0 <= tmp49 < 12")
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr1 + (4*((3) * ((3) <= (((0) * ((0) >= ((-4) + tmp43)) + ((-4) + tmp43) * (((-4) + tmp43) > (0))))) + (((0) * ((0) >= ((-4) + tmp43)) + ((-4) + tmp43) * (((-4) + tmp43) > (0)))) * ((((0) * ((0) >= ((-4) + tmp43)) + ((-4) + tmp43) * (((-4) + tmp43) > (0)))) < (3))) + 16*x3 + ((3) * ((3) <= (((0) * ((0) >= ((-4) + tmp49)) + ((-4) + tmp49) * (((-4) + tmp49) > (0))))) + (((0) * ((0) >= ((-4) + tmp49)) + ((-4) + tmp49) * (((-4) + tmp49) > (0)))) * ((((0) * ((0) >= ((-4) + tmp49)) + ((-4) + tmp49) * (((-4) + tmp49) > (0)))) < (3)))), xmask, eviction_policy='evict_last')
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp35 - tmp4
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp13 + tmp34
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp53 - tmp12
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp52 * tmp54
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.where(tmp18, tmp55, tmp6)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp33 * tmp56
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp4 - tmp5
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp58 * tmp54
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.where(tmp39, tmp59, tmp6)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp51 * tmp60
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp57 + tmp61
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp53 >= tmp6
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp53 < tmp8
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp63 & tmp64
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp9 & tmp65
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp7 & tmp66
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp53.to(tl.int64)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.where(tmp67, tmp68, tmp20)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp69 + tmp22
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp69 < 0
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tl.where(tmp71, tmp70, tmp69)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp72) & (tmp72 < 12)) | ~(xmask), "index out of bounds: 0 <= tmp72 < 12")
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.where(tmp67, tmp27, tmp20)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp74 + tmp22
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp74 < 0
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.where(tmp76, tmp75, tmp74)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp77) & (tmp77 < 12)) | ~(xmask), "index out of bounds: 0 <= tmp77 < 12")
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tl.load(in_ptr1 + (4*((3) * ((3) <= (((0) * ((0) >= ((-4) + tmp72)) + ((-4) + tmp72) * (((-4) + tmp72) > (0))))) + (((0) * ((0) >= ((-4) + tmp72)) + ((-4) + tmp72) * (((-4) + tmp72) > (0)))) * ((((0) * ((0) >= ((-4) + tmp72)) + ((-4) + tmp72) * (((-4) + tmp72) > (0)))) < (3))) + 16*x3 + ((3) * ((3) <= (((0) * ((0) >= ((-4) + tmp77)) + ((-4) + tmp77) * (((-4) + tmp77) > (0))))) + (((0) * ((0) >= ((-4) + tmp77)) + ((-4) + tmp77) * (((-4) + tmp77) > (0)))) * ((((0) * ((0) >= ((-4) + tmp77)) + ((-4) + tmp77) * (((-4) + tmp77) > (0)))) < (3)))), xmask, eviction_policy='evict_last')
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp12 - tmp13
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp52 * tmp80
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tl.where(tmp67, tmp81, tmp6)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp79 * tmp82
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp62 + tmp83
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp37 & tmp65
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp36 & tmp85
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tl.where(tmp86, tmp68, tmp20)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp87 + tmp22
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tmp87 < 0
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tl.where(tmp89, tmp88, tmp87)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp90) & (tmp90 < 12)) | ~(xmask), "index out of bounds: 0 <= tmp90 < 12")
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tl.where(tmp86, tmp45, tmp20)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tmp92 + tmp22
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tmp92 < 0
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tl.where(tmp94, tmp93, tmp92)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp95) & (tmp95 < 12)) | ~(xmask), "index out of bounds: 0 <= tmp95 < 12")
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.load(in_ptr1 + (4*((3) * ((3) <= (((0) * ((0) >= ((-4) + tmp90)) + ((-4) + tmp90) * (((-4) + tmp90) > (0))))) + (((0) * ((0) >= ((-4) + tmp90)) + ((-4) + tmp90) * (((-4) + tmp90) > (0)))) * ((((0) * ((0) >= ((-4) + tmp90)) + ((-4) + tmp90) * (((-4) + tmp90) > (0)))) < (3))) + 16*x3 + ((3) * ((3) <= (((0) * ((0) >= ((-4) + tmp95)) + ((-4) + tmp95) * (((-4) + tmp95) > (0))))) + (((0) * ((0) >= ((-4) + tmp95)) + ((-4) + tmp95) * (((-4) + tmp95) > (0)))) * ((((0) * ((0) >= ((-4) + tmp95)) + ((-4) + tmp95) * (((-4) + tmp95) > (0)))) < (3)))), xmask, eviction_policy='evict_last')
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tmp58 * tmp80
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tl.where(tmp86, tmp98, tmp6)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tmp97 * tmp99
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tmp84 + tmp100
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x4), tmp101, xmask)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [shift], Original ATen: [aten.randint]
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = torch.ops.aten.randint.low(0, 9, [4, 1, 1, 2], dtype=torch.float32, device=device(type='cuda', index=0), pin_memory=False)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4, 2), (32, 8, 2, 1), torch.float32)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [base_grid_1, shift_1, grid], Original ATen: [aten.repeat, aten.mul, aten.add]
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_repeat_0.run(buf2, buf3, 128, grid=grid(128), stream=stream0)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf4; del buf4  # reuse
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = buf6; del buf6  # reuse
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf8; del buf8  # reuse
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1, grid_sample], Original ATen: [aten.replication_pad2d, aten.grid_sampler_2d]
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_grid_sampler_2d_replication_pad2d_1.run(buf10, buf3, arg0_1, 256, grid=grid(256), stream=stream0)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf10, )
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:46:31.239000 3813878 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:46:31.246000 3813878 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/zf/czf4t22ok3pmxcngprm65dgnpcs6ddiyvjkqlfve754nidxnytxf.py
