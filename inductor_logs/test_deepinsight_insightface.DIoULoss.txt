V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['18_inference']
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub_1, sub_2, ap, sub_3, sub_4, ag, add, overlap, sub_5, union, ious, add_4, add_5, sub_7, pow_3, left, add_6, add_7, sub_8, pow_4, right, rho2, pow_1, pow_2, add_2, c2, truediv_3, dious, loss, loss_1, loss_2], Original ATen: [aten.sub, aten.mul, aten.add, aten.div, aten.pow, aten.rsub, aten.mean]
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_5 => add_5
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_6 => add_6
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_7 => add_7
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ag => mul_2
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ap => mul_1
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   c2 => add_3
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   dious => sub_9
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ious => div
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   left => div_1
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => sub_10
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_1 => mean
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_2 => mul_3
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   overlap => mul
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_3 => pow_3
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_4 => pow_4
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   rho2 => add_8
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   right => div_2
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_4 => sub_4
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_5 => sub_5
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_7 => sub_7
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_8 => sub_8
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_3 => div_3
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   union => add_1
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_2, %select_3), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_4, %select_5), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %sub_2), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_6, %select_7), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_8, %select_9), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %sub_4), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %mul_2), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select, %select_1), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %mul), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sub_5, 1e-06), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul, %add_1), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%select_16, %select_18), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%select_12, %select_14), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %add_5), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_7, 2), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%pow_3, 4), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%select_17, %select_19), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%select_13, %select_15), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_6, %add_7), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_8, 2), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%pow_4, 4), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%div_1, %div_2), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_10, 2), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_11, 2), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_1, %pow_2), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_2, 1e-06), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_8, %add_3), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div, %div_3), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %sub_9), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sub_10,), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean, 1.0), kwargs = {})
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_mean_mul_pow_rsub_sub_0 = async_compile.triton('triton_per_fused_add_div_mean_mul_pow_rsub_sub_0', '''
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_mean_mul_pow_rsub_sub_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_mean_mul_pow_rsub_sub_0(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 16)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex // 16
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (32 + r0 + 64*r1), None)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (32 + r0 + 64*r1), None)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (r0 + 64*r1), None)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (r0 + 64*r1), None)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (48 + r0 + 64*r1), None)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (48 + r0 + 64*r1), None)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (16 + r0 + 64*r1), None)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (16 + r0 + 64*r1), None)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.minimum(tmp0, tmp1)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 - tmp5
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.0
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.minimum(tmp9, tmp10)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp12, tmp13)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp11 - tmp14
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp15, tmp7)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 * tmp16
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp0 - tmp3
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp9 - tmp12
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp1 - tmp4
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp10 - tmp13
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 + tmp23
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 - tmp17
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp4 + tmp1
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp3 + tmp0
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 - tmp27
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 * tmp28
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = 0.25
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 * tmp30
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp13 + tmp10
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp12 + tmp9
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 - tmp33
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 * tmp34
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 * tmp30
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp31 + tmp36
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = triton_helpers.maximum(tmp0, tmp1)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = triton_helpers.minimum(tmp3, tmp4)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 - tmp39
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = triton_helpers.maximum(tmp40, tmp7)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp41 * tmp41
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = triton_helpers.maximum(tmp9, tmp10)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = triton_helpers.minimum(tmp12, tmp13)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp43 - tmp44
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = triton_helpers.maximum(tmp45, tmp7)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 * tmp46
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp42 + tmp47
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = 1e-06
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp48 + tmp49
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp37 / tmp50
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp25 + tmp49
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp17 / tmp52
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp53 - tmp51
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = 1.0
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp55 - tmp54
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.broadcast_to(tmp56, [XBLOCK, RBLOCK])
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tl.sum(tmp57, 1)[:, None]
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = 64.0
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp59 / tmp60
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp61 * tmp55
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp62, None)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((), (), torch.float32)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf3; del buf3  # reuse
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub_1, sub_2, ap, sub_3, sub_4, ag, add, overlap, sub_5, union, ious, add_4, add_5, sub_7, pow_3, left, add_6, add_7, sub_8, pow_4, right, rho2, pow_1, pow_2, add_2, c2, truediv_3, dious, loss, loss_1, loss_2], Original ATen: [aten.sub, aten.mul, aten.add, aten.div, aten.pow, aten.rsub, aten.mean]
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_mean_mul_pow_rsub_sub_0.run(buf4, arg0_1, arg1_1, 1, 64, grid=grid(1), stream=stream0)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf4, )
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:55:59.910000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:59.914000 2240541 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/jl/cjl3lgwdsf7rtrhk5b5jtu5i6nhoez3mswctxqghxv74qegembpm.py
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['18_inference']
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub_1, sub_2, ap, sub_3, sub_4, ag, add, overlap, sub_5, union, ious, add_4, add_5, sub_7, pow_3, left, add_6, add_7, sub_8, pow_4, right, rho2, pow_1, pow_2, add_2, c2, truediv_3, dious, loss, loss_1, loss_2], Original ATen: [aten.sub, aten.mul, aten.add, aten.div, aten.pow, aten.rsub, aten.mean]
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_5 => add_5
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_6 => add_6
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_7 => add_7
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ag => mul_2
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ap => mul_1
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   c2 => add_3
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   dious => sub_9
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ious => div
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   left => div_1
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => sub_10
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_1 => mean
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_2 => mul_3
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   overlap => mul
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_3 => pow_3
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_4 => pow_4
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   rho2 => add_8
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   right => div_2
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_4 => sub_4
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_5 => sub_5
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_7 => sub_7
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_8 => sub_8
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_3 => div_3
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   union => add_1
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_2, %select_3), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_4, %select_5), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %sub_2), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_6, %select_7), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_8, %select_9), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %sub_4), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %mul_2), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select, %select_1), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %mul), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sub_5, 1e-06), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul, %add_1), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%select_16, %select_18), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%select_12, %select_14), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %add_5), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_7, 2), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%pow_3, 4), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%select_17, %select_19), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%select_13, %select_15), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_6, %add_7), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_8, 2), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%pow_4, 4), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%div_1, %div_2), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_10, 2), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_11, 2), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_1, %pow_2), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_2, 1e-06), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_8, %add_3), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div, %div_3), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %sub_9), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sub_10,), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean, 1.0), kwargs = {})
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_mean_mul_pow_rsub_sub_0 = async_compile.triton('triton_per_fused_add_div_mean_mul_pow_rsub_sub_0', '''
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_mean_mul_pow_rsub_sub_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_mean_mul_pow_rsub_sub_0(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 16)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex // 16
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (32 + r0 + 64*r1), None)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (32 + r0 + 64*r1), None)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (r0 + 64*r1), None)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (r0 + 64*r1), None)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (48 + r0 + 64*r1), None)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (48 + r0 + 64*r1), None)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (16 + r0 + 64*r1), None)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (16 + r0 + 64*r1), None)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.minimum(tmp0, tmp1)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 - tmp5
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.0
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.minimum(tmp9, tmp10)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp12, tmp13)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp11 - tmp14
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp15, tmp7)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 * tmp16
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp0 - tmp3
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp9 - tmp12
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 * tmp19
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp1 - tmp4
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp10 - tmp13
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 * tmp22
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 + tmp23
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 - tmp17
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp4 + tmp1
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp3 + tmp0
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 - tmp27
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 * tmp28
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = 0.25
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 * tmp30
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp13 + tmp10
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp12 + tmp9
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 - tmp33
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 * tmp34
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 * tmp30
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp31 + tmp36
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = triton_helpers.maximum(tmp0, tmp1)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = triton_helpers.minimum(tmp3, tmp4)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 - tmp39
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = triton_helpers.maximum(tmp40, tmp7)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp41 * tmp41
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = triton_helpers.maximum(tmp9, tmp10)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = triton_helpers.minimum(tmp12, tmp13)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp43 - tmp44
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = triton_helpers.maximum(tmp45, tmp7)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 * tmp46
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp42 + tmp47
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = 1e-06
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp48 + tmp49
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp37 / tmp50
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp25 + tmp49
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp17 / tmp52
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp53 - tmp51
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = 1.0
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp55 - tmp54
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.broadcast_to(tmp56, [XBLOCK, RBLOCK])
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tl.sum(tmp57, 1)[:, None]
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = 64.0
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp59 / tmp60
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp61 * tmp55
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp62, None)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((), (), torch.float32)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf3; del buf3  # reuse
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub_1, sub_2, ap, sub_3, sub_4, ag, add, overlap, sub_5, union, ious, add_4, add_5, sub_7, pow_3, left, add_6, add_7, sub_8, pow_4, right, rho2, pow_1, pow_2, add_2, c2, truediv_3, dious, loss, loss_1, loss_2], Original ATen: [aten.sub, aten.mul, aten.add, aten.div, aten.pow, aten.rsub, aten.mean]
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_mean_mul_pow_rsub_sub_0.run(buf4, arg0_1, arg1_1, 1, 64, grid=grid(1), stream=stream0)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf4, )
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:45:19.066000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:19.070000 3778217 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/ct/cctldhhktvhaebeeh7sbwf2x7znfrizi2vxzcw2vwcj6vboso4jr.py
