V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] Output code: 
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] # AOT ID: ['37_inference']
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import torch
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import math
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import random
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import os
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import tempfile
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from math import inf, nan
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch import device, empty_strided
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] aten = torch.ops.aten
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] async_compile = AsyncCompile()
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] cpp_fused_0 = async_compile.cpp_pybinding(['const int64_t*', 'int64_t*'], '''
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] #include "/tmp/torchinductor_sahanp/2r/c2rnilspx43ivnzu4uieul65kx65dfhfbptbh5og4wk6rqebuxoo.h"
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] extern "C"  void kernel(const int64_t* in_ptr0,
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                        int64_t* out_ptr0)
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] {
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     {
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4L); x0+=static_cast<int64_t>(16L))
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         {
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             {
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 if(C10_LIKELY(x0 >= static_cast<int64_t>(0L) && x0 < static_cast<int64_t>(4L)))
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 {
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     for (int64_t x0_tail = static_cast<int64_t>(0L);x0_tail < static_cast<int64_t>(4L); x0_tail++)
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     {
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                         auto tmp0 = in_ptr0[static_cast<int64_t>(x0_tail)];
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                         out_ptr0[static_cast<int64_t>(x0_tail)] = tmp0;
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     }
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 }
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             }
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         }
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     }
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] }
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] ''')
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] async_compile.wait(globals())
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] del async_compile
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] def call(args):
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     arg0_1, arg1_1 = args
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     args.clear()
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     assert_size_stride(arg0_1, (4, ), (1, ))
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     # Topologically Sorted Source Nodes: [wrapped_sort], Original ATen: [aten.sort]
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     buf0 = torch.ops.aten.sort.stable(arg0_1, stable=False, dim=0, descending=False)
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     buf1 = buf0[0]
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     cpp_fused_0(buf1, arg0_1)
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     del arg0_1
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     del buf0
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         # Topologically Sorted Source Nodes: [getitem], Original ATen: [aten.index]
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         buf3 = torch.ops.aten.index.Tensor(arg1_1, [None, buf1])
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         del arg1_1
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         del buf1
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         buf4 = buf3
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         del buf3
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     return (buf4, )
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     arg0_1 = rand_strided((4, ), (1, ), device='cpu', dtype=torch.int64)
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] if __name__ == "__main__":
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:16:49.177000 2745746 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 16:16:49.178000 2745746 site-packages/torch/_inductor/graph.py:2053] [2/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ei/ceisxy4hrebluy7clqvnicoki37ezzmirg73twtfr6kuhouzrzzi.py
I0204 16:16:50.570000 2745746 site-packages/torch/_inductor/graph.py:2087] [2/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ei/ceisxy4hrebluy7clqvnicoki37ezzmirg73twtfr6kuhouzrzzi.py
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] Output code: 
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] # AOT ID: ['37_inference']
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import torch
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import math
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import random
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import os
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import tempfile
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from math import inf, nan
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch import device, empty_strided
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] aten = torch.ops.aten
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] _quantized = torch.ops._quantized
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] async_compile = AsyncCompile()
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] cpp_fused_0 = async_compile.cpp_pybinding(['const int64_t*', 'int64_t*'], '''
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] #include "inductor_cache/2r/c2rnilspx43ivnzu4uieul65kx65dfhfbptbh5og4wk6rqebuxoo.h"
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] extern "C"  void kernel(const int64_t* in_ptr0,
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                        int64_t* out_ptr0)
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] {
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     {
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         #pragma GCC ivdep
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4L); x0+=static_cast<int64_t>(1L))
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         {
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             {
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 {
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     auto tmp0 = in_ptr0[static_cast<int64_t>(x0)];
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     out_ptr0[static_cast<int64_t>(x0)] = tmp0;
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 }
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             }
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         }
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     }
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] }
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] ''')
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] async_compile.wait(globals())
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] del async_compile
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] def call(args):
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     arg0_1, arg1_1 = args
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     args.clear()
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     assert_size_stride(arg0_1, (4, ), (1, ))
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     # Topologically Sorted Source Nodes: [wrapped_sort], Original ATen: [aten.sort]
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     buf0 = torch.ops.aten.sort.stable(arg0_1, stable=False, dim=0, descending=False)
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     buf1 = buf0[0]
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     cpp_fused_0(buf1, arg0_1)
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     del arg0_1
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     del buf0
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         torch.cuda.set_device(0)
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         # Topologically Sorted Source Nodes: [getitem], Original ATen: [aten.index]
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         buf3 = torch.ops.aten.index.Tensor(arg1_1, [None, buf1])
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         del arg1_1
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         del buf1
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         buf4 = buf3
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         del buf3
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     return (buf4, )
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     arg0_1 = rand_strided((4, ), (1, ), device='cpu', dtype=torch.int64)
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] if __name__ == "__main__":
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 21:05:38.637000 187689 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 21:05:38.639000 187689 site-packages/torch/_inductor/graph.py:2053] [2/0] [__output_code] Output code written to: inductor_cache/tg/ctgwkjgygaslbtow2y2ijgri7vdnbyhbihl3upii3rgomw5jtlpz.py
