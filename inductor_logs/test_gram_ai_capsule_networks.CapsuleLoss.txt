V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hv/chvwjdyeltl2wtunjpail35d3twqamavjwsy7iomhs2crgay2hqw.py
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub, relu, left, mul, sub_2, mul_1, sub_1, relu_1, right, mul_2, margin_loss, margin_loss_1, reconstruction_loss, mul_3, add_1, truediv], Original ATen: [aten.rsub, aten.relu, aten.pow, aten.mul, aten.sub, aten.add, aten.sum, aten.mse_loss, aten.div]
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   left => pow_1
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   margin_loss => add
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   margin_loss_1 => sum_1
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reconstruction_loss => pow_3, sub_3, sum_2
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   relu => relu
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   relu_1 => relu_1
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   right => pow_2
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (0.9, %arg0_1), kwargs = {})
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%sub,), kwargs = {})
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%relu, 2), kwargs = {})
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg1_1, %pow_1), kwargs = {})
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %arg1_1), kwargs = {})
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, 0.5), kwargs = {})
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, 0.1), kwargs = {})
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%sub_1,), kwargs = {})
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%relu_1, 2), kwargs = {})
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %pow_2), kwargs = {})
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_2), kwargs = {})
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%add,), kwargs = {})
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg3_1, %view), kwargs = {})
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_3, 2), kwargs = {})
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%pow_3,), kwargs = {})
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_2, 0.0005), kwargs = {})
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, %mul_3), kwargs = {})
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_1, 4), kwargs = {})
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_mse_loss_mul_pow_relu_rsub_sub_sum_0 = async_compile.triton('triton_per_fused_add_div_mse_loss_mul_pow_relu_rsub_sub_sum_0', '''
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 16},
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 6), 'tt.equal_to': (5,)}, 'cls': 'AttrsDescriptor'})]},
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_mse_loss_mul_pow_relu_rsub_sub_sum_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_mse_loss_mul_pow_relu_rsub_sub_sum_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr2 + (r0), None)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr3 + (r0), None)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.9
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 - tmp1
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([1, 1], 0, tl.int32)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp4, tmp3)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 * tmp5
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp0 * tmp6
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1.0
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 - tmp0
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 0.5
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 * tmp10
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 0.1
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp1 - tmp12
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp4, tmp13)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 * tmp14
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp11 * tmp15
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp7 + tmp16
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK, RBLOCK])
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.sum(tmp18, 1)[:, None]
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 - tmp22
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 * tmp23
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.broadcast_to(tmp24, [XBLOCK, RBLOCK])
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.sum(tmp25, 1)[:, None]
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 0.0005
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 * tmp28
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp20 + tmp29
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = 0.25
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 * tmp31
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp32, None)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4), (4, 1))
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4), (4, 1))
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (4, 4), (4, 1))
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg3_1, (4, 4), (4, 1))
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((), (), torch.float32)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf0; del buf0  # reuse
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub, relu, left, mul, sub_2, mul_1, sub_1, relu_1, right, mul_2, margin_loss, margin_loss_1, reconstruction_loss, mul_3, add_1, truediv], Original ATen: [aten.rsub, aten.relu, aten.pow, aten.mul, aten.sub, aten.add, aten.sum, aten.mse_loss, aten.div]
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_mse_loss_mul_pow_relu_rsub_sub_sum_0.run(buf2, arg1_1, arg0_1, arg3_1, arg2_1, 1, 16, grid=grid(1), stream=stream0)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg3_1
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf2, )
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg3_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:28:55.430000 3023851 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:28:55.434000 3023851 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/nj/cnjzshibxy264ywlsm77pw2p3kmedog2uelsv5wmmm2a7mvebp6t.py
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/hv/chvwjdyeltl2wtunjpail35d3twqamavjwsy7iomhs2crgay2hqw.py
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sub, relu, left, mul, sub_2, mul_1, sub_1, relu_1, right, mul_2, margin_loss, margin_loss_1, reconstruction_loss, mul_3, add_1, truediv], Original ATen: [aten.rsub, aten.relu, aten.pow, aten.mul, aten.sub, aten.add, aten.sum, aten.mse_loss, aten.div]
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   left => pow_1
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   margin_loss => add
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   margin_loss_1 => sum_1
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   reconstruction_loss => pow_3, sub_3, sum_2
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   relu => relu
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   relu_1 => relu_1
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   right => pow_2
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (0.9, %arg0_1), kwargs = {})
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%sub,), kwargs = {})
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%relu, 2), kwargs = {})
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg1_1, %pow_1), kwargs = {})
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %arg1_1), kwargs = {})
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, 0.5), kwargs = {})
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, 0.1), kwargs = {})
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%sub_1,), kwargs = {})
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%relu_1, 2), kwargs = {})
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %pow_2), kwargs = {})
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_2), kwargs = {})
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%add,), kwargs = {})
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg3_1, %view), kwargs = {})
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_3, 2), kwargs = {})
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%pow_3,), kwargs = {})
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_2, 0.0005), kwargs = {})
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, %mul_3), kwargs = {})
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_1, 4), kwargs = {})
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_mse_loss_mul_pow_relu_rsub_sub_sum_0 = async_compile.triton('triton_per_fused_add_div_mse_loss_mul_pow_relu_rsub_sub_sum_0', '''
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 16},
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 6), 'tt.equal_to': (5,)}, 'cls': 'AttrsDescriptor'})]},
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_mse_loss_mul_pow_relu_rsub_sub_sum_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_mse_loss_mul_pow_relu_rsub_sub_sum_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), None)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr2 + (r0), None)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr3 + (r0), None)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.9
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 - tmp1
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.full([1, 1], 0, tl.int32)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp4, tmp3)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 * tmp5
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp0 * tmp6
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1.0
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 - tmp0
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 0.5
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 * tmp10
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 0.1
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp1 - tmp12
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp4, tmp13)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 * tmp14
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp11 * tmp15
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp7 + tmp16
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK, RBLOCK])
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.sum(tmp18, 1)[:, None]
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 - tmp22
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 * tmp23
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.broadcast_to(tmp24, [XBLOCK, RBLOCK])
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.sum(tmp25, 1)[:, None]
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 0.0005
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 * tmp28
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp20 + tmp29
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = 0.25
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 * tmp31
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp32, None)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4), (4, 1))
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4), (4, 1))
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (4, 4), (4, 1))
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg3_1, (4, 4), (4, 1))
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((), (), torch.float32)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf0; del buf0  # reuse
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sub, relu, left, mul, sub_2, mul_1, sub_1, relu_1, right, mul_2, margin_loss, margin_loss_1, reconstruction_loss, mul_3, add_1, truediv], Original ATen: [aten.rsub, aten.relu, aten.pow, aten.mul, aten.sub, aten.add, aten.sum, aten.mse_loss, aten.div]
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_mse_loss_mul_pow_relu_rsub_sub_sum_0.run(buf2, arg1_1, arg0_1, arg3_1, arg2_1, 1, 16, grid=grid(1), stream=stream0)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg3_1
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf2, )
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg3_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 21:17:42.906000 461932 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:17:42.910000 461932 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/an/canqoosi7u2ubgu6bcovebflvttc6lnd6jeclzk7snbatypczg3x.py
