V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['3_forward']
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/oy/coy6ufmtfjugpqewvi5wio34grmbfj6km6oevax3ozklpiahu36y.py
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_3, %where], 1), kwargs = {})
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_0 = async_compile.triton('triton_poi_fused_cat_0', '''
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_0(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2304
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 36)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 576
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*(x1) + 64*x2), tmp4 & xmask, other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 36, tl.int64)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 16*((-4) + x1) + 512*x2), tmp6 & xmask, other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr2 + ((-4) + x1), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 0.0
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 > tmp12
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 0.2
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp11 * tmp14
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp13, tmp11, tmp15)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full(tmp16.shape, 0.0, tmp16.dtype)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp6, tmp16, tmp17)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp4, tmp5, tmp18)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp19, xmask)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qb/cqbt7si2cdrnu4gjt5hrhbecss26bhnw2qnftynlewehuonabypj.py
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat_1 => cat_1
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_1 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_3, %where, %where_1], 1), kwargs = {})
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_1 = async_compile.triton('triton_poi_fused_cat_1', '''
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4352
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 68)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 1088
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*(x1) + 64*x2), tmp4 & xmask, other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 36, tl.int64)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (x0 + 16*((-4) + x1) + 512*x2), tmp9 & xmask, other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + ((-4) + x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 0.0
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 > tmp13
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 0.2
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp12 * tmp15
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.where(tmp14, tmp12, tmp16)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full(tmp17.shape, 0.0, tmp17.dtype)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp9, tmp17, tmp18)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp0 >= tmp7
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 68, tl.int64)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp0 < tmp21
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr3 + (x0 + 16*((-36) + x1) + 512*x2), tmp20 & xmask, other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr4 + ((-36) + x1), tmp20 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = 0.0
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 > tmp26
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 0.2
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp25 * tmp28
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp27, tmp25, tmp29)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.full(tmp30.shape, 0.0, tmp30.dtype)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp20, tmp30, tmp31)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp9, tmp19, tmp32)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.where(tmp4, tmp5, tmp33)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp34, xmask)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7w/c7wwo7kic5srjbpa2gs4xme77dcwnoobbx7obrbsdcesnx2sqx5i.py
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat_2], Original ATen: [aten.cat]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat_2 => cat_2
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_2 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_3, %where, %where_1, %where_2], 1), kwargs = {})
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 6400
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 100)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 1600
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*(x1) + 64*x2), tmp4 & xmask, other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 36, tl.int64)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (x0 + 16*((-4) + x1) + 512*x2), tmp9 & xmask, other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + ((-4) + x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 0.0
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 > tmp13
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 0.2
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp12 * tmp15
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.where(tmp14, tmp12, tmp16)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full(tmp17.shape, 0.0, tmp17.dtype)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp9, tmp17, tmp18)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp0 >= tmp7
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 68, tl.int64)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp0 < tmp21
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 & tmp22
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr3 + (x0 + 16*((-36) + x1) + 512*x2), tmp23 & xmask, other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr4 + ((-36) + x1), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp24 + tmp25
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = 0.0
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 > tmp27
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = 0.2
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp26 * tmp29
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp28, tmp26, tmp30)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.full(tmp31.shape, 0.0, tmp31.dtype)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp23, tmp31, tmp32)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp0 >= tmp21
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.full([1], 100, tl.int64)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp0 < tmp35
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr5 + (x0 + 16*((-68) + x1) + 512*x2), tmp34 & xmask, other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr6 + ((-68) + x1), tmp34 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 + tmp38
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = 0.0
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 > tmp40
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = 0.2
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp39 * tmp42
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.where(tmp41, tmp39, tmp43)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.full(tmp44.shape, 0.0, tmp44.dtype)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp34, tmp44, tmp45)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.where(tmp23, tmp33, tmp46)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.where(tmp9, tmp19, tmp47)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp4, tmp5, tmp48)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp49, xmask)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wy/cwyvwithovoztc4lxb5p5xz3wogee53cojo7ls5bud7arw2biprt.py
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat_3], Original ATen: [aten.cat]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat_3 => cat_3
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_3 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_3, %where, %where_1, %where_2, %where_3], 1), kwargs = {})
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_3 = async_compile.triton('triton_poi_fused_cat_3', '''
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8448
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 132)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 2112
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*(x1) + 64*x2), tmp4 & xmask, other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 36, tl.int64)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (x0 + 16*((-4) + x1) + 512*x2), tmp9 & xmask, other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + ((-4) + x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 0.0
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 > tmp13
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 0.2
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp12 * tmp15
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.where(tmp14, tmp12, tmp16)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full(tmp17.shape, 0.0, tmp17.dtype)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp9, tmp17, tmp18)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp0 >= tmp7
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 68, tl.int64)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp0 < tmp21
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 & tmp22
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr3 + (x0 + 16*((-36) + x1) + 512*x2), tmp23 & xmask, other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr4 + ((-36) + x1), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp24 + tmp25
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = 0.0
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 > tmp27
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = 0.2
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp26 * tmp29
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp28, tmp26, tmp30)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.full(tmp31.shape, 0.0, tmp31.dtype)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp23, tmp31, tmp32)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp0 >= tmp21
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.full([1], 100, tl.int64)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp0 < tmp35
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp34 & tmp36
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr5 + (x0 + 16*((-68) + x1) + 512*x2), tmp37 & xmask, other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr6 + ((-68) + x1), tmp37 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 + tmp39
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = 0.0
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 > tmp41
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = 0.2
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp40 * tmp43
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp42, tmp40, tmp44)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.full(tmp45.shape, 0.0, tmp45.dtype)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.where(tmp37, tmp45, tmp46)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp0 >= tmp35
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.full([1], 132, tl.int64)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp0 < tmp49
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr7 + (x0 + 16*((-100) + x1) + 512*x2), tmp48 & xmask, other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.load(in_ptr8 + ((-100) + x1), tmp48 & xmask, eviction_policy='evict_last', other=0.0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 + tmp52
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = 0.0
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp53 > tmp54
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = 0.2
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp53 * tmp56
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.where(tmp55, tmp53, tmp57)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tl.full(tmp58.shape, 0.0, tmp58.dtype)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.where(tmp48, tmp58, tmp59)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tl.where(tmp37, tmp47, tmp60)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tl.where(tmp23, tmp33, tmp61)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.where(tmp9, tmp19, tmp62)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.where(tmp4, tmp5, tmp63)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp64, xmask)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ma/cmaraacelrjc4st73tmbhwwotj6qpxjaxag4e6mdrsghuvxltifw.py
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_9, mul, add], Original ATen: [aten.convolution, aten.mul, aten.add]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => convolution_4
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_4
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_4 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%cat_3, %primals_10, %primals_11, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_4, 0.2), kwargs = {})
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, %primals_3), kwargs = {})
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_convolution_mul_4 = async_compile.triton('triton_poi_fused_add_convolution_mul_4', '''
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_mul_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_convolution_mul_4(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x3), xmask)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.2
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp6, xmask)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/mg/cmgz6d2sb5gawj7wwjxhdbrisvbylb76jrjhntkjksdfjy5puei5.py
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_7, input_8], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => convolution_3
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => gt_3, mul_3, where_3
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%cat_2, %primals_8, %primals_9, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_3 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_3, 0), kwargs = {})
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_3, 0.2), kwargs = {})
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_3 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_3, %convolution_3, %mul_3), kwargs = {})
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_4 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%where_3, 0), kwargs = {})
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5', '''
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2048
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 32)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.2
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 > tmp3
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp8, xmask)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11 = args
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (32, 4, 3, 3), (36, 9, 3, 1))
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (32, ), (1, ))
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (32, 36, 3, 3), (324, 9, 3, 1))
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (32, ), (1, ))
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (32, 68, 3, 3), (612, 9, 3, 1))
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (32, ), (1, ))
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (32, 100, 3, 3), (900, 9, 3, 1))
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (32, ), (1, ))
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, 132, 3, 3), (1188, 9, 3, 1))
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_3, primals_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 32, 4, 4), (512, 16, 4, 1))
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 36, 4, 4), (576, 16, 4, 1), torch.float32)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_0.run(primals_3, buf0, primals_2, buf1, 2304, grid=grid(2304), stream=stream0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, primals_4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 32, 4, 4), (512, 16, 4, 1))
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 68, 4, 4), (1088, 16, 4, 1), torch.float32)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_1.run(primals_3, buf0, primals_2, buf2, primals_5, buf3, 4352, grid=grid(4352), stream=stream0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf3, primals_6, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 32, 4, 4), (512, 16, 4, 1))
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 100, 4, 4), (1600, 16, 4, 1), torch.float32)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat_2], Original ATen: [aten.cat]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(primals_3, buf0, primals_2, buf2, primals_5, buf4, primals_7, buf5, 6400, grid=grid(6400), stream=stream0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf5, primals_8, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 32, 4, 4), (512, 16, 4, 1))
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 132, 4, 4), (2112, 16, 4, 1), torch.float32)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat_3], Original ATen: [aten.cat]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_3.run(primals_3, buf0, primals_2, buf2, primals_5, buf4, primals_7, buf6, primals_9, buf7, 8448, grid=grid(8448), stream=stream0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9], Original ATen: [aten.convolution]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf7, primals_10, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf8; del buf8  # reuse
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9, mul, add], Original ATen: [aten.convolution, aten.mul, aten.add]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_convolution_mul_4.run(buf9, primals_11, primals_3, 256, grid=grid(256), stream=stream0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 32, 4, 4), (512, 16, 4, 1), torch.bool)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7, input_8], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5.run(buf6, primals_9, buf10, 2048, grid=grid(2048), stream=stream0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 32, 4, 4), (512, 16, 4, 1), torch.bool)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5.run(buf4, primals_7, buf11, 2048, grid=grid(2048), stream=stream0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 32, 4, 4), (512, 16, 4, 1), torch.bool)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5.run(buf2, primals_5, buf12, 2048, grid=grid(2048), stream=stream0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 32, 4, 4), (512, 16, 4, 1), torch.bool)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5.run(buf0, primals_2, buf13, 2048, grid=grid(2048), stream=stream0)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf9, primals_1, primals_3, primals_4, primals_6, primals_8, primals_10, buf1, buf3, buf5, buf7, buf10, buf11, buf12, buf13, )
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((32, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((32, 36, 3, 3), (324, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((32, 68, 3, 3), (612, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((32, 100, 3, 3), (900, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, 132, 3, 3), (1188, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11])
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:59:42.943000 342166 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:59:42.951000 342166 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/jj/cjjtbdvkmx32kdao5y4a6c47rqasy472gsvgtp2ocsebzjsakwgh.py
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['3_forward']
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/oy/coy6ufmtfjugpqewvi5wio34grmbfj6km6oevax3ozklpiahu36y.py
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_3, %where], 1), kwargs = {})
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_0 = async_compile.triton('triton_poi_fused_cat_0', '''
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_0(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2304
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 36)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 576
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*(x1) + 64*x2), tmp4 & xmask, other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 36, tl.int64)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 16*((-4) + x1) + 512*x2), tmp6 & xmask, other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr2 + ((-4) + x1), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 0.0
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 > tmp12
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 0.2
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp11 * tmp14
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp13, tmp11, tmp15)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full(tmp16.shape, 0.0, tmp16.dtype)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp6, tmp16, tmp17)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp4, tmp5, tmp18)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp19, xmask)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qb/cqbt7si2cdrnu4gjt5hrhbecss26bhnw2qnftynlewehuonabypj.py
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat_1 => cat_1
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_1 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_3, %where, %where_1], 1), kwargs = {})
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_1 = async_compile.triton('triton_poi_fused_cat_1', '''
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4352
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 68)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 1088
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*(x1) + 64*x2), tmp4 & xmask, other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 36, tl.int64)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (x0 + 16*((-4) + x1) + 512*x2), tmp9 & xmask, other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + ((-4) + x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 0.0
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 > tmp13
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 0.2
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp12 * tmp15
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.where(tmp14, tmp12, tmp16)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full(tmp17.shape, 0.0, tmp17.dtype)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp9, tmp17, tmp18)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp0 >= tmp7
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 68, tl.int64)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp0 < tmp21
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr3 + (x0 + 16*((-36) + x1) + 512*x2), tmp20 & xmask, other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr4 + ((-36) + x1), tmp20 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = 0.0
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 > tmp26
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 0.2
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp25 * tmp28
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp27, tmp25, tmp29)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.full(tmp30.shape, 0.0, tmp30.dtype)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp20, tmp30, tmp31)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp9, tmp19, tmp32)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.where(tmp4, tmp5, tmp33)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp34, xmask)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7w/c7wwo7kic5srjbpa2gs4xme77dcwnoobbx7obrbsdcesnx2sqx5i.py
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat_2], Original ATen: [aten.cat]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat_2 => cat_2
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_2 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_3, %where, %where_1, %where_2], 1), kwargs = {})
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8192}, 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 6400
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 100)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 1600
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*(x1) + 64*x2), tmp4 & xmask, other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 36, tl.int64)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (x0 + 16*((-4) + x1) + 512*x2), tmp9 & xmask, other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + ((-4) + x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 0.0
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 > tmp13
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 0.2
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp12 * tmp15
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.where(tmp14, tmp12, tmp16)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full(tmp17.shape, 0.0, tmp17.dtype)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp9, tmp17, tmp18)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp0 >= tmp7
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 68, tl.int64)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp0 < tmp21
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 & tmp22
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr3 + (x0 + 16*((-36) + x1) + 512*x2), tmp23 & xmask, other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr4 + ((-36) + x1), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp24 + tmp25
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = 0.0
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 > tmp27
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = 0.2
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp26 * tmp29
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp28, tmp26, tmp30)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.full(tmp31.shape, 0.0, tmp31.dtype)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp23, tmp31, tmp32)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp0 >= tmp21
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.full([1], 100, tl.int64)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp0 < tmp35
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr5 + (x0 + 16*((-68) + x1) + 512*x2), tmp34 & xmask, other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr6 + ((-68) + x1), tmp34 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 + tmp38
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = 0.0
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 > tmp40
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = 0.2
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp39 * tmp42
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.where(tmp41, tmp39, tmp43)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.full(tmp44.shape, 0.0, tmp44.dtype)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp34, tmp44, tmp45)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.where(tmp23, tmp33, tmp46)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.where(tmp9, tmp19, tmp47)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp4, tmp5, tmp48)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp49, xmask)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/wy/cwyvwithovoztc4lxb5p5xz3wogee53cojo7ls5bud7arw2biprt.py
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat_3], Original ATen: [aten.cat]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat_3 => cat_3
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_3 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_3, %where, %where_1, %where_2, %where_3], 1), kwargs = {})
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_3 = async_compile.triton('triton_poi_fused_cat_3', '''
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8448
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 132)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 2112
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*(x1) + 64*x2), tmp4 & xmask, other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 36, tl.int64)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (x0 + 16*((-4) + x1) + 512*x2), tmp9 & xmask, other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + ((-4) + x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 0.0
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 > tmp13
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 0.2
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp12 * tmp15
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.where(tmp14, tmp12, tmp16)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full(tmp17.shape, 0.0, tmp17.dtype)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp9, tmp17, tmp18)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp0 >= tmp7
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 68, tl.int64)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp0 < tmp21
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 & tmp22
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr3 + (x0 + 16*((-36) + x1) + 512*x2), tmp23 & xmask, other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr4 + ((-36) + x1), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp24 + tmp25
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = 0.0
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 > tmp27
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = 0.2
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp26 * tmp29
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp28, tmp26, tmp30)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.full(tmp31.shape, 0.0, tmp31.dtype)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp23, tmp31, tmp32)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp0 >= tmp21
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.full([1], 100, tl.int64)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp0 < tmp35
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp34 & tmp36
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr5 + (x0 + 16*((-68) + x1) + 512*x2), tmp37 & xmask, other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr6 + ((-68) + x1), tmp37 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 + tmp39
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = 0.0
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 > tmp41
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = 0.2
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp40 * tmp43
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp42, tmp40, tmp44)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.full(tmp45.shape, 0.0, tmp45.dtype)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.where(tmp37, tmp45, tmp46)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp0 >= tmp35
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.full([1], 132, tl.int64)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp0 < tmp49
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr7 + (x0 + 16*((-100) + x1) + 512*x2), tmp48 & xmask, other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl.load(in_ptr8 + ((-100) + x1), tmp48 & xmask, eviction_policy='evict_last', other=0.0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 + tmp52
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = 0.0
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp53 > tmp54
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = 0.2
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp53 * tmp56
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.where(tmp55, tmp53, tmp57)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tl.full(tmp58.shape, 0.0, tmp58.dtype)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.where(tmp48, tmp58, tmp59)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tl.where(tmp37, tmp47, tmp60)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tl.where(tmp23, tmp33, tmp61)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.where(tmp9, tmp19, tmp62)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.where(tmp4, tmp5, tmp63)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp64, xmask)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ma/cmaraacelrjc4st73tmbhwwotj6qpxjaxag4e6mdrsghuvxltifw.py
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_9, mul, add], Original ATen: [aten.convolution, aten.mul, aten.add]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => convolution_4
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_4
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_4 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%cat_3, %primals_10, %primals_11, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_4, 0.2), kwargs = {})
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, %primals_3), kwargs = {})
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_convolution_mul_4 = async_compile.triton('triton_poi_fused_add_convolution_mul_4', '''
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_mul_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_convolution_mul_4(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x3), xmask)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.2
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp6, xmask)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/mg/cmgz6d2sb5gawj7wwjxhdbrisvbylb76jrjhntkjksdfjy5puei5.py
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_7, input_8], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => convolution_3
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => gt_3, mul_3, where_3
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%cat_2, %primals_8, %primals_9, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_3 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution_3, 0), kwargs = {})
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_3, 0.2), kwargs = {})
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_3 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt_3, %convolution_3, %mul_3), kwargs = {})
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt_4 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%where_3, 0), kwargs = {})
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5 = async_compile.triton('triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5', '''
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 2048
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 32)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.0
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.2
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp2, tmp6)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 > tmp3
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp8, xmask)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11 = args
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (32, 4, 3, 3), (36, 9, 3, 1))
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (32, ), (1, ))
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (32, 36, 3, 3), (324, 9, 3, 1))
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (32, ), (1, ))
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (32, 68, 3, 3), (612, 9, 3, 1))
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (32, ), (1, ))
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (32, 100, 3, 3), (900, 9, 3, 1))
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (32, ), (1, ))
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, 132, 3, 3), (1188, 9, 3, 1))
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_3, primals_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 32, 4, 4), (512, 16, 4, 1))
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 36, 4, 4), (576, 16, 4, 1), torch.float32)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_0.run(primals_3, buf0, primals_2, buf1, 2304, grid=grid(2304), stream=stream0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.convolution]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, primals_4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 32, 4, 4), (512, 16, 4, 1))
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 68, 4, 4), (1088, 16, 4, 1), torch.float32)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_1.run(primals_3, buf0, primals_2, buf2, primals_5, buf3, 4352, grid=grid(4352), stream=stream0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.convolution]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf3, primals_6, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 32, 4, 4), (512, 16, 4, 1))
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 100, 4, 4), (1600, 16, 4, 1), torch.float32)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat_2], Original ATen: [aten.cat]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(primals_3, buf0, primals_2, buf2, primals_5, buf4, primals_7, buf5, 6400, grid=grid(6400), stream=stream0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.convolution]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(buf5, primals_8, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (4, 32, 4, 4), (512, 16, 4, 1))
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 132, 4, 4), (2112, 16, 4, 1), torch.float32)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat_3], Original ATen: [aten.cat]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_3.run(primals_3, buf0, primals_2, buf2, primals_5, buf4, primals_7, buf6, primals_9, buf7, 8448, grid=grid(8448), stream=stream0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9], Original ATen: [aten.convolution]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf7, primals_10, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf8; del buf8  # reuse
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9, mul, add], Original ATen: [aten.convolution, aten.mul, aten.add]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_convolution_mul_4.run(buf9, primals_11, primals_3, 256, grid=grid(256), stream=stream0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 32, 4, 4), (512, 16, 4, 1), torch.bool)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7, input_8], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5.run(buf6, primals_9, buf10, 2048, grid=grid(2048), stream=stream0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 32, 4, 4), (512, 16, 4, 1), torch.bool)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5.run(buf4, primals_7, buf11, 2048, grid=grid(2048), stream=stream0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 32, 4, 4), (512, 16, 4, 1), torch.bool)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5.run(buf2, primals_5, buf12, 2048, grid=grid(2048), stream=stream0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 32, 4, 4), (512, 16, 4, 1), torch.bool)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.convolution, aten.leaky_relu, aten.leaky_relu_backward]
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_5.run(buf0, primals_2, buf13, 2048, grid=grid(2048), stream=stream0)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf9, primals_1, primals_3, primals_4, primals_6, primals_8, primals_10, buf1, buf3, buf5, buf7, buf10, buf11, buf12, buf13, )
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((32, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((32, 36, 3, 3), (324, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((32, 68, 3, 3), (612, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((32, 100, 3, 3), (900, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, 132, 3, 3), (1188, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11])
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:50:00.168000 2977526 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:50:00.179000 2977526 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/rk/crkw3quklsqd5fizc2adqstm3s77ahwxizqda3nlhcbna7sr7cnt.py
