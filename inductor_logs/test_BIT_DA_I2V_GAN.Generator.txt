V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] Output code: 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # AOT ID: ['7_forward']
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import torch
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import math
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import random
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import os
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import tempfile
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from math import inf, nan
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch import device, empty_strided
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid,
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     split_scan_grid,
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid_combo_kernels,
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     start_graph,
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     end_graph,
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     cooperative_reduction_grid,
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] aten = torch.ops.aten
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile = AsyncCompile()
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qw/cqwbgmaxvtbkhtmgppbsgq5bp3cyfva2phv4x6qm3a6sp6j6jjzv.py
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [pow_1, mean, add, rsqrt, input_1], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add => add
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   input_1 => mul
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mean => mean
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   pow_1 => pow_1
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   rsqrt => rsqrt
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select, 2), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%pow_1, [1], True), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, 1e-08), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select, %rsqrt), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_add_mean_mul_pow_rsqrt_0 = async_compile.triton('triton_poi_fused_add_mean_mul_pow_rsqrt_0', '''
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mean_mul_pow_rsqrt_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_add_mean_mul_pow_rsqrt_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x2 = xindex
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x1 = xindex // 4
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp1 * tmp1
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tmp3 * tmp3
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp2 + tmp4
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tmp6 * tmp6
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp5 + tmp7
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tmp9 * tmp9
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tmp8 + tmp10
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = 4.0
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tmp11 / tmp12
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = 1e-08
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = tmp13 + tmp14
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = libdevice.rsqrt(tmp15)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tmp0 * tmp16
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fa/cfamou7gcgudbareniupeanvwfjlfhreswkqpz23rcqkotdz36mu.py
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [mul_1, out], Original ATen: [aten.mul, aten.t]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul_1 => mul_1
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   out => permute
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_2, 0.005), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %permute : [num_users=4] = call_function[target=torch.ops.aten.permute.default](args = (%mul_1, [1, 0]), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_mul_t_1 = async_compile.triton('triton_poi_fused_mul_t_1', '''
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_t_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_mul_t_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = xindex
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = 0.005
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 * tmp1
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tt/cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [pow_2, mean_1, add_5, rsqrt_1, input_2], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add_5 => add_5
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   input_2 => mul_17
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mean_1 => mean_1
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   pow_2 => pow_2
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   rsqrt_1 => rsqrt_1
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_1, 2), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%pow_2, [1], True), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_1, 1e-08), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %rsqrt_1 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_5,), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_17 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_1, %rsqrt_1), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_add_mean_mul_pow_rsqrt_2 = async_compile.triton('triton_poi_fused_add_mean_mul_pow_rsqrt_2', '''
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mean_mul_pow_rsqrt_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_add_mean_mul_pow_rsqrt_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x2 = xindex
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x1 = xindex // 4
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (16 + x2), xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (16 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tl.load(in_ptr0 + (17 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tl.load(in_ptr0 + (18 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tl.load(in_ptr0 + (19 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp1 * tmp1
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tmp3 * tmp3
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp2 + tmp4
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tmp6 * tmp6
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp5 + tmp7
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tmp9 * tmp9
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tmp8 + tmp10
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = 4.0
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tmp11 / tmp12
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = 1e-08
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = tmp13 + tmp14
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = libdevice.rsqrt(tmp15)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tmp0 * tmp16
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vn/cvnu3k5zpdji46sw5b7s5ncl4iovi5iuyp5wrrclxodd6ulkviee.py
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [pow_3, mean_2, add_10, rsqrt_2, input_3], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add_10 => add_10
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   input_3 => mul_34
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mean_2 => mean_2
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   pow_3 => pow_3
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   rsqrt_2 => rsqrt_2
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_2, 2), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mean_2 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%pow_3, [1], True), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add_10 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_2, 1e-08), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %rsqrt_2 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_10,), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_34 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_2, %rsqrt_2), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_add_mean_mul_pow_rsqrt_3 = async_compile.triton('triton_poi_fused_add_mean_mul_pow_rsqrt_3', '''
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mean_mul_pow_rsqrt_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_add_mean_mul_pow_rsqrt_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x2 = xindex
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x1 = xindex // 4
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (32 + x2), xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (32 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tl.load(in_ptr0 + (33 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tl.load(in_ptr0 + (34 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tl.load(in_ptr0 + (35 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp1 * tmp1
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tmp3 * tmp3
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp2 + tmp4
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tmp6 * tmp6
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp5 + tmp7
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tmp9 * tmp9
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tmp8 + tmp10
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = 4.0
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tmp11 / tmp12
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = 1e-08
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = tmp13 + tmp14
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = libdevice.rsqrt(tmp15)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tmp0 * tmp16
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/f4/cf44ra664o6wpoafohioumywnyqgxoz4fc72ld3hw5v6yvexguss.py
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [pow_4, mean_3, add_15, rsqrt_3, input_4], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add_15 => add_15
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   input_4 => mul_51
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mean_3 => mean_3
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   pow_4 => pow_4
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   rsqrt_3 => rsqrt_3
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_3, 2), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mean_3 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%pow_4, [1], True), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add_15 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_3, 1e-08), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %rsqrt_3 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_15,), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_51 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_3, %rsqrt_3), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_add_mean_mul_pow_rsqrt_4 = async_compile.triton('triton_poi_fused_add_mean_mul_pow_rsqrt_4', '''
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mean_mul_pow_rsqrt_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_add_mean_mul_pow_rsqrt_4(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x2 = xindex
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x1 = xindex // 4
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (48 + x2), xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (48 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tl.load(in_ptr0 + (49 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tl.load(in_ptr0 + (50 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tl.load(in_ptr0 + (51 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp1 * tmp1
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tmp3 * tmp3
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp2 + tmp4
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tmp6 * tmp6
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp5 + tmp7
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tmp9 * tmp9
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tmp8 + tmp10
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = 4.0
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tmp11 / tmp12
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = 1e-08
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = tmp13 + tmp14
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = libdevice.rsqrt(tmp15)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tmp0 * tmp16
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rj/crj5oclm2olcigx3bn7tdlb5n5sjwkpfmjdgfvlchh7qawm33qfy.py
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [mul_2, add_1, leaky_relu, out_1, add_6, leaky_relu_4, out_9, add_11, leaky_relu_8, out_17, add_16, leaky_relu_12, out_25], Original ATen: [aten.mul, aten.add, aten.leaky_relu]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add_1 => add_1
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add_11 => add_11
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add_16 => add_16
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add_6 => add_6
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   leaky_relu => gt, mul_3, where
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   leaky_relu_12 => gt_12, mul_54, where_12
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   leaky_relu_4 => gt_4, mul_20, where_4
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   leaky_relu_8 => gt_8, mul_37, where_8
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul_2 => mul_2
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   out_1 => mul_4
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   out_17 => mul_38
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   out_25 => mul_55
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   out_9 => mul_21
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_2 : [num_users=4] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_3, 0.01), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm, %mul_2), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %gt : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_1, 0), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, 0.2), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %add_1, %mul_3), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_4 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where, 1.4142135623730951), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add_6 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_4, %mul_2), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %gt_4 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_6, 0), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_6, 0.2), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %where_4 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_4, %add_6, %mul_20), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_21 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where_4, 1.4142135623730951), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add_11 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_8, %mul_2), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %gt_8 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_11, 0), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_37 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_11, 0.2), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %where_8 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_8, %add_11, %mul_37), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_38 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where_8, 1.4142135623730951), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add_16 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_12, %mul_2), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %gt_12 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_16, 0), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_54 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_16, 0.2), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %where_12 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_12, %add_16, %mul_54), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_55 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where_12, 1.4142135623730951), kwargs = {})
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_add_leaky_relu_mul_5 = async_compile.triton('triton_poi_fused_add_leaky_relu_mul_5', '''
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_out_ptr2': '*fp32', 'in_out_ptr3': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'out_ptr1': '*i1', 'out_ptr2': '*i1', 'out_ptr3': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_leaky_relu_mul_5', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1', 'in_out_ptr2', 'in_out_ptr3'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_add_leaky_relu_mul_5(in_out_ptr0, in_out_ptr1, in_out_ptr2, in_out_ptr3, in_ptr0, out_ptr0, out_ptr1, out_ptr2, out_ptr3, xnumel, XBLOCK : tl.constexpr):
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x2 = xindex
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = (xindex % 4)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = tl.load(in_out_ptr1 + (x2), xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp18 = tl.load(in_out_ptr2 + (x2), xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp24 = tl.load(in_out_ptr3 + (x2), xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = 0.01
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tmp1 * tmp2
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tmp0 + tmp3
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = 0.0
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tmp4 > tmp5
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = 0.2
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp4 * tmp7
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tl.where(tmp6, tmp4, tmp8)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = 1.4142135623730951
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tmp9 * tmp10
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tmp12 + tmp3
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = tmp13 > tmp5
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = tmp13 * tmp7
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = tl.where(tmp14, tmp13, tmp15)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tmp16 * tmp10
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp19 = tmp18 + tmp3
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp20 = tmp19 > tmp5
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp21 = tmp19 * tmp7
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp22 = tl.where(tmp20, tmp19, tmp21)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp23 = tmp22 * tmp10
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp25 = tmp24 + tmp3
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp26 = tmp25 > tmp5
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp27 = tmp25 * tmp7
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp28 = tl.where(tmp26, tmp25, tmp27)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp29 = tmp28 * tmp10
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp11, xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr1 + (x2), tmp14, xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(in_out_ptr1 + (x2), tmp17, xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr2 + (x2), tmp20, xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(in_out_ptr2 + (x2), tmp23, xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr3 + (x2), tmp26, xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(in_out_ptr3 + (x2), tmp29, xmask)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile.wait(globals())
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] del async_compile
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def call(args):
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     args.clear()
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_6, (4, 4), (4, 1))
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_8, (4, 4), (4, 1))
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         torch.cuda.set_device(0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, mean, add, rsqrt, input_1], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_mean_mul_pow_rsqrt_0.run(primals_1, buf0, 16, grid=grid(16), stream=stream0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf1 = empty_strided_cuda((4, 4), (1, 4), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mul_1, out], Original ATen: [aten.mul, aten.t]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_mul_t_1.run(primals_2, buf1, 16, grid=grid(16), stream=stream0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_2
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf2 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.mm]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf0, buf1, out=buf2)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf17 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [pow_2, mean_1, add_5, rsqrt_1, input_2], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_mean_mul_pow_rsqrt_2.run(primals_1, buf17, 16, grid=grid(16), stream=stream0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf18 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_8], Original ATen: [aten.mm]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf17, buf1, out=buf18)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf30 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [pow_3, mean_2, add_10, rsqrt_2, input_3], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_mean_mul_pow_rsqrt_3.run(primals_1, buf30, 16, grid=grid(16), stream=stream0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf31 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_16], Original ATen: [aten.mm]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf30, buf1, out=buf31)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf43 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [pow_4, mean_3, add_15, rsqrt_3, input_4], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_mean_mul_pow_rsqrt_4.run(primals_1, buf43, 16, grid=grid(16), stream=stream0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_1
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf44 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_24], Original ATen: [aten.mm]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf43, buf1, out=buf44)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf3 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf4 = buf2; del buf2  # reuse
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf19 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf20 = buf18; del buf18  # reuse
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf32 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf33 = buf31; del buf31  # reuse
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf45 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf46 = buf44; del buf44  # reuse
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mul_2, add_1, leaky_relu, out_1, add_6, leaky_relu_4, out_9, add_11, leaky_relu_8, out_17, add_16, leaky_relu_12, out_25], Original ATen: [aten.mul, aten.add, aten.leaky_relu]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_leaky_relu_mul_5.run(buf4, buf20, buf33, buf46, primals_3, buf3, buf19, buf32, buf45, 16, grid=grid(16), stream=stream0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_3
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf5 = buf1; del buf1  # reuse
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mul_4, out_2], Original ATen: [aten.mul, aten.t]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_mul_t_1.run(primals_4, buf5, 16, grid=grid(16), stream=stream0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_4
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf6 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.mm]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf4, buf5, out=buf6)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf21 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_10], Original ATen: [aten.mm]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf20, buf5, out=buf21)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf34 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_18], Original ATen: [aten.mm]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf33, buf5, out=buf34)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf47 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_26], Original ATen: [aten.mm]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf46, buf5, out=buf47)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf7 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf8 = buf6; del buf6  # reuse
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf22 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf23 = buf21; del buf21  # reuse
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf35 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf36 = buf34; del buf34  # reuse
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf48 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf49 = buf47; del buf47  # reuse
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mul_5, add_2, leaky_relu_1, out_3, add_7, leaky_relu_5, out_11, add_12, leaky_relu_9, out_19, add_17, leaky_relu_13, out_27], Original ATen: [aten.mul, aten.add, aten.leaky_relu]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_leaky_relu_mul_5.run(buf8, buf23, buf36, buf49, primals_5, buf7, buf22, buf35, buf48, 16, grid=grid(16), stream=stream0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_5
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf9 = empty_strided_cuda((4, 4), (1, 4), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mul_7, out_4], Original ATen: [aten.mul, aten.t]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_mul_t_1.run(primals_6, buf9, 16, grid=grid(16), stream=stream0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_6
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf10 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.mm]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf8, buf9, out=buf10)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf24 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_12], Original ATen: [aten.mm]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf23, buf9, out=buf24)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf37 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_20], Original ATen: [aten.mm]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf36, buf9, out=buf37)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf50 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_28], Original ATen: [aten.mm]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf49, buf9, out=buf50)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf11 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf12 = buf10; del buf10  # reuse
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf25 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf26 = buf24; del buf24  # reuse
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf38 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf39 = buf37; del buf37  # reuse
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf51 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf52 = buf50; del buf50  # reuse
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mul_8, add_3, leaky_relu_2, out_5, add_8, leaky_relu_6, out_13, add_13, leaky_relu_10, out_21, add_18, leaky_relu_14, out_29], Original ATen: [aten.mul, aten.add, aten.leaky_relu]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_leaky_relu_mul_5.run(buf12, buf26, buf39, buf52, primals_7, buf11, buf25, buf38, buf51, 16, grid=grid(16), stream=stream0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_7
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf13 = empty_strided_cuda((4, 4), (1, 4), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mul_10, out_6], Original ATen: [aten.mul, aten.t]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_mul_t_1.run(primals_8, buf13, 16, grid=grid(16), stream=stream0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_8
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf14 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_6], Original ATen: [aten.mm]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf12, buf13, out=buf14)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf27 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_14], Original ATen: [aten.mm]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf26, buf13, out=buf27)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf40 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_22], Original ATen: [aten.mm]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf39, buf13, out=buf40)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf53 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_30], Original ATen: [aten.mm]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf52, buf13, out=buf53)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf15 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf16 = buf14; del buf14  # reuse
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf28 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf29 = buf27; del buf27  # reuse
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf41 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf42 = buf40; del buf40  # reuse
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf54 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf55 = buf53; del buf53  # reuse
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mul_11, add_4, leaky_relu_3, out_7, add_9, leaky_relu_7, out_15, add_14, leaky_relu_11, out_23, add_19, leaky_relu_15, out_31], Original ATen: [aten.mul, aten.add, aten.leaky_relu]
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_leaky_relu_mul_5.run(buf16, buf29, buf42, buf55, primals_9, buf15, buf28, buf41, buf54, 16, grid=grid(16), stream=stream0)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_9
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return (reinterpret_tensor(buf16, (4, 1, 4), (4, 4, 1), 0), buf16, buf29, buf42, buf55, buf0, buf3, buf4, buf7, buf8, buf11, buf12, buf15, buf17, buf19, buf20, buf22, buf23, buf25, buf26, buf28, buf30, buf32, buf33, buf35, buf36, buf38, buf39, buf41, buf43, buf45, buf46, buf48, buf49, buf51, buf52, buf54, reinterpret_tensor(buf13, (4, 4), (4, 1), 0), reinterpret_tensor(buf9, (4, 4), (4, 1), 0), reinterpret_tensor(buf5, (4, 4), (4, 1), 0), )
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_6 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_8 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] if __name__ == "__main__":
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:32:14.058000 3671112 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 12:32:14.067000 3671112 site-packages/torch/_inductor/graph.py:2053] [0/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/zf/czfkjd5d2piaz35fetrqyhzrys6p7jjptsjjcgdohbn5g6vyfdpx.py
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] Output code: 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # AOT ID: ['7_forward']
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import torch
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import math
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import random
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import os
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import tempfile
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from math import inf, nan
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch import device, empty_strided
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid,
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     split_scan_grid,
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid_combo_kernels,
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     start_graph,
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     end_graph,
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     cooperative_reduction_grid,
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] aten = torch.ops.aten
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile = AsyncCompile()
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/qw/cqwbgmaxvtbkhtmgppbsgq5bp3cyfva2phv4x6qm3a6sp6j6jjzv.py
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [pow_1, mean, add, rsqrt, input_1], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add => add
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   input_1 => mul
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mean => mean
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   pow_1 => pow_1
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   rsqrt => rsqrt
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select, 2), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%pow_1, [1], True), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, 1e-08), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select, %rsqrt), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_add_mean_mul_pow_rsqrt_0 = async_compile.triton('triton_poi_fused_add_mean_mul_pow_rsqrt_0', '''
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mean_mul_pow_rsqrt_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_add_mean_mul_pow_rsqrt_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x2 = xindex
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x1 = xindex // 4
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp1 * tmp1
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tmp3 * tmp3
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp2 + tmp4
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tmp6 * tmp6
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp5 + tmp7
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tmp9 * tmp9
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tmp8 + tmp10
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = 4.0
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tmp11 / tmp12
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = 1e-08
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = libdevice.rsqrt(tmp15)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tmp0 * tmp16
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/fa/cfamou7gcgudbareniupeanvwfjlfhreswkqpz23rcqkotdz36mu.py
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [mul_1, out], Original ATen: [aten.mul, aten.t]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul_1 => mul_1
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   out => permute
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_2, 0.005), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %permute : [num_users=4] = call_function[target=torch.ops.aten.permute.default](args = (%mul_1, [1, 0]), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_mul_t_1 = async_compile.triton('triton_poi_fused_mul_t_1', '''
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_t_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_mul_t_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = xindex
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = 0.005
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 * tmp1
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/tt/cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [pow_2, mean_1, add_5, rsqrt_1, input_2], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add_5 => add_5
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   input_2 => mul_17
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mean_1 => mean_1
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   pow_2 => pow_2
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   rsqrt_1 => rsqrt_1
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_1, 2), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%pow_2, [1], True), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_1, 1e-08), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %rsqrt_1 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_5,), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_17 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_1, %rsqrt_1), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_add_mean_mul_pow_rsqrt_2 = async_compile.triton('triton_poi_fused_add_mean_mul_pow_rsqrt_2', '''
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mean_mul_pow_rsqrt_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_add_mean_mul_pow_rsqrt_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x2 = xindex
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x1 = xindex // 4
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (16 + x2), xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (16 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tl.load(in_ptr0 + (17 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tl.load(in_ptr0 + (18 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tl.load(in_ptr0 + (19 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp1 * tmp1
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tmp3 * tmp3
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp2 + tmp4
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tmp6 * tmp6
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp5 + tmp7
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tmp9 * tmp9
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tmp8 + tmp10
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = 4.0
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tmp11 / tmp12
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = 1e-08
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = libdevice.rsqrt(tmp15)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tmp0 * tmp16
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/vn/cvnu3k5zpdji46sw5b7s5ncl4iovi5iuyp5wrrclxodd6ulkviee.py
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [pow_3, mean_2, add_10, rsqrt_2, input_3], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add_10 => add_10
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   input_3 => mul_34
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mean_2 => mean_2
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   pow_3 => pow_3
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   rsqrt_2 => rsqrt_2
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_2, 2), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mean_2 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%pow_3, [1], True), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add_10 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_2, 1e-08), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %rsqrt_2 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_10,), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_34 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_2, %rsqrt_2), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_add_mean_mul_pow_rsqrt_3 = async_compile.triton('triton_poi_fused_add_mean_mul_pow_rsqrt_3', '''
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mean_mul_pow_rsqrt_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_add_mean_mul_pow_rsqrt_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x2 = xindex
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x1 = xindex // 4
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (32 + x2), xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (32 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tl.load(in_ptr0 + (33 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tl.load(in_ptr0 + (34 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tl.load(in_ptr0 + (35 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp1 * tmp1
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tmp3 * tmp3
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp2 + tmp4
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tmp6 * tmp6
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp5 + tmp7
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tmp9 * tmp9
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tmp8 + tmp10
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = 4.0
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tmp11 / tmp12
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = 1e-08
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = libdevice.rsqrt(tmp15)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tmp0 * tmp16
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/f4/cf44ra664o6wpoafohioumywnyqgxoz4fc72ld3hw5v6yvexguss.py
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [pow_4, mean_3, add_15, rsqrt_3, input_4], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add_15 => add_15
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   input_4 => mul_51
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mean_3 => mean_3
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   pow_4 => pow_4
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   rsqrt_3 => rsqrt_3
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%select_3, 2), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mean_3 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%pow_4, [1], True), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add_15 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_3, 1e-08), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %rsqrt_3 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_15,), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_51 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select_3, %rsqrt_3), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_add_mean_mul_pow_rsqrt_4 = async_compile.triton('triton_poi_fused_add_mean_mul_pow_rsqrt_4', '''
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mean_mul_pow_rsqrt_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_add_mean_mul_pow_rsqrt_4(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x2 = xindex
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x1 = xindex // 4
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (48 + x2), xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (48 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tl.load(in_ptr0 + (49 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tl.load(in_ptr0 + (50 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tl.load(in_ptr0 + (51 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp1 * tmp1
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tmp3 * tmp3
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp2 + tmp4
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tmp6 * tmp6
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp5 + tmp7
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tmp9 * tmp9
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tmp8 + tmp10
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = 4.0
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tmp11 / tmp12
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = 1e-08
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = libdevice.rsqrt(tmp15)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tmp0 * tmp16
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/rj/crj5oclm2olcigx3bn7tdlb5n5sjwkpfmjdgfvlchh7qawm33qfy.py
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [mul_2, add_1, leaky_relu, out_1, add_6, leaky_relu_4, out_9, add_11, leaky_relu_8, out_17, add_16, leaky_relu_12, out_25], Original ATen: [aten.mul, aten.add, aten.leaky_relu]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add_1 => add_1
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add_11 => add_11
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add_16 => add_16
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add_6 => add_6
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   leaky_relu => gt, mul_3, where
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   leaky_relu_12 => gt_12, mul_54, where_12
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   leaky_relu_4 => gt_4, mul_20, where_4
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   leaky_relu_8 => gt_8, mul_37, where_8
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul_2 => mul_2
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   out_1 => mul_4
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   out_17 => mul_38
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   out_25 => mul_55
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   out_9 => mul_21
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_2 : [num_users=4] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_3, 0.01), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm, %mul_2), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %gt : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_1, 0), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, 0.2), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %add_1, %mul_3), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_4 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where, 1.4142135623730951), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add_6 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_4, %mul_2), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %gt_4 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_6, 0), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_6, 0.2), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %where_4 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_4, %add_6, %mul_20), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_21 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where_4, 1.4142135623730951), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add_11 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_8, %mul_2), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %gt_8 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_11, 0), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_37 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_11, 0.2), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %where_8 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_8, %add_11, %mul_37), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_38 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where_8, 1.4142135623730951), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add_16 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_12, %mul_2), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %gt_12 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_16, 0), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_54 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_16, 0.2), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %where_12 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_12, %add_16, %mul_54), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_55 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where_12, 1.4142135623730951), kwargs = {})
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_add_leaky_relu_mul_5 = async_compile.triton('triton_poi_fused_add_leaky_relu_mul_5', '''
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_out_ptr2': '*fp32', 'in_out_ptr3': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'out_ptr1': '*i1', 'out_ptr2': '*i1', 'out_ptr3': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_leaky_relu_mul_5', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1', 'in_out_ptr2', 'in_out_ptr3'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_add_leaky_relu_mul_5(in_out_ptr0, in_out_ptr1, in_out_ptr2, in_out_ptr3, in_ptr0, out_ptr0, out_ptr1, out_ptr2, out_ptr3, xnumel, XBLOCK : tl.constexpr):
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x2 = xindex
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = (xindex % 4)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = tl.load(in_out_ptr1 + (x2), xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp18 = tl.load(in_out_ptr2 + (x2), xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp24 = tl.load(in_out_ptr3 + (x2), xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = 0.01
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tmp1 * tmp2
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tmp0 + tmp3
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = 0.0
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tmp4 > tmp5
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = 0.2
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp4 * tmp7
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tl.where(tmp6, tmp4, tmp8)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = 1.4142135623730951
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = tmp9 * tmp10
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tmp12 + tmp3
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = tmp13 > tmp5
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = tmp13 * tmp7
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = tl.where(tmp14, tmp13, tmp15)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tmp16 * tmp10
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp19 = tmp18 + tmp3
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp20 = tmp19 > tmp5
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp21 = tmp19 * tmp7
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp22 = tl.where(tmp20, tmp19, tmp21)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp23 = tmp22 * tmp10
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp25 = tmp24 + tmp3
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp26 = tmp25 > tmp5
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp27 = tmp25 * tmp7
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp28 = tl.where(tmp26, tmp25, tmp27)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp29 = tmp28 * tmp10
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp11, xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr1 + (x2), tmp14, xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(in_out_ptr1 + (x2), tmp17, xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr2 + (x2), tmp20, xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(in_out_ptr2 + (x2), tmp23, xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr3 + (x2), tmp26, xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(in_out_ptr3 + (x2), tmp29, xmask)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile.wait(globals())
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] del async_compile
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def call(args):
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     args.clear()
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_2, (4, 4), (4, 1))
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_6, (4, 4), (4, 1))
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_8, (4, 4), (4, 1))
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, mean, add, rsqrt, input_1], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_mean_mul_pow_rsqrt_0.run(primals_1, buf0, 16, grid=grid(16), stream=stream0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf1 = empty_strided_cuda((4, 4), (1, 4), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mul_1, out], Original ATen: [aten.mul, aten.t]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_mul_t_1.run(primals_2, buf1, 16, grid=grid(16), stream=stream0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_2
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf2 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.mm]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf0, buf1, out=buf2)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf17 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [pow_2, mean_1, add_5, rsqrt_1, input_2], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_mean_mul_pow_rsqrt_2.run(primals_1, buf17, 16, grid=grid(16), stream=stream0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf18 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_8], Original ATen: [aten.mm]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf17, buf1, out=buf18)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf30 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [pow_3, mean_2, add_10, rsqrt_2, input_3], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_mean_mul_pow_rsqrt_3.run(primals_1, buf30, 16, grid=grid(16), stream=stream0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf31 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_16], Original ATen: [aten.mm]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf30, buf1, out=buf31)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf43 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [pow_4, mean_3, add_15, rsqrt_3, input_4], Original ATen: [aten.pow, aten.mean, aten.add, aten.rsqrt, aten.mul]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_mean_mul_pow_rsqrt_4.run(primals_1, buf43, 16, grid=grid(16), stream=stream0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_1
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf44 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_24], Original ATen: [aten.mm]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf43, buf1, out=buf44)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf3 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf4 = buf2; del buf2  # reuse
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf19 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf20 = buf18; del buf18  # reuse
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf32 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf33 = buf31; del buf31  # reuse
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf45 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf46 = buf44; del buf44  # reuse
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mul_2, add_1, leaky_relu, out_1, add_6, leaky_relu_4, out_9, add_11, leaky_relu_8, out_17, add_16, leaky_relu_12, out_25], Original ATen: [aten.mul, aten.add, aten.leaky_relu]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_leaky_relu_mul_5.run(buf4, buf20, buf33, buf46, primals_3, buf3, buf19, buf32, buf45, 16, grid=grid(16), stream=stream0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_3
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf5 = buf1; del buf1  # reuse
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mul_4, out_2], Original ATen: [aten.mul, aten.t]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_mul_t_1.run(primals_4, buf5, 16, grid=grid(16), stream=stream0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_4
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf6 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.mm]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf4, buf5, out=buf6)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf21 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_10], Original ATen: [aten.mm]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf20, buf5, out=buf21)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf34 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_18], Original ATen: [aten.mm]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf33, buf5, out=buf34)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf47 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_26], Original ATen: [aten.mm]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf46, buf5, out=buf47)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf7 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf8 = buf6; del buf6  # reuse
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf22 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf23 = buf21; del buf21  # reuse
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf35 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf36 = buf34; del buf34  # reuse
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf48 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf49 = buf47; del buf47  # reuse
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mul_5, add_2, leaky_relu_1, out_3, add_7, leaky_relu_5, out_11, add_12, leaky_relu_9, out_19, add_17, leaky_relu_13, out_27], Original ATen: [aten.mul, aten.add, aten.leaky_relu]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_leaky_relu_mul_5.run(buf8, buf23, buf36, buf49, primals_5, buf7, buf22, buf35, buf48, 16, grid=grid(16), stream=stream0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_5
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf9 = empty_strided_cuda((4, 4), (1, 4), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mul_7, out_4], Original ATen: [aten.mul, aten.t]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_mul_t_1.run(primals_6, buf9, 16, grid=grid(16), stream=stream0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_6
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf10 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_4], Original ATen: [aten.mm]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf8, buf9, out=buf10)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf24 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_12], Original ATen: [aten.mm]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf23, buf9, out=buf24)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf37 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_20], Original ATen: [aten.mm]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf36, buf9, out=buf37)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf50 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_28], Original ATen: [aten.mm]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf49, buf9, out=buf50)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf11 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf12 = buf10; del buf10  # reuse
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf25 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf26 = buf24; del buf24  # reuse
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf38 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf39 = buf37; del buf37  # reuse
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf51 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf52 = buf50; del buf50  # reuse
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mul_8, add_3, leaky_relu_2, out_5, add_8, leaky_relu_6, out_13, add_13, leaky_relu_10, out_21, add_18, leaky_relu_14, out_29], Original ATen: [aten.mul, aten.add, aten.leaky_relu]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_leaky_relu_mul_5.run(buf12, buf26, buf39, buf52, primals_7, buf11, buf25, buf38, buf51, 16, grid=grid(16), stream=stream0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_7
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf13 = empty_strided_cuda((4, 4), (1, 4), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mul_10, out_6], Original ATen: [aten.mul, aten.t]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_mul_t_1.run(primals_8, buf13, 16, grid=grid(16), stream=stream0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_8
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf14 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_6], Original ATen: [aten.mm]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf12, buf13, out=buf14)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf27 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_14], Original ATen: [aten.mm]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf26, buf13, out=buf27)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf40 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_22], Original ATen: [aten.mm]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf39, buf13, out=buf40)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf53 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [out_30], Original ATen: [aten.mm]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(buf52, buf13, out=buf53)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf15 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf16 = buf14; del buf14  # reuse
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf28 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf29 = buf27; del buf27  # reuse
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf41 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf42 = buf40; del buf40  # reuse
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf54 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf55 = buf53; del buf53  # reuse
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mul_11, add_4, leaky_relu_3, out_7, add_9, leaky_relu_7, out_15, add_14, leaky_relu_11, out_23, add_19, leaky_relu_15, out_31], Original ATen: [aten.mul, aten.add, aten.leaky_relu]
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_leaky_relu_mul_5.run(buf16, buf29, buf42, buf55, primals_9, buf15, buf28, buf41, buf54, 16, grid=grid(16), stream=stream0)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del primals_9
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return (reinterpret_tensor(buf16, (4, 1, 4), (4, 4, 1), 0), buf16, buf29, buf42, buf55, buf0, buf3, buf4, buf7, buf8, buf11, buf12, buf15, buf17, buf19, buf20, buf22, buf23, buf25, buf26, buf28, buf30, buf32, buf33, buf35, buf36, buf38, buf39, buf41, buf43, buf45, buf46, buf48, buf49, buf51, buf52, buf54, reinterpret_tensor(buf13, (4, 4), (4, 1), 0), reinterpret_tensor(buf9, (4, 4), (4, 1), 0), reinterpret_tensor(buf5, (4, 4), (4, 1), 0), )
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_2 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_6 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_8 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] if __name__ == "__main__":
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:22:19.062000 2268739 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 17:22:19.077000 2268739 site-packages/torch/_inductor/graph.py:2053] [0/0_1] [__output_code] Output code written to: inductor_cache/pt/cptx7do7mzl26dops7pgdnfenp6fklsciz2qkjd65ij3d4q6q2g4.py
