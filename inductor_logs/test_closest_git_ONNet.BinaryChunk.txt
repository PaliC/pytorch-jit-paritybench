V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/i6/ci6xym65lxznfan7uxmhugcfxsmiqyf3mrib7qesexukvdfm5r5k.py
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_1, x], Original ATen: [aten.max, aten.stack]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => cat
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%view, 1), kwargs = {})
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3], 1), kwargs = {})
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_max_stack_0 = async_compile.triton('triton_per_fused_max_stack_0', '''
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_max_stack_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_max_stack_0(in_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*(((r1 // 2) % 2)) + 16*(r1 // 4) + 64*x0 + ((r1 % 2))), xmask, other=0.0)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, float("-inf"))
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (4*x0), tmp4, xmask)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zy/czyx2id3fxzfsiltwz7packaaepivemjfnay64jpm32vao7nni62.py
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_2, x], Original ATen: [aten.max, aten.stack]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_2 => max_2
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => cat
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_2 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%view_1, 1), kwargs = {})
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3], 1), kwargs = {})
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_max_stack_1 = async_compile.triton('triton_per_fused_max_stack_1', '''
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_max_stack_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_max_stack_1(in_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (8 + 4*(((r1 // 2) % 2)) + 16*(r1 // 4) + 64*x0 + ((r1 % 2))), xmask, other=0.0)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, float("-inf"))
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (4*x0), tmp4, xmask)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/mn/cmn4wcs3dt25lmscmae5kc4ksiicp4cafsq4aobmtpuqytb3kfu2.py
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_3, x], Original ATen: [aten.max, aten.stack]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_3 => max_3
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => cat
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_3 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%view_2, 1), kwargs = {})
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3], 1), kwargs = {})
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_max_stack_2 = async_compile.triton('triton_per_fused_max_stack_2', '''
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_max_stack_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_max_stack_2(in_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2 + 4*(((r1 // 2) % 2)) + 16*(r1 // 4) + 64*x0 + ((r1 % 2))), xmask, other=0.0)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, float("-inf"))
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (4*x0), tmp4, xmask)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2n/c2n77d2bxducvtmme7qfxxgd5vm7mwv3t3v25mmrb6eslzr3wdlv.py
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_4, x], Original ATen: [aten.max, aten.stack]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_4 => max_4
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => cat
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_4 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%view_3, 1), kwargs = {})
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3], 1), kwargs = {})
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_max_stack_3 = async_compile.triton('triton_per_fused_max_stack_3', '''
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_max_stack_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_max_stack_3(in_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (10 + 4*(((r1 // 2) % 2)) + 16*(r1 // 4) + 64*x0 + ((r1 % 2))), xmask, other=0.0)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, float("-inf"))
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (4*x0), tmp4, xmask)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf12, (4, 1), (4, 1), 0)  # alias
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_1, x], Original ATen: [aten.max, aten.stack]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_max_stack_0.run(arg0_1, buf8, 4, 16, grid=grid(4), stream=stream0)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf12, (4, 1), (4, 1), 1)  # alias
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_2, x], Original ATen: [aten.max, aten.stack]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_max_stack_1.run(arg0_1, buf9, 4, 16, grid=grid(4), stream=stream0)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf12, (4, 1), (4, 1), 2)  # alias
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_3, x], Original ATen: [aten.max, aten.stack]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_max_stack_2.run(arg0_1, buf10, 4, 16, grid=grid(4), stream=stream0)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf12, (4, 1), (4, 1), 3)  # alias
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_4, x], Original ATen: [aten.max, aten.stack]
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_max_stack_3.run(arg0_1, buf11, 4, 16, grid=grid(4), stream=stream0)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf12, )
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:42:31.954000 1954949 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:42:31.962000 1954949 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/dh/cdheguchzoxnwsp3c45ageoz6tqi7arapmuipqnsvooj4vwdhmwr.py
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/i6/ci6xym65lxznfan7uxmhugcfxsmiqyf3mrib7qesexukvdfm5r5k.py
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_1, x], Original ATen: [aten.max, aten.stack]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => cat
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%view, 1), kwargs = {})
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3], 1), kwargs = {})
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_max_stack_0 = async_compile.triton('triton_per_fused_max_stack_0', '''
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_max_stack_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_max_stack_0(in_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*(((r1 // 2) % 2)) + 16*(r1 // 4) + 64*x0 + ((r1 % 2))), xmask, other=0.0)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, float("-inf"))
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (4*x0), tmp4, xmask)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/zy/czyx2id3fxzfsiltwz7packaaepivemjfnay64jpm32vao7nni62.py
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_2, x], Original ATen: [aten.max, aten.stack]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_2 => max_2
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => cat
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_2 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%view_1, 1), kwargs = {})
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3], 1), kwargs = {})
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_max_stack_1 = async_compile.triton('triton_per_fused_max_stack_1', '''
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_max_stack_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_max_stack_1(in_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (8 + 4*(((r1 // 2) % 2)) + 16*(r1 // 4) + 64*x0 + ((r1 % 2))), xmask, other=0.0)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, float("-inf"))
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (4*x0), tmp4, xmask)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/mn/cmn4wcs3dt25lmscmae5kc4ksiicp4cafsq4aobmtpuqytb3kfu2.py
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_3, x], Original ATen: [aten.max, aten.stack]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_3 => max_3
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => cat
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_3 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%view_2, 1), kwargs = {})
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3], 1), kwargs = {})
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_max_stack_2 = async_compile.triton('triton_per_fused_max_stack_2', '''
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_max_stack_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_max_stack_2(in_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2 + 4*(((r1 // 2) % 2)) + 16*(r1 // 4) + 64*x0 + ((r1 % 2))), xmask, other=0.0)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, float("-inf"))
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (4*x0), tmp4, xmask)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2n/c2n77d2bxducvtmme7qfxxgd5vm7mwv3t3v25mmrb6eslzr3wdlv.py
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_4, x], Original ATen: [aten.max, aten.stack]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_4 => max_4
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => cat
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_4 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%view_3, 1), kwargs = {})
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3], 1), kwargs = {})
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_max_stack_3 = async_compile.triton('triton_per_fused_max_stack_3', '''
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_max_stack_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_max_stack_3(in_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (10 + 4*(((r1 // 2) % 2)) + 16*(r1 // 4) + 64*x0 + ((r1 % 2))), xmask, other=0.0)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, float("-inf"))
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (4*x0), tmp4, xmask)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf12, (4, 1), (4, 1), 0)  # alias
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_1, x], Original ATen: [aten.max, aten.stack]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_max_stack_0.run(arg0_1, buf8, 4, 16, grid=grid(4), stream=stream0)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf12, (4, 1), (4, 1), 1)  # alias
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_2, x], Original ATen: [aten.max, aten.stack]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_max_stack_1.run(arg0_1, buf9, 4, 16, grid=grid(4), stream=stream0)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf12, (4, 1), (4, 1), 2)  # alias
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_3, x], Original ATen: [aten.max, aten.stack]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_max_stack_2.run(arg0_1, buf10, 4, 16, grid=grid(4), stream=stream0)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf12, (4, 1), (4, 1), 3)  # alias
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_4, x], Original ATen: [aten.max, aten.stack]
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_max_stack_3.run(arg0_1, buf11, 4, 16, grid=grid(4), stream=stream0)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf12, )
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:32:18.692000 3455486 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:32:18.697000 3455486 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/ki/cki2zlokahmeu2d5x76dihc226is52kbjq5pwelct4qszupj7q6q.py
