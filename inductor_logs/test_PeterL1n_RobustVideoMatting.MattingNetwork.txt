V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] Output code: 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # AOT ID: ['6_inference']
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import torch
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import math
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import random
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import os
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import tempfile
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from math import inf, nan
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch import device, empty_strided
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton.language as tl
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     grid,
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     split_scan_grid,
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     grid_combo_kernels,
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     start_graph,
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     end_graph,
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     cooperative_reduction_grid,
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] )
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] aten = torch.ops.aten
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] async_compile = AsyncCompile()
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yd/cydy3xaz6ejouygzrtjonilqb4ycmj4e6nwte42mofzvpb26m5ez.py
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Topologically Sorted Source Nodes: [std], Original ATen: [aten.lift_fresh]
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Source node to ATen node mapping:
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   std => lift_fresh_copy_1
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Graph fragment:
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   %lift_fresh_copy_1 : [num_users=2] = call_function[target=torch.ops.aten.lift_fresh_copy.default](args = (%_tensor_constant1,), kwargs = {})
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_poi_fused_lift_fresh_0 = async_compile.triton('triton_poi_fused_lift_fresh_0', '''
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton.language as tl
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     size_hints={'x': 4}, 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     filename=__file__,
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_lift_fresh_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     min_elem_per_thread=0
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] )
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton.jit
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] def triton_poi_fused_lift_fresh_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xnumel = 3
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xmask = xindex < xnumel
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     x0 = xindex
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp0 = x0
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp2 = tmp0 < tmp1
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp3 = tl.full([1], 2, tl.int64)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp5 = 0.2240000069141388
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp6 = 0.22499999403953552
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp7 = tl.where(tmp4, tmp5, tmp6)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp8 = 0.2290000021457672
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp9 = tl.where(tmp2, tmp8, tmp7)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp9, xmask)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] ''', device_str='cuda')
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7w/c7wd6xhaair2jqjf3hvalsccmy2p42yh6iv4lwqy4cipesafc7j7.py
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Topologically Sorted Source Nodes: [tensor], Original ATen: [aten.clone]
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Source node to ATen node mapping:
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   tensor => clone
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Graph fragment:
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%arg0_1,), kwargs = {})
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_poi_fused_clone_1 = async_compile.triton('triton_poi_fused_clone_1', '''
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton.language as tl
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     filename=__file__,
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     min_elem_per_thread=0
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] )
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton.jit
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] def triton_poi_fused_clone_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xnumel = 192
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xmask = xindex < xnumel
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     x0 = xindex
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] ''', device_str='cuda')
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vx/cvx4i4cqza222vvrg2c3z7gh2sbwdoktg6prx3g2445uxa7colzi.py
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Topologically Sorted Source Nodes: [mean], Original ATen: [aten.lift_fresh]
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Source node to ATen node mapping:
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   mean => lift_fresh_copy
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Graph fragment:
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   %lift_fresh_copy : [num_users=1] = call_function[target=torch.ops.aten.lift_fresh_copy.default](args = (%_tensor_constant0,), kwargs = {})
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_poi_fused_lift_fresh_2 = async_compile.triton('triton_poi_fused_lift_fresh_2', '''
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton.language as tl
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     size_hints={'x': 4}, 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     filename=__file__,
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_lift_fresh_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     min_elem_per_thread=0
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] )
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton.jit
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] def triton_poi_fused_lift_fresh_2(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xnumel = 3
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xmask = xindex < xnumel
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     x0 = xindex
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp0 = x0
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp2 = tmp0 < tmp1
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp3 = tl.full([1], 2, tl.int64)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp5 = 0.4560000002384186
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp6 = 0.4059999883174896
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp7 = tl.where(tmp4, tmp5, tmp6)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp8 = 0.48500001430511475
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp9 = tl.where(tmp2, tmp8, tmp7)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp9, xmask)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] ''', device_str='cuda')
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/uf/cufgajyn46gyncx4zalvir34jy52nhjqttordto55nhlfn2bcjlp.py
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Topologically Sorted Source Nodes: [eq, any_1], Original ATen: [aten.eq, aten.any]
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Source node to ATen node mapping:
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   any_1 => any_1
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   eq => eq
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Graph fragment:
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%lift_fresh_copy_1, 0), kwargs = {})
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   %any_1 : [num_users=1] = call_function[target=torch.ops.aten.any.default](args = (%eq,), kwargs = {})
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_poi_fused_any_eq_3 = async_compile.triton('triton_poi_fused_any_eq_3', '''
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton.language as tl
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     size_hints={'x': 1}, 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     filename=__file__,
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': (1,)}, 'cls': 'AttrsDescriptor'})]},
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_any_eq_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     min_elem_per_thread=0
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] )
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton.jit
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] def triton_poi_fused_any_eq_3(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xnumel = 1
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp0 = tl.full([1], 0, tl.int64)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp2 = tmp0 < tmp1
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp3 = tl.full([1], 2, tl.int64)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp5 = 0.2240000069141388
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp6 = 0.22499999403953552
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp7 = tl.where(tmp4, tmp5, tmp6)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp8 = 0.2290000021457672
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp9 = tl.where(tmp2, tmp8, tmp7)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp10 = 0.0
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp11 = tmp9 == tmp10
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp12 = tmp1 < tmp1
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp13 = tmp1 < tmp3
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp14 = tl.where(tmp13, tmp5, tmp6)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp15 = tl.where(tmp12, tmp8, tmp14)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp16 = tmp15 == tmp10
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp17 = tmp11 | tmp16
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp18 = tmp3 < tmp1
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp19 = tmp3 < tmp3
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp20 = tl.where(tmp19, tmp5, tmp6)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp21 = tl.where(tmp18, tmp8, tmp20)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp22 = tmp21 == tmp10
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp23 = tmp17 | tmp22
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp23, None)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] ''', device_str='cuda')
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] async_compile.wait(globals())
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] del async_compile
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] def call(args):
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     arg0_1, = args
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     args.clear()
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     assert_size_stride(arg0_1, (4, 3, 4, 4), (48, 16, 4, 1))
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         buf0 = empty_strided_cuda((3, ), (1, ), torch.float32)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         # Topologically Sorted Source Nodes: [std], Original ATen: [aten.lift_fresh]
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         triton_poi_fused_lift_fresh_0.run(buf0, 3, grid=grid(3), stream=stream0)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         buf1 = empty_strided_cuda((4, 3, 4, 4), (48, 16, 4, 1), torch.float32)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         # Topologically Sorted Source Nodes: [tensor], Original ATen: [aten.clone]
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         triton_poi_fused_clone_1.run(arg0_1, buf1, 192, grid=grid(192), stream=stream0)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         del arg0_1
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         buf2 = empty_strided_cuda((3, ), (1, ), torch.float32)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         # Topologically Sorted Source Nodes: [mean], Original ATen: [aten.lift_fresh]
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         triton_poi_fused_lift_fresh_2.run(buf2, 3, grid=grid(3), stream=stream0)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         buf3 = empty_strided_cuda((), (), torch.bool)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         # Topologically Sorted Source Nodes: [eq, any_1], Original ATen: [aten.eq, aten.any]
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         triton_poi_fused_any_eq_3.run(buf3, 1, grid=grid(1), stream=stream0)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     return (buf3, buf1, buf2, buf0, )
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     arg0_1 = rand_strided((4, 3, 4, 4), (48, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     fn = lambda: call([arg0_1])
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] if __name__ == "__main__":
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:45:22.942000 2080206 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0204 13:45:22.947000 2080206 site-packages/torch/_inductor/graph.py:2053] [4/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/gn/cgnw6pdpf75au4bkvhi2rbco22s52tm5nyo6rgl2p7oo3upyjoun.py
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] Output code: 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # AOT ID: ['6_inference']
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import torch
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import math
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import random
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import os
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import tempfile
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from math import inf, nan
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch import device, empty_strided
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton.language as tl
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     grid,
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     split_scan_grid,
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     grid_combo_kernels,
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     start_graph,
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     end_graph,
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     cooperative_reduction_grid,
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] )
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] aten = torch.ops.aten
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] async_compile = AsyncCompile()
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # kernel path: inductor_cache/yd/cydy3xaz6ejouygzrtjonilqb4ycmj4e6nwte42mofzvpb26m5ez.py
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Topologically Sorted Source Nodes: [std], Original ATen: [aten.lift_fresh]
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Source node to ATen node mapping:
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   std => lift_fresh_copy_1
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Graph fragment:
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   %lift_fresh_copy_1 : [num_users=2] = call_function[target=torch.ops.aten.lift_fresh_copy.default](args = (%_tensor_constant1,), kwargs = {})
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_poi_fused_lift_fresh_0 = async_compile.triton('triton_poi_fused_lift_fresh_0', '''
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton.language as tl
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     size_hints={'x': 4}, 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     filename=__file__,
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_lift_fresh_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     min_elem_per_thread=0
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] )
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton.jit
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] def triton_poi_fused_lift_fresh_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xnumel = 3
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xmask = xindex < xnumel
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     x0 = xindex
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp0 = x0
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp2 = tmp0 < tmp1
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp3 = tl.full([1], 2, tl.int64)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp5 = 0.2240000069141388
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp6 = 0.22499999403953552
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp7 = tl.where(tmp4, tmp5, tmp6)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp8 = 0.2290000021457672
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp9 = tl.where(tmp2, tmp8, tmp7)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp9, xmask)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] ''', device_str='cuda')
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # kernel path: inductor_cache/7w/c7wd6xhaair2jqjf3hvalsccmy2p42yh6iv4lwqy4cipesafc7j7.py
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Topologically Sorted Source Nodes: [tensor], Original ATen: [aten.clone]
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Source node to ATen node mapping:
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   tensor => clone
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Graph fragment:
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%arg0_1,), kwargs = {})
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_poi_fused_clone_1 = async_compile.triton('triton_poi_fused_clone_1', '''
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton.language as tl
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     filename=__file__,
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     min_elem_per_thread=0
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] )
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton.jit
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] def triton_poi_fused_clone_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xnumel = 192
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xmask = xindex < xnumel
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     x0 = xindex
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] ''', device_str='cuda')
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # kernel path: inductor_cache/vx/cvx4i4cqza222vvrg2c3z7gh2sbwdoktg6prx3g2445uxa7colzi.py
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Topologically Sorted Source Nodes: [mean], Original ATen: [aten.lift_fresh]
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Source node to ATen node mapping:
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   mean => lift_fresh_copy
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Graph fragment:
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   %lift_fresh_copy : [num_users=1] = call_function[target=torch.ops.aten.lift_fresh_copy.default](args = (%_tensor_constant0,), kwargs = {})
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_poi_fused_lift_fresh_2 = async_compile.triton('triton_poi_fused_lift_fresh_2', '''
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton.language as tl
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     size_hints={'x': 4}, 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     filename=__file__,
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_lift_fresh_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     min_elem_per_thread=0
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] )
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton.jit
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] def triton_poi_fused_lift_fresh_2(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xnumel = 3
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xmask = xindex < xnumel
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     x0 = xindex
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp0 = x0
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp2 = tmp0 < tmp1
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp3 = tl.full([1], 2, tl.int64)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp5 = 0.4560000002384186
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp6 = 0.4059999883174896
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp7 = tl.where(tmp4, tmp5, tmp6)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp8 = 0.48500001430511475
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp9 = tl.where(tmp2, tmp8, tmp7)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp9, xmask)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] ''', device_str='cuda')
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # kernel path: inductor_cache/uf/cufgajyn46gyncx4zalvir34jy52nhjqttordto55nhlfn2bcjlp.py
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Topologically Sorted Source Nodes: [eq, any_1], Original ATen: [aten.eq, aten.any]
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Source node to ATen node mapping:
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   any_1 => any_1
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   eq => eq
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] # Graph fragment:
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%lift_fresh_copy_1, 0), kwargs = {})
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] #   %any_1 : [num_users=1] = call_function[target=torch.ops.aten.any.default](args = (%eq,), kwargs = {})
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_poi_fused_any_eq_3 = async_compile.triton('triton_poi_fused_any_eq_3', '''
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] import triton.language as tl
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     size_hints={'x': 1}, 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     filename=__file__,
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': (1,)}, 'cls': 'AttrsDescriptor'})]},
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_any_eq_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     min_elem_per_thread=0
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] )
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] @triton.jit
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] def triton_poi_fused_any_eq_3(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xnumel = 1
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp0 = tl.full([1], 0, tl.int64)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp2 = tmp0 < tmp1
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp3 = tl.full([1], 2, tl.int64)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp5 = 0.2240000069141388
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp6 = 0.22499999403953552
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp7 = tl.where(tmp4, tmp5, tmp6)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp8 = 0.2290000021457672
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp9 = tl.where(tmp2, tmp8, tmp7)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp10 = 0.0
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp11 = tmp9 == tmp10
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp12 = tmp1 < tmp1
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp13 = tmp1 < tmp3
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp14 = tl.where(tmp13, tmp5, tmp6)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp15 = tl.where(tmp12, tmp8, tmp14)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp16 = tmp15 == tmp10
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp17 = tmp11 | tmp16
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp18 = tmp3 < tmp1
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp19 = tmp3 < tmp3
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp20 = tl.where(tmp19, tmp5, tmp6)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp21 = tl.where(tmp18, tmp8, tmp20)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp22 = tmp21 == tmp10
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tmp23 = tmp17 | tmp22
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp23, None)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] ''', device_str='cuda')
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] async_compile.wait(globals())
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] del async_compile
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] def call(args):
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     arg0_1, = args
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     args.clear()
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     assert_size_stride(arg0_1, (4, 3, 4, 4), (48, 16, 4, 1))
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         buf0 = empty_strided_cuda((3, ), (1, ), torch.float32)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         # Topologically Sorted Source Nodes: [std], Original ATen: [aten.lift_fresh]
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         triton_poi_fused_lift_fresh_0.run(buf0, 3, grid=grid(3), stream=stream0)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         buf1 = empty_strided_cuda((4, 3, 4, 4), (48, 16, 4, 1), torch.float32)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         # Topologically Sorted Source Nodes: [tensor], Original ATen: [aten.clone]
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         triton_poi_fused_clone_1.run(arg0_1, buf1, 192, grid=grid(192), stream=stream0)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         del arg0_1
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         buf2 = empty_strided_cuda((3, ), (1, ), torch.float32)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         # Topologically Sorted Source Nodes: [mean], Original ATen: [aten.lift_fresh]
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         triton_poi_fused_lift_fresh_2.run(buf2, 3, grid=grid(3), stream=stream0)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         buf3 = empty_strided_cuda((), (), torch.bool)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         # Topologically Sorted Source Nodes: [eq, any_1], Original ATen: [aten.eq, aten.any]
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]         triton_poi_fused_any_eq_3.run(buf3, 1, grid=grid(1), stream=stream0)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     return (buf3, buf1, buf2, buf0, )
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     arg0_1 = rand_strided((4, 3, 4, 4), (48, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] if __name__ == "__main__":
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:35:23.176000 136672 site-packages/torch/_inductor/graph.py:2045] [4/0] [__output_code] 
V0205 18:35:23.180000 136672 site-packages/torch/_inductor/graph.py:2053] [4/0] [__output_code] Output code written to: inductor_cache/og/cogqjwenzx6bfrg6yhvitgarkzev5mugaqngj3ovpit3vht3mb5f.py
