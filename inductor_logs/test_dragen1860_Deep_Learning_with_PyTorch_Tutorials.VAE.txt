V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['8_forward']
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ol/colfwrmjonn6c5gu5s2tz7qvx6jjafs6p7unv66ymrvyr7xfvgkg.py
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.addmm, aten.relu]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add_tensor_5
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => relu
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_5, %primals_3), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_tensor_5,), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_addmm_relu_0 = async_compile.triton('triton_poi_fused_addmm_relu_0', '''
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_relu_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_addmm_relu_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/z6/cz6cots37orhfjpczhwsiue2hnh5udsl4a36qt4o7v2ieppjyesc.py
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.addmm, aten.relu]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => add_tensor_4
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => relu_1
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_4, %primals_5), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_tensor_4,), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_addmm_relu_1 = async_compile.triton('triton_poi_fused_addmm_relu_1', '''
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_relu_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_addmm_relu_1(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7t/c7tbn4t5qipdhtcu5w3pwsoz5h4dqyrphxbcvj47esaokpogcmg6.py
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.addmm, aten.relu, aten.threshold_backward]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_tensor_3
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => relu_2
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_3, %primals_7), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_2 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_tensor_3,), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_2 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_2, 0), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_addmm_relu_threshold_backward_2 = async_compile.triton('triton_poi_fused_addmm_relu_threshold_backward_2', '''
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_relu_threshold_backward_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_addmm_relu_threshold_backward_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 80
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 20)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dy/cdyvzuhwhdz4xvu3gpardbsq5ifooxbwnk6ftmxzukm77qrbmvpt.py
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, h, pow_1, pow_2, add_1, add_2, log, sub, sub_1, sum_1, mul_1, kld], Original ATen: [aten.mul, aten.add, aten.pow, aten.log, aten.sub, aten.sum, aten.div]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h => add
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   kld => div
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log => log
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%getitem_1, %randn), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, %mul), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%getitem, 2), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%getitem_1, 2), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_1, %pow_2), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_2, 1e-08), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_2,), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %log), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub, 1), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%sub_1,), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_1, 0.5), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_1, 3136), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%getitem_1, 1.0), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%pow_4, 2.0), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_6 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%getitem, 1.0), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%pow_6, 2.0), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_log_mul_pow_sub_sum_3 = async_compile.triton('triton_per_fused_add_div_log_mul_pow_sub_sum_3', '''
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': (8,)}, 'cls': 'AttrsDescriptor'})]},
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_log_mul_pow_sub_sum_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_log_mul_pow_sub_sum_3(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, out_ptr2, out_ptr3, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 40
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 10)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex // 10
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0 + 20*r1), rmask, other=0.0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), rmask, eviction_policy='evict_last', other=0.0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (10 + r0 + 20*r1), rmask, other=0.0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (10 + r0), rmask, eviction_policy='evict_last', other=0.0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (r2), rmask, other=0.0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 0, tl.int32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp3, tmp7)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp4 + tmp10
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp8 * tmp8
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-08
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 + tmp13
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 2.0
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp8 * tmp15
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp4 * tmp15
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp4 * tmp4
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 + tmp12
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl_math.log(tmp14)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 - tmp20
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = 1.0
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 - tmp22
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.broadcast_to(tmp23, [XBLOCK, RBLOCK])
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(rmask, tmp24, 0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.sum(tmp26, 1)[:, None]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 0.5
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 * tmp28
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = 0.00031887755102040814
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 * tmp30
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.broadcast_to(r2, [XBLOCK, RBLOCK])), tmp11, rmask)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r2, [XBLOCK, RBLOCK])), tmp14, rmask)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (tl.broadcast_to(r2, [XBLOCK, RBLOCK])), tmp16, rmask)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (tl.broadcast_to(r2, [XBLOCK, RBLOCK])), tmp17, rmask)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp31, None)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dp/cdptodyzyjm5nlrxryzm5ri6crbd5f4zsmt6mu5nfqrxfvrxdpcj.py
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten.addmm, aten.sigmoid, aten.sigmoid_backward]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => add_tensor
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => sigmoid
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default, %primals_13), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=3] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_tensor,), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %sigmoid), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid, %sub_2), kwargs = {})
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_addmm_sigmoid_sigmoid_backward_4 = async_compile.triton('triton_poi_fused_addmm_sigmoid_sigmoid_backward_4', '''
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_sigmoid_sigmoid_backward_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_addmm_sigmoid_sigmoid_backward_4(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 3136
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 784)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sigmoid(tmp2)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1.0
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 - tmp3
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 * tmp5
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp3, xmask)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13 = args
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 784), (784, 1))
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (256, 784), (784, 1))
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (256, ), (1, ))
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (64, 256), (256, 1))
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (64, ), (1, ))
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (20, 64), (64, 1))
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (20, ), (1, ))
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (64, 10), (10, 1))
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (64, ), (1, ))
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (256, 64), (64, 1))
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (256, ), (1, ))
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (784, 256), (256, 1))
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (784, ), (1, ))
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [randn_like], Original ATen: [aten.randn_like]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = torch.ops.aten.randn.default([4, 10], dtype=torch.float32, device=device(type='cuda', index=0), pin_memory=False)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf5
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 256), (256, 1), torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.addmm]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(primals_1, reinterpret_tensor(primals_2, (784, 256), (1, 784), 0), out=buf0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.addmm, aten.relu]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_relu_0.run(buf1, primals_3, 1024, grid=grid(1024), stream=stream0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 64), (64, 1), torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.addmm]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf1, reinterpret_tensor(primals_4, (256, 64), (1, 256), 0), out=buf2)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.addmm, aten.relu]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_relu_1.run(buf3, primals_5, 256, grid=grid(256), stream=stream0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 20), (20, 1), torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.addmm]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf3, reinterpret_tensor(primals_6, (64, 20), (1, 64), 0), out=buf4)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 20), (20, 1), torch.bool)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.addmm, aten.relu, aten.threshold_backward]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_relu_threshold_backward_2.run(buf4, primals_7, buf19, 80, grid=grid(80), stream=stream0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 10), (10, 1), torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 10), (10, 1), torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 10), (10, 1), torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 10), (10, 1), torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((), (), torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = buf15; del buf15  # reuse
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, h, pow_1, pow_2, add_1, add_2, log, sub, sub_1, sum_1, mul_1, kld], Original ATen: [aten.mul, aten.add, aten.pow, aten.log, aten.sub, aten.sum, aten.div]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_log_mul_pow_sub_sum_3.run(buf20, buf4, primals_7, buf6, buf7, buf14, buf16, buf17, 1, 40, grid=grid(1), stream=stream0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 64), (64, 1), torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.addmm]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf7, reinterpret_tensor(primals_8, (10, 64), (1, 10), 0), out=buf8)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf8; del buf8  # reuse
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7, input_8], Original ATen: [aten.addmm, aten.relu]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_relu_1.run(buf9, primals_9, 256, grid=grid(256), stream=stream0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 256), (256, 1), torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9], Original ATen: [aten.addmm]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf9, reinterpret_tensor(primals_10, (64, 256), (1, 64), 0), out=buf10)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = buf10; del buf10  # reuse
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9, input_10], Original ATen: [aten.addmm, aten.relu]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_relu_0.run(buf11, primals_11, 1024, grid=grid(1024), stream=stream0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 784), (784, 1), torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11], Original ATen: [aten.addmm]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf11, reinterpret_tensor(primals_12, (256, 784), (1, 256), 0), out=buf12)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = buf12; del buf12  # reuse
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 784), (784, 1), torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten.addmm, aten.sigmoid, aten.sigmoid_backward]
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_sigmoid_sigmoid_backward_4.run(buf13, primals_13, buf18, 3136, grid=grid(3136), stream=stream0)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf13, (4, 1, 28, 28), (784, 784, 28, 1), 0), buf20, primals_1, buf1, buf3, buf6, buf7, buf9, buf11, buf14, buf16, buf17, buf18, primals_12, primals_10, primals_8, buf19, primals_6, primals_4, )
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 784), (784, 1), device='cuda:0', dtype=torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((256, 784), (784, 1), device='cuda:0', dtype=torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((64, 256), (256, 1), device='cuda:0', dtype=torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((20, 64), (64, 1), device='cuda:0', dtype=torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((20, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((64, 10), (10, 1), device='cuda:0', dtype=torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((256, 64), (64, 1), device='cuda:0', dtype=torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((784, 256), (256, 1), device='cuda:0', dtype=torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((784, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13])
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:01:48.672000 2357242 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:01:48.680000 2357242 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/e2/ce2hc26qbeda5sd5whdggpz37bj2mmpgmyra7hh5qwgtxmhvhey4.py
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['7_forward']
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ol/colfwrmjonn6c5gu5s2tz7qvx6jjafs6p7unv66ymrvyr7xfvgkg.py
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.addmm, aten.relu]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add_tensor_5
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => relu
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_5, %primals_3), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_tensor_5,), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_addmm_relu_0 = async_compile.triton('triton_poi_fused_addmm_relu_0', '''
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_relu_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_addmm_relu_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1024
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/z6/cz6cots37orhfjpczhwsiue2hnh5udsl4a36qt4o7v2ieppjyesc.py
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.addmm, aten.relu]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => add_tensor_4
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => relu_1
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_4, %primals_5), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_tensor_4,), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_addmm_relu_1 = async_compile.triton('triton_poi_fused_addmm_relu_1', '''
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_relu_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_addmm_relu_1(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7t/c7tbn4t5qipdhtcu5w3pwsoz5h4dqyrphxbcvj47esaokpogcmg6.py
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.addmm, aten.relu, aten.threshold_backward]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_tensor_3
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => relu_2
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_3, %primals_7), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_2 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_tensor_3,), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_2 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_2, 0), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_addmm_relu_threshold_backward_2 = async_compile.triton('triton_poi_fused_addmm_relu_threshold_backward_2', '''
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_relu_threshold_backward_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_addmm_relu_threshold_backward_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 80
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 20)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/dy/cdyvzuhwhdz4xvu3gpardbsq5ifooxbwnk6ftmxzukm77qrbmvpt.py
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, h, pow_1, pow_2, add_1, add_2, log, sub, sub_1, sum_1, mul_1, kld], Original ATen: [aten.mul, aten.add, aten.pow, aten.log, aten.sub, aten.sum, aten.div]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h => add
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   kld => div
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log => log
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%getitem_1, %randn), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, %mul), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%getitem, 2), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%getitem_1, 2), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_1, %pow_2), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_2, 1e-08), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_2,), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %log), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub, 1), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%sub_1,), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_1, 0.5), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_1, 3136), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%getitem_1, 1.0), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%pow_4, 2.0), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_6 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%getitem, 1.0), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%pow_6, 2.0), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_log_mul_pow_sub_sum_3 = async_compile.triton('triton_per_fused_add_div_log_mul_pow_sub_sum_3', '''
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': (8,)}, 'cls': 'AttrsDescriptor'})]},
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_log_mul_pow_sub_sum_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_log_mul_pow_sub_sum_3(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, out_ptr2, out_ptr3, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 40
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = rindex < rnumel
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 10)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex // 10
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0 + 20*r1), rmask, other=0.0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0), rmask, eviction_policy='evict_last', other=0.0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (10 + r0 + 20*r1), rmask, other=0.0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (10 + r0), rmask, eviction_policy='evict_last', other=0.0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (r2), rmask, other=0.0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 0, tl.int32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp3, tmp7)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp4 + tmp10
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp8 * tmp8
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-08
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 + tmp13
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 2.0
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp8 * tmp15
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp4 * tmp15
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp4 * tmp4
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 + tmp12
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl_math.log(tmp14)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 - tmp20
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = 1.0
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 - tmp22
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.broadcast_to(tmp23, [XBLOCK, RBLOCK])
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.where(rmask, tmp24, 0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.sum(tmp26, 1)[:, None]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 0.5
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 * tmp28
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = 0.00031887755102040814
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 * tmp30
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.broadcast_to(r2, [XBLOCK, RBLOCK])), tmp11, rmask)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r2, [XBLOCK, RBLOCK])), tmp14, rmask)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (tl.broadcast_to(r2, [XBLOCK, RBLOCK])), tmp16, rmask)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (tl.broadcast_to(r2, [XBLOCK, RBLOCK])), tmp17, rmask)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp31, None)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/dp/cdptodyzyjm5nlrxryzm5ri6crbd5f4zsmt6mu5nfqrxfvrxdpcj.py
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten.addmm, aten.sigmoid, aten.sigmoid_backward]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => add_tensor
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => sigmoid
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default, %primals_13), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=3] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_tensor,), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %sigmoid), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid, %sub_2), kwargs = {})
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_addmm_sigmoid_sigmoid_backward_4 = async_compile.triton('triton_poi_fused_addmm_sigmoid_sigmoid_backward_4', '''
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_sigmoid_sigmoid_backward_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_addmm_sigmoid_sigmoid_backward_4(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 3136
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 784)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sigmoid(tmp2)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1.0
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 - tmp3
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 * tmp5
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp3, xmask)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13 = args
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 784), (784, 1))
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (256, 784), (784, 1))
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (256, ), (1, ))
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (64, 256), (256, 1))
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (64, ), (1, ))
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (20, 64), (64, 1))
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (20, ), (1, ))
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (64, 10), (10, 1))
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (64, ), (1, ))
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (256, 64), (64, 1))
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (256, ), (1, ))
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (784, 256), (256, 1))
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (784, ), (1, ))
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [randn_like], Original ATen: [aten.randn_like]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = torch.ops.aten.randn.default([4, 10], dtype=torch.float32, device=device(type='cuda', index=0), pin_memory=False)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf5
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 256), (256, 1), torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.addmm]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(primals_1, reinterpret_tensor(primals_2, (784, 256), (1, 784), 0), out=buf0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.addmm, aten.relu]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_relu_0.run(buf1, primals_3, 1024, grid=grid(1024), stream=stream0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 64), (64, 1), torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.addmm]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf1, reinterpret_tensor(primals_4, (256, 64), (1, 256), 0), out=buf2)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, input_4], Original ATen: [aten.addmm, aten.relu]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_relu_1.run(buf3, primals_5, 256, grid=grid(256), stream=stream0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 20), (20, 1), torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.addmm]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf3, reinterpret_tensor(primals_6, (64, 20), (1, 64), 0), out=buf4)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 20), (20, 1), torch.bool)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6], Original ATen: [aten.addmm, aten.relu, aten.threshold_backward]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_relu_threshold_backward_2.run(buf4, primals_7, buf19, 80, grid=grid(80), stream=stream0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 10), (10, 1), torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 10), (10, 1), torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 10), (10, 1), torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 10), (10, 1), torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((), (), torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = buf15; del buf15  # reuse
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, h, pow_1, pow_2, add_1, add_2, log, sub, sub_1, sum_1, mul_1, kld], Original ATen: [aten.mul, aten.add, aten.pow, aten.log, aten.sub, aten.sum, aten.div]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_log_mul_pow_sub_sum_3.run(buf20, buf4, primals_7, buf6, buf7, buf14, buf16, buf17, 1, 40, grid=grid(1), stream=stream0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 64), (64, 1), torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.addmm]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf7, reinterpret_tensor(primals_8, (10, 64), (1, 10), 0), out=buf8)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf8; del buf8  # reuse
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7, input_8], Original ATen: [aten.addmm, aten.relu]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_relu_1.run(buf9, primals_9, 256, grid=grid(256), stream=stream0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_9
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 256), (256, 1), torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9], Original ATen: [aten.addmm]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf9, reinterpret_tensor(primals_10, (64, 256), (1, 64), 0), out=buf10)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = buf10; del buf10  # reuse
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9, input_10], Original ATen: [aten.addmm, aten.relu]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_relu_0.run(buf11, primals_11, 1024, grid=grid(1024), stream=stream0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 784), (784, 1), torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11], Original ATen: [aten.addmm]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf11, reinterpret_tensor(primals_12, (256, 784), (1, 256), 0), out=buf12)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = buf12; del buf12  # reuse
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 784), (784, 1), torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_11, input_12], Original ATen: [aten.addmm, aten.sigmoid, aten.sigmoid_backward]
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_addmm_sigmoid_sigmoid_backward_4.run(buf13, primals_13, buf18, 3136, grid=grid(3136), stream=stream0)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf13, (4, 1, 28, 28), (784, 784, 28, 1), 0), buf20, primals_1, buf1, buf3, buf6, buf7, buf9, buf11, buf14, buf16, buf17, buf18, primals_12, primals_10, primals_8, buf19, primals_6, primals_4, )
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 784), (784, 1), device='cuda:0', dtype=torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((256, 784), (784, 1), device='cuda:0', dtype=torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((64, 256), (256, 1), device='cuda:0', dtype=torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((20, 64), (64, 1), device='cuda:0', dtype=torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((20, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((64, 10), (10, 1), device='cuda:0', dtype=torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((256, 64), (64, 1), device='cuda:0', dtype=torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((784, 256), (256, 1), device='cuda:0', dtype=torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((784, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13])
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:50:56.381000 3916668 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:50:56.389000 3916668 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/lo/clocwf6z47vwrci4a6cbrh4wcd2k73h77c2peppg6lpdsfk7ax7d.py
